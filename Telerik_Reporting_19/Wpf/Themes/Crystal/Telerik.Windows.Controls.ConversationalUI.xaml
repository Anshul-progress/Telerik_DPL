<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="c"
        xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
        xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"
        xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
        xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
        xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
        xmlns:expander="clr-namespace:Telerik.Windows.Controls.Expander;assembly=Telerik.Windows.Controls"
        xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
        xmlns:telerikInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
        xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:animationNavigation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:chat="clr-namespace:Telerik.Windows.Controls.ConversationalUI;assembly=Telerik.Windows.Controls.ConversationalUI"
        xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:controls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.ConversationalUI">
    <ResourceDictionary.MergedDictionaries>
        <telerik:CrystalResourceDictionary/>
    </ResourceDictionary.MergedDictionaries>
    <telerik1:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter"/>
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <expander:ExpandDirectionToRotationAngleConverter x:Key="ExpandDirectionToRotationAngleConverter"/>
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter"/>
    <telerik1:CornerRadiusConverter x:Key="CornerRadiusConverter"/>
    <telerik1:NumberToVisibilityConverter x:Key="NumberToVisibilityConverter"/>
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <telerik1:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <FontFamily x:Key="TelerikWebUI">/Telerik.Windows.Controls;component/Themes/Fonts/old/TelerikWebUI.ttf#TelerikWebUI</FontFamily>
    <sys:String x:Key="GlyphArrow60Right"></sys:String>
    <sys:String x:Key="GlyphArrow60Left"></sys:String>
    <sys:String x:Key="GlyphArrowForward"></sys:String>
    <sys:String x:Key="GlyphArrowBackward"></sys:String>
    <sys:String x:Key="GlyphArrowsKpi"></sys:String>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphArrowRight"></sys:String>
    <sys:String x:Key="GlyphGrid"></sys:String>
    <sys:String x:Key="GlyphMoreVertical"></sys:String>
    <sys:String x:Key="GlyphMoreHorizontal"></sys:String>
    <sys:String x:Key="GlyphClock"></sys:String>
    <sys:String x:Key="GlyphLinkHorizontal"></sys:String>
    <sys:String x:Key="GlyphCancel"></sys:String>
    <sys:String x:Key="GlyphClose"></sys:String>
    <sys:String x:Key="GlyphPlus"></sys:String>
    <sys:String x:Key="GlyphInsertUp"></sys:String>
    <sys:String x:Key="GlyphInsertDown"></sys:String>
    <sys:String x:Key="GlyphCalendarDate"></sys:String>
    <mat:MaterialShadowDepth x:Key="PopupShadowDepth">Depth2</mat:MaterialShadowDepth>
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid x:Name="RootVisual" HorizontalAlignment="Right" RenderTransformOrigin="0 0" Opacity="0" SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.3">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}" Margin="1 0 0 0" UseLayoutRounding="True" CornerRadius="0 5 5 5">
                <ContentPresenter
                        Content="{Binding ErrorContent}"
                        Margin="7 4"
                        VerticalAlignment="Center"
                        TextBlock.Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                        TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                        TextBlock.FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
            </Border>
            <ContentControl/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
            <AdornedElementPlaceholder x:Name="Holder"/>
            <Border BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}" BorderThickness="1" CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            <Path
                    Data="{StaticResource ArrowTopRight8x8}"
                    Fill="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                    Width="8"
                    Height="8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"/>
            <ToolTipService.ToolTip>
                <ToolTip x:Name="PART_ToolTip"
                        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                        Template="{StaticResource ErrorTooltipTemplate}"
                        Placement="Right"/>
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="StaticValidationTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
                <AdornedElementPlaceholder x:Name="Holder"/>
                <Border BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}" BorderThickness="1" CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            </Grid>
            <Grid>
                <Border
                        Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                        Margin="1 0 0 0"
                        SnapsToDevicePixels="True"
                        CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}">
                    <TextBlock x:Name="PART_ToolTip"
                            FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                            FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                            Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                            Padding="4 3"
                            VerticalAlignment="Center"
                            Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="StaticValidationOnFocusTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
                <AdornedElementPlaceholder x:Name="Holder"/>
                <Border BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}" BorderThickness="1" CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            </Grid>
            <Grid Margin="1 0 0 0" Visibility="{Binding ElementName=Holder, Path=AdornedElement.IsKeyboardFocusWithin, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Border Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}" SnapsToDevicePixels="True" CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}">
                    <TextBlock x:Name="PART_ToolTip"
                            FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                            FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                            Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                            Padding="4 3"
                            VerticalAlignment="Center"
                            Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <Thickness x:Key="CalendarBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarViewBorderThickness">1 0 0 0</Thickness>
    <Thickness x:Key="CalendarViewHeaderPadding">5</Thickness>
    <Thickness x:Key="CalendarViewMargin">0 0 0 1</Thickness>
    <TextDecorationCollection x:Key="HeaderButtonTextDecoration">Underline</TextDecorationCollection>
    <FontWeight x:Key="HeaderTextFontWeight">Bold</FontWeight>
    <Thickness x:Key="ClockPadding">2 1 2 30</Thickness>
    <Thickness x:Key="ClockHeaderPadding">10 11 10 12</Thickness>
    <Thickness x:Key="ClockItemPadding">3 7</Thickness>
    <Thickness x:Key="ClockItemsMargin">1 1 0 0</Thickness>
    <chat:DoubleToBooleanConverter x:Key="DoubleToBooleanConverter"/>
    <telerik:BrushToColorConverter x:Key="BrushToColorConverter"/>
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Focusable="False"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="FocusVisual"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonStyle}"/>
    <DataTemplate x:Key="RepeatButtonLineUpTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronUp}"/>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineDownTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronDown}"/>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineLeftTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}"/>
    </DataTemplate>
    <DataTemplate x:Key="RepeatButtonLineRightTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}"/>
    </DataTemplate>
    <Style x:Key="RepeatButtonLineBaseStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RepeatButtonLineUpStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonLineBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineUpTemplate}"/>
    </Style>
    <Style x:Key="RepeatButtonLineDownStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonLineBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineDownTemplate}"/>
    </Style>
    <Style x:Key="RepeatButtonLineLeftStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonLineBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}"/>
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RepeatButtonLineRightStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonLineBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineRightTemplate}"/>
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="ContentTemplate" Value="{StaticResource RepeatButtonLineLeftTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ThumbBaseStyle" TargetType="Thumb">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="5"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Border x:Name="Track"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Track" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Track" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="Track" Property="BorderThickness" Value="1"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThumbHorizontalStyle" TargetType="Thumb" BasedOn="{StaticResource ThumbBaseStyle}">
        <Setter Property="Height" Value="16"/>
    </Style>
    <Style x:Key="ThumbVerticalStyle" TargetType="Thumb" BasedOn="{StaticResource ThumbBaseStyle}">
        <Setter Property="Width" Value="16"/>
    </Style>
    <Style x:Key="RepeatButtonBlankStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollBarHorizontalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition MaxWidth="16"/>
            </Grid.ColumnDefinitions>
            <Border
                    Grid.ColumnSpan="3"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Margin="0 -1 0 0"/>
            <RepeatButton x:Name="LeftHandle" Style="{StaticResource RepeatButtonLineLeftStyle}" Command="{x:Static ScrollBar.LineLeftCommand}" Opacity="0"/>
            <Track Name="PART_Track" Grid.Column="1" Orientation="Horizontal">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource RepeatButtonBlankStyle}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource RepeatButtonBlankStyle}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource ThumbHorizontalStyle}" RenderTransformOrigin=".5 1">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton x:Name="RightHandle" Style="{StaticResource RepeatButtonLineRightStyle}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Opacity="0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="helpers:ThemeHelper.ScrollBarsMode" Value="Compact">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To=".5" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0.140"/>
                                <DoubleAnimation To="-2" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].Y" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeStoryboard"/>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:ThemeHelper.ScrollBarsMode" Value="Auto"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To=".5" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0.140"/>
                                <DoubleAnimation To="-2" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].Y" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:ThemeHelper.ScrollBarsMode" Value="Auto"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0.140"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].Y" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverStoryboard"/>
                </MultiTrigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="RightHandle" Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
            </MultiTrigger>
            <Trigger Property="helpers:ThemeHelper.ScrollBarsMode" Value="Normal">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0.140"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].Y" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeStoryboard"/>
                </Trigger.ExitActions>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="RightHandle" Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="DisabledStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0"/>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].Y" Duration="0:0:0"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="DisabledStoryboard"/>
                </Trigger.ExitActions>
                <Setter TargetName="Thumb" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                <Setter TargetName="Thumb" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                <Setter TargetName="LeftHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="LeftHandle" Property="Background" Value="Transparent"/>
                <Setter TargetName="RightHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="RightHandle" Property="Background" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollBarVerticalControlTemplate" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16"/>
                <RowDefinition Height="1*"/>
                <RowDefinition MaxHeight="16"/>
            </Grid.RowDefinitions>
            <Border
                    Grid.RowSpan="3"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                    Margin="-1 0 0 0"/>
            <RepeatButton x:Name="TopHandle" Style="{StaticResource RepeatButtonLineUpStyle}" Content="Up" Command="{x:Static ScrollBar.LineUpCommand}" Opacity="0"/>
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">16</sys:Double>
                </Track.Resources>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource RepeatButtonBlankStyle}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource RepeatButtonBlankStyle}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource ThumbVerticalStyle}" RenderTransformOrigin="1 .5">
                        <Thumb.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
            </Track>
            <RepeatButton x:Name="BottomHandle" Style="{StaticResource RepeatButtonLineDownStyle}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" Opacity="0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="helpers:ThemeHelper.ScrollBarsMode" Value="Compact">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="CompactModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To=".5" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0.140"/>
                                <DoubleAnimation To="-2" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="CompactModeStoryboard"/>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:ThemeHelper.ScrollBarsMode" Value="Auto"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To=".5" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0.140"/>
                                <DoubleAnimation To="-2" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="helpers:ThemeHelper.ScrollBarsMode" Value="Auto"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="AutoModeMouseOverStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0.140"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="AutoModeMouseOverStoryboard"/>
                </MultiTrigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
            </MultiTrigger>
            <Trigger Property="helpers:ThemeHelper.ScrollBarsMode" Value="Normal">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="NormalModeStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0.140"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0.100"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="NormalModeStoryboard"/>
                </Trigger.ExitActions>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="DisabledStoryboard">
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Duration="0:0:0"/>
                                <DoubleAnimation To="1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Duration="0:0:0"/>
                                <DoubleAnimation To="0" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="RenderTransform.Children[1].X" Duration="0:0:0"/>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="DisabledStoryboard"/>
                </Trigger.ExitActions>
                <Setter TargetName="Thumb" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                <Setter TargetName="Thumb" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                <Setter TargetName="TopHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="TopHandle" Property="Background" Value="Transparent"/>
                <Setter TargetName="BottomHandle" Property="Opacity" Value="1"/>
                <Setter TargetName="BottomHandle" Property="Background" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="helpers:ThemeHelper.ScrollBarsMode" Value="{telerik1:CrystalResource ResourceKey=ScrollBarsMode}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadiusRight}"/>
        <Setter Property="Template" Value="{StaticResource ScrollBarVerticalControlTemplate}"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadiusBottom}"/>
                <Setter Property="Template" Value="{StaticResource ScrollBarHorizontalControlTemplate}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                        CanContentScroll="{TemplateBinding CanContentScroll}"
                        CanHorizontallyScroll="False"
                        CanVerticallyScroll="False"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Content="{TemplateBinding Content}"
                        Margin="{TemplateBinding Padding}"/>
                <ScrollBar x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        AutomationProperties.AutomationId="VerticalScrollBar"
                        Cursor="Arrow"
                        Grid.Column="1"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        Minimum="0"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ViewportSize="{TemplateBinding ViewportHeight}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                        VerticalAlignment="Bottom"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        AutomationProperties.AutomationId="HorizontalScrollBar"
                        Cursor="Arrow"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Minimum="0"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar"/>
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer"/>
    <Style x:Key="RadButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                Focusable="False"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- General IsKeyboardFocused setters -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>

                        <!-- general setters for IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- general setters for IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadButton" BasedOn="{StaticResource RadButtonStyle}"/>
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Padding" Value="5 3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Border x:Name="SecondItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.8"
                                Margin="4 4 0 0"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="ThirdthItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.8"
                                Margin="2"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="DragBackgroundVisual"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="0 0 4 4"
                                Opacity="0.8"
                                Background="{TemplateBinding Background}"/>
                        <Border Padding="{TemplateBinding BorderThickness}" Margin="0 0 4 4">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <telerik1:RadGlyph x:Name="NoneEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphCancel}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="MoveEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphArrowRight}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="CopyEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphPlus}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="LinkEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphLinkHorizontal}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="ScrollEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphArrowsKpi}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <ContentPresenter x:Name="Content"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Grid.Column="1"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move, Scroll">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll, Copy, Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy, Scroll">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Link">
                            <Setter TargetName="LinkEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll">
                            <Setter TargetName="ScrollEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikDragDrop:DragVisual" BasedOn="{StaticResource DragVisualStyle}"/>
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik1:RadListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBoxItem">
                    <Grid Background="Transparent">
                        <Grid Margin="0">
                            <Border x:Name="BorderVisual"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="FocusVisual"
                                    Background="{x:Null}"
                                    BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                    BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed"/>
                            <ContentControl x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- Focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" Property="Opacity"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxDragVisualStyle" TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource DragVisualStyle}">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5 4"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DragBackgroundVisual"
                                    Grid.ColumnSpan="2"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Opacity="0.9"/>
                            <telerik1:RadGlyph Glyph="{StaticResource GlyphCancel}" x:Name="NoneEffect" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" Margin="5 0 0 0"/>
                            <ItemsControl
                                    ItemsSource="{Binding DraggedItemsStrings}"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <Grid x:Name="lowerGrid" Grid.Row="1">
                            <Border BorderThickness="1" BorderBrush="{telerik1:CrystalResource ResourceKey=BasicBrush}" Background="{telerik1:CrystalResource ResourceKey=MainBrush}" Opacity="0.8"/>
                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                                <telerik1:RadGlyph
                                        Glyph="{StaticResource GlyphInsertUp}"
                                        FontSize="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Margin="0 0 5 0"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}"/>
                                <telerik1:RadGlyph
                                        Glyph="{StaticResource GlyphInsertDown}"
                                        FontSize="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}"/>
                                <TextBlock Text="{Binding DropPosition}" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                                <TextBlock Text=":" Margin="1 0 3 0" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                                <TextBlock Text="{Binding DropItemString}" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="lowerGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik1:RadListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.IsEnabled" Value="True"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30"/>

        <!-- ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based. -->
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStep" Value="24"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBox">
                    <Grid UseLayoutRounding="True">
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                    IsTabStop="False"
                                    mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{x:Null}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Command="telerikPrimitives:ListControl.SelectAllCommand" Key="A" Modifiers="Control"/>
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter ClipToBounds="True"/>
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter x:Name="dragVisualPlaceholder" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadListBox" BasedOn="{StaticResource RadListBoxStyle}"/>
    <Style TargetType="telerik1:RadListBoxItem" BasedOn="{StaticResource RadListBoxItemStyle}"/>
    <Style TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource ListBoxDragVisualStyle}"/>
    <Style x:Key="LabelStyle" TargetType="telerik1:Label">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:Label">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:Label" BasedOn="{StaticResource LabelStyle}"/>
    <Style x:Key="WatermarkTextBoxLabelStyle" TargetType="telerik1:Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=InputOpacity}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="Margin" Value="0 4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=HasLabel}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=IsLabelFloated}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
                <Setter Property="Opacity" Value="1"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=HasLabel}" Value="False">
                <Setter Property="Margin" Value="0"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadWatermarkTextBoxStyle" TargetType="telerik1:RadWatermarkTextBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="SelectionBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="ReadOnlyBackground" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}"/>
        <Setter Property="DisabledBackground" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="telerik1:CaretBrushHelper.CaretBrush" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="LabelStyle" Value="{StaticResource WatermarkTextBoxLabelStyle}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="LabelFloatAnimation">
                        <animation:LabelPositionAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="Out"/>
                        <animation:FontSizeAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="Out"/>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="LabelCenterAnimation">
                        <animation:LabelPositionAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="In"/>
                        <animation:FontSizeAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="In"/>
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Margin="2 0 0 0" IsTabStop="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadWatermarkTextBox">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="PART_LabelRowDefinition"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <mat:Shadow x:Name="Shadow"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="ReadOnlyVisual"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding ReadOnlyBackground}"
                                BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"/>
                        <Border x:Name="FocusVisual"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                                Grid.RowSpan="2"
                                Background="Transparent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderThickness="0"
                                IsTabStop="False"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentControl x:Name="WatermarkVisualElement"
                                Grid.RowSpan="2"
                                IsTabStop="False"
                                Opacity="{telerik1:CrystalResource ResourceKey=InputOpacity}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStyle="Italic"
                                Content="{TemplateBinding WatermarkContent}"
                                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="False"
                                Padding="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="Hidden">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <ContentPresenter x:Name="AdditionalContentHost"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Content="{TemplateBinding AdditionalContent}"
                                ContentTemplate="{TemplateBinding AdditionalContentTemplate}"/>
                        <telerik1:Label x:Name="PART_LabelVisualElement" Grid.RowSpan="2" Content="{TemplateBinding Label}" Style="{TemplateBinding LabelStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}"/>
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}"/>
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsReadOnly" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{x:Null}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBackground}"/>
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsWatermarkVisible" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WatermarkBehavior" Value="HideOnTextEntered">
                            <Setter TargetName="WatermarkVisualElement" Property="Margin" Value="4 0 0 0"/>
                        </Trigger>

                        <!-- Invalid -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasLabel" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_ContentHost" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="ToolTip">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="Static">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="StaticOnFocus">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerik1:RadWatermarkTextBox" BasedOn="{StaticResource RadWatermarkTextBoxStyle}"/>
    <Style x:Key="ExpanderHeaderButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="TabIndex" Value="{Binding TabIndex, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="VerticalAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontStyle" Value="{Binding FontStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontStretch" Value="{Binding FontStretch, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid x:Name="HeaderPanel" Background="Transparent" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Ellipse x:Name="BorderVisual"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="24"
                                    Height="24"/>
                            <Ellipse x:Name="FocusVisual"
                                    Fill="{x:Null}"
                                    IsHitTestVisible="False"
                                    Stroke="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                    StrokeThickness="2"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="24"
                                    Height="24"/>
                            <telerik1:RadGlyph x:Name="chevron" RenderTransformOrigin="0.5 0.5" Glyph="{StaticResource GlyphArrowChevronDown}" Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}">
                                <telerik1:RadGlyph.RenderTransform>
                                    <RotateTransform Angle="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}, Converter={StaticResource ExpandDirectionToRotationAngleConverter}}"/>
                                </telerik1:RadGlyph.RenderTransform>
                            </telerik1:RadGlyph>
                        </Grid>
                        <ContentPresenter x:Name="HeaderContent"
                                Grid.Column="1"
                                Margin="5 0"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chevron" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="chevron" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="HeaderContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="telerik1:RadExpander" x:Key="ExpanderTemplate">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto"/>
                        <RowDefinition x:Name="row1" Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto"/>
                        <ColumnDefinition x:Name="col1" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <telerikPrimitives:LayoutTransformControl RenderTransformOrigin="0.5 0.5" x:Name="HeaderContentTransform">
                        <telerik1:RadToggleButton x:Name="HeaderButton"
                                IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                ClickMode="{TemplateBinding ClickMode}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                Style="{TemplateBinding HeaderButtonStyle}"/>
                    </telerikPrimitives:LayoutTransformControl>
                    <ContentPresenter x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            Visibility="Collapsed"
                            UseLayoutRounding="True"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResultOrientation" Value="Vertical">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1"/>
            </Trigger>
            <Trigger Property="ResultOrientation" Value="Horizontal">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Down">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row1" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="1"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="0"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter TargetName="col1" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="1"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="telerik1:RadExpander" x:Key="RadExpanderStyle">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch"/>
        <Setter Property="VerticalHeaderAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HeaderButtonStyle" Value="{StaticResource ExpanderHeaderButtonStyle}"/>
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Collapse" Direction="Out" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="ExpandHorizontal" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="CollapseHorizontal" Direction="Out" TargetElementName="Content"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadExpander" BasedOn="{StaticResource RadExpanderStyle}"/>
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="25"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxWidth" Value="50"/>
        <Setter Property="MaxHeight" Value="50"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <Border x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentControl x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsTabStop="False"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFromCurrentView" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="ButtonType" Value="TodayDate">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekNumber">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekName">
                            <Setter TargetName="Content" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                            <Setter TargetName="Content" Property="FontWeight" Value="SemiBold"/>
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="0"/>
                            <Setter TargetName="BorderVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="calendar:CalendarButton" BasedOn="{StaticResource CalendarButtonStyle}"/>
    <Style x:Key="CalendarViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="240"/>
        <Setter Property="MinHeight" Value="250"/>
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual"
                                Grid.RowSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header" Visibility="{TemplateBinding HeaderVisibility}" MinHeight="40">
                            <ContentPresenter
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSizeL}"
                                    TextBlock.FontWeight="Bold"/>
                        </Border>
                        <ItemsPresenter Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HeaderVisibility" Value="Collapsed">
                <Setter Property="MinHeight" Value="210"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MonthViewStyle" TargetType="calendar:CalendarView" BasedOn="{StaticResource CalendarViewStyle}"/>
    <Style TargetType="calendar:CalendarView" BasedOn="{StaticResource CalendarViewStyle}"/>
    <Style x:Key="MoveRepeatButtonBaseStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="#01FFFFFF"/>
    </Style>
    <Style x:Key="MoveLeftButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource MoveRepeatButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadGlyph x:Name="Icon" Glyph="{StaticResource GlyphArrowChevronLeft}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveRightButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource MoveRepeatButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadGlyph x:Name="Icon" Glyph="{StaticResource GlyphArrowChevronRight}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSizeL}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="#01FFFFFF">
                        <TextBlock x:Name="Text"
                                Margin="{TemplateBinding Padding}"
                                Text="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Text" Property="TextDecorations" Value="{StaticResource HeaderButtonTextDecoration}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadCalendarStyle" TargetType="telerikInput:RadCalendar">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Columns" Value="1"/>
        <Setter Property="Rows" Value="1"/>
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}"/>
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarBorderThickness}"/>
        <Setter Property="Margin" Value="0 0 0 -1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="UseShortestDayNames" Value="True"/>
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Border x:Name="BackgroundVisual"
                            Grid.RowSpan="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <calendar:TransitionPanel x:Name="TransitionPanel" Grid.Row="1" ClipToBounds="True" FocusVisualStyle="{x:Null}">
                                <telerikPrimitives:RadUniformGrid x:Name="MonthViews" Margin="{StaticResource CalendarViewMargin}" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}"/>
                                <telerikPrimitives:RadUniformGrid x:Name="YearViews" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                                <telerikPrimitives:RadUniformGrid x:Name="DecadeViews" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                                <telerikPrimitives:RadUniformGrid x:Name="CenturyViews" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                            </calendar:TransitionPanel>
                            <Border x:Name="Navigation"
                                    Canvas.ZIndex="2"
                                    Visibility="{TemplateBinding HeaderVisibility}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}"
                                    Background="{telerik1:CrystalResource ResourceKey=HeaderBrush}"
                                    MinHeight="40">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="NavigationHighlightBorder"
                                            Grid.ColumnSpan="3"
                                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}"
                                            Height="8"
                                            VerticalAlignment="Top"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftTopRight}"
                                            Opacity="0.5"/>
                                    <RepeatButton x:Name="MoveLeft"
                                            AutomationProperties.Name="Move Left"
                                            Grid.Column="0"
                                            Visibility="{TemplateBinding PreviousButtonVisibility}"
                                            Style="{StaticResource MoveLeftButtonStyle}"/>
                                    <Button x:Name="Header" Grid.Column="1" Style="{StaticResource CalendarHeaderButton}"/>
                                    <RepeatButton x:Name="MoveRight"
                                            AutomationProperties.Name="Move Right"
                                            Grid.Column="2"
                                            Visibility="{TemplateBinding NextButtonVisibility}"
                                            Style="{StaticResource MoveRightButtonStyle}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" FirstColumn="1" VerticalAlignment="Stretch" Rows="7" Columns="8"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadCalendar" BasedOn="{StaticResource RadCalendarStyle}"/>
    <Style x:Key="RadClockItemStyle" TargetType="telerikInput:RadClockItem">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarBorderThickness}"/>
        <Setter Property="Margin" Value="{StaticResource ClockItemsMargin}"/>
        <Setter Property="Padding" Value="{StaticResource ClockItemPadding}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClockItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <Border x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentControl x:Name="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadClockItem" BasedOn="{StaticResource RadClockItemStyle}"/>
    <Style TargetType="telerikInput:RadClock" x:Key="RadClockStyle">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSizeL}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource ClockPadding}"/>
        <Setter Property="MinWidth" Value="270"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="1"/>
        <Setter Property="StartTime" Value="0:0:0"/>
        <Setter Property="EndTime" Value="23:59:0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikPrimitives:RadUniformGrid x:Name="UniformGrid" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="ContentText"
                            Text="{Binding}"
                            TextAlignment="Center"
                            FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BorderVisual"
                                Grid.RowSpan="2"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Border x:Name="Header"
                                Background="{telerik1:CrystalResource ResourceKey=HeaderBrush}"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopRight}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}">
                            <ContentControl
                                    IsTabStop="False"
                                    FontWeight="{StaticResource HeaderTextFontWeight}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{StaticResource ClockHeaderPadding}"
                                    MinHeight="17"/>
                        </Border>
                        <ItemsPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadClock" BasedOn="{StaticResource RadClockStyle}"/>
    <DataTemplate x:Key="TooltipTemplate">
        <Border
                Background="{telerik1:CrystalResource ResourceKey=MainBrush}"
                BorderBrush="{telerik1:CrystalResource ResourceKey=BasicBrush}"
                BorderThickness="1"
                CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}">
            <ContentControl Margin="8 4" Content="{Binding}" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="DateTimeWatermarkTemplate">
        <ContentControl Content="{Binding}" Margin="2 0 0 0" IsTabStop="False"/>
    </DataTemplate>
    <Style TargetType="telerikInput:RadDateTimePicker" x:Key="RadDateTimePickerStyle">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="CalendarStyle" Value="{StaticResource RadCalendarStyle}"/>
        <Setter Property="ClockStyle" Value="{StaticResource RadClockStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 3 2 3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource DateTimeWatermarkTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Grid.ColumnSpan="2"/>
                        <Border x:Name="BorderVisual"
                                Grid.ColumnSpan="2"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ReadOnlyVisual"
                                Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}"
                                BorderBrush="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput"
                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                AutomationProperties.HelpText="{TemplateBinding AutomationProperties.HelpText}"
                                AutomationProperties.LabeledBy="{TemplateBinding AutomationProperties.LabeledBy}"
                                mat:MaterialAssist.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopBottomLeft}"
                                mat:MaterialAssist.FocusBrush="{x:Null}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                mat:MaterialAssist.IsShadowDisabled="True"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}"
                                Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                CurrentText="{Binding CurrentDateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                                WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TabIndex="0"
                                SelectionOnFocus="{TemplateBinding SelectionOnFocus}"
                                Padding="{TemplateBinding Padding}"
                                FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Focusable="{TemplateBinding Focusable}"/>
                        <telerik:RadDropDownButton x:Name="PART_DropDownButton"
                                Grid.Column="1"
                                TabIndex="1"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopBottomRight}"
                                Padding="0"
                                DropDownIndicatorVisibility="Collapsed"
                                mat:MaterialAssist.IsShadowDisabled="True"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True"
                                IsTabStop="False"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                MinWidth="20"
                                telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True"
                                Focusable="False">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <telerikInput:RadCalendar x:Name="PART_Calendar"
                                                Grid.Column="0"
                                                Grid.Row="0"
                                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                                DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                                Culture="{TemplateBinding Culture}"
                                                SelectionMode="Single"
                                                Style="{TemplateBinding CalendarStyle}"
                                                Background="{x:Null}"
                                                BorderThickness="0"
                                                DisplayDateStart="{Binding DisplayDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                DisplayDateEnd="{Binding DisplayDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                SelectableDateStart="{Binding SelectableDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                SelectableDateEnd="{Binding SelectableDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                BlackoutDates="{Binding BlackoutDates, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <telerikInput:DateTimePickerClock x:Name="PART_Clock"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                ItemsSource="{TemplateBinding ClockItemsSource}"
                                                StartTime="{TemplateBinding StartTime}"
                                                EndTime="{TemplateBinding EndTime}"
                                                TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                                Style="{TemplateBinding ClockStyle}"
                                                BorderThickness="0"
                                                Culture="{TemplateBinding Culture}"
                                                SelectedItem="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Grid.Row="1"
                                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=BottomLeftRight}"
                                                Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                                SnapsToDevicePixels="True"/>
                                        <Grid x:Name="CloseButtonContainer" Grid.Column="1" Grid.Row="1" telerik:TouchManager.TouchMode="None">
                                            <telerik:RadButton x:Name="PART_Close"
                                                    TabIndex="2"
                                                    IsTabStop="True"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    telerik:LocalizationManager.ResourceKey="Close"
                                                    Command="{x:Static telerikInput:RadDateTimePickerCommands.Close}"
                                                    KeyboardNavigation.TabNavigation="Once"
                                                    Margin="10 8"/>
                                        </Grid>
                                        <Grid x:Name="TodayButtonContainer" Grid.Column="0" Grid.Row="1" Visibility="{TemplateBinding TodayButtonVisibility}">
                                            <telerik:RadButton x:Name="TodayButton"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{x:Static telerik:RadDateTimePickerCommands.SetToday}"
                                                    Content="{TemplateBinding TodayButtonContent}"
                                                    Margin="10 8"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <Border x:Name="Background"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding CornerRadius}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <Popup x:Name="DropDownPopup"
                                                HorizontalOffset="0"
                                                VerticalOffset="1"
                                                AllowsTransparency="True"
                                                StaysOpen="False"
                                                Focusable="false"
                                                Placement="Bottom"
                                                IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Grid x:Name="DropDownPopupGrid" Background="Transparent" Margin="10 8">
                                                <mat:Shadow
                                                        CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"
                                                        ShadowDepth="{StaticResource PopupShadowDepth}"
                                                        Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                                        mat:MaterialAssist.IsShadowDisabled="False"/>
                                                <ContentPresenter x:Name="DropDownPopupContent"
                                                        Content="{TemplateBinding DropDownContent}"
                                                        ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid>
                                <Grid x:Name="DropDownIcon" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <telerik:RadGlyph x:Name="DateTimePickerIcon"
                                            Visibility="Collapsed"
                                            Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                            Glyph="{StaticResource GlyphGrid}"
                                            FlowDirection="LeftToRight"/>
                                    <telerik:RadGlyph x:Name="CalendarIcon"
                                            Visibility="Collapsed"
                                            Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                            Glyph="{StaticResource GlyphCalendarDate}"
                                            FlowDirection="LeftToRight"/>
                                    <telerik:RadGlyph x:Name="ClockIcon"
                                            Visibility="Collapsed"
                                            Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                            Glyph="{StaticResource GlyphClock}"
                                            FlowDirection="LeftToRight"/>
                                </Grid>
                            </Grid>
                        </telerik:RadDropDownButton>
                        <Border x:Name="FocusVisual"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{x:Null}"
                                IsHitTestVisible="False"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Visibility="Collapsed"
                                Grid.ColumnSpan="2"/>
                        <Popup x:Name="PART_InputPopup"
                                telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                telerik:PopupExtensions.Placement="Top"
                                VerticalOffset="-2"
                                HorizontalOffset="-1"
                                telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                StaysOpen="False"
                                AllowsTransparency="True">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}"/>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DateTimePickerIcon" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="CalendarIcon" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="ClockIcon" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="PART_DropDownButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
                            <Setter TargetName="PART_DropDownButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_DropDownButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
                            <Setter TargetName="PART_DropDownButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="PART_DropDownButton">
                            <Setter TargetName="PART_DropDownButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="PART_DropDownButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DropDownIcon" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="PART_DropDownButton" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <!-- Focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                <Condition Property="IsOpen" SourceName="PART_DropDownButton" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="InputMode" Value="DateTimePicker">
                            <Setter TargetName="DateTimePickerIcon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Calendar" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeft}"/>
                            <Setter TargetName="PART_Calendar" Property="BorderThickness" Value="0 0 1 0"/>
                            <Setter TargetName="PART_Clock" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopRight}"/>
                        </Trigger>
                        <Trigger Property="InputMode" Value="DatePicker">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="CalendarIcon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="InputMode" Value="TimePicker">
                            <Setter TargetName="PART_Calendar" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ClockIcon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Clock" Property="Padding" Value="2"/>
                            <Setter TargetName="CloseButtonContainer" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="InputMode" Value="TimePicker"/>
                                <Condition Property="TodayButtonVisibility" Value="Visible"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TodayButtonContainer" Property="Grid.Column" Value="2"/>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="ToolTip">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="Static">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="StaticOnFocus">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerikInput:RadDateTimePicker" BasedOn="{StaticResource RadDateTimePickerStyle}"/>
    <Style TargetType="telerikInput:RadDatePicker" BasedOn="{StaticResource RadDateTimePickerStyle}">
        <Setter Property="InputMode" Value="DatePicker"/>
    </Style>
    <Style TargetType="telerikInput:RadTimePicker" BasedOn="{StaticResource RadDateTimePickerStyle}">
        <Setter Property="InputMode" Value="TimePicker"/>
    </Style>
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <telerik1:RadGlyph x:Name="grip" Glyph="{StaticResource GlyphMoreVertical}" FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="grip" Property="Glyph" Value="{StaticResource GlyphMoreHorizontal}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource GridSplitterStyle}"/>
    <Style TargetType="telerikNavigation:RadPanelBar" x:Key="RadPanelbarBaseStyle">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="0"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0 0 0 -1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="telerik:AnimationManager.IsAnimationEnabled" Value="False"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animationNavigation:PanelBarExpandCollapseAnimation AnimationName="Expand" Direction="In"/>
                    <animationNavigation:PanelBarExpandCollapseAnimation AnimationName="Collapse" Direction="Out"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikNavigation:PanelBarPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadPanelBar">
                    <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                        <Grid>
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    UseLayoutRounding="True"/>
                            <ScrollViewer x:Name="ScrollViewer"
                                    IsTabStop="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    Margin="{TemplateBinding BorderThickness}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Grid>
                    </telerikPrimitives:LayoutTransformControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="transformationRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik:AnimationManager.IsAnimationEnabled" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <telerikNavigation:PanelBarPanel VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate TargetType="telerikNavigation:RadPanelBarItem" x:Key="PanelBarItemTopLevelTemplate">
        <Grid x:Name="RootElement">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="BorderVisual"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <Border x:Name="LowerBorderVisual"
                    Grid.RowSpan="2"
                    Visibility="Collapsed"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0 0 0 1"
                    Background="{x:Null}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <Grid x:Name="HeaderRow" UseLayoutRounding="True" Background="#01FFFFFF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="arrow" Style="{TemplateBinding ExpanderStyle}"/>
                <ContentPresenter x:Name="Header"
                        Margin="{TemplateBinding Padding}"
                        Grid.ColumnSpan="4"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        TextElement.FontWeight="{TemplateBinding FontWeight}"
                        TextElement.FontSize="{TemplateBinding FontSize}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Mode=OneWay}"/>
            </Grid>
            <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                    <ScrollViewer x:Name="PART_ScrollViewer"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Disabled"
                            IsTabStop="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderBrush="{x:Null}"
                            BorderThickness="0">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </telerikPrimitives:LayoutTransformControl>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="arrow" Property="Text" Value="{StaticResource GlyphArrowChevronUp}"/>
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                <Setter TargetName="Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                <Setter TargetName="Header" Property="TextElement.FontWeight" Value="Bold"/>
                <Setter TargetName="ItemsContainer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="LowerBorderVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Header" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                <Setter TargetName="arrow" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Header">
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsScrollViewerInsideItemsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type telerikNavigation:RadPanelBar}}}" Value="True">
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter TargetName="PART_ScrollViewer" Property="VerticalScrollBarVisibility" Value="Auto"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="TextBlock" x:Key="PanelBarItemExpanderStyle">
        <Setter Property="telerik:GlyphAdorner.ShowGlyphInDesignTime" Value="True"/>
        <Setter Property="Grid.Column" Value="5"/>
        <Setter Property="Margin" Value="8 0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Text" Value="{StaticResource GlyphArrowChevronDown}"/>
        <Setter Property="FontFamily" Value="{x:Static telerik:RadGlyph.TelerikFontFamily}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
    <ControlTemplate TargetType="telerikNavigation:RadPanelBarItem" x:Key="PanelBarItemSecondLevelTemplate">
        <Grid x:Name="RootElement">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderRow" Background="Transparent" MinHeight="{TemplateBinding MinHeight}" Margin="0">
                <Border x:Name="BorderVisual"
                        Grid.RowSpan="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <ContentPresenter x:Name="Header"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        TextElement.FontWeight="{TemplateBinding FontWeight}"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Mode=OneWay}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}"/>
            </Grid>
            <Grid Visibility="Collapsed" Grid.Row="1" x:Name="ItemsContainer">
                <ItemsPresenter/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ItemsContainer" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Header" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Header" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Header">
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="telerikNavigation:RadPanelBarItem" x:Key="RadPanelbarItemBaseStyle">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="ExpanderStyle" Value="{StaticResource PanelBarItemExpanderStyle}"/>
        <Setter Property="Template" Value="{StaticResource PanelBarItemSecondLevelTemplate}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikNavigation:PanelBarPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Level" Value="1">
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="Padding" Value="8 6"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
                <Setter Property="Template" Value="{StaticResource PanelBarItemTopLevelTemplate}"/>
                <Setter Property="ExpandedLength" Value="70"/>
                <Setter Property="ExpandedMinLength" Value="28"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PanelBarGridSplitterStyle" TargetType="telerikNavigation:PanelBarGridSplitter" BasedOn="{StaticResource GridSplitterStyle}">
        <Setter Property="Margin" Value="-1 -1 -1 0"/>
        <Setter Property="Height" Value="10"/>
    </Style>
    <Style TargetType="telerikNavigation:RadPanelBar" BasedOn="{StaticResource RadPanelbarBaseStyle}" x:Key="RadPanelBarStyle"/>
    <Style TargetType="telerikNavigation:RadPanelBar" BasedOn="{StaticResource RadPanelBarStyle}"/>
    <Style TargetType="telerikNavigation:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}" x:Key="RadPanelBarItemStyle"/>
    <Style TargetType="telerikNavigation:RadPanelBarItem" BasedOn="{StaticResource RadPanelBarItemStyle}"/>
    <Style TargetType="telerikNavigation:PanelBarGridSplitter" BasedOn="{StaticResource PanelBarGridSplitterStyle}"/>
    <chat:DataFormTemplateSelector x:Key="DataFormTemplateSelector">
        <chat:DataFormTemplateSelector.CheckBoxTemplate>
            <DataTemplate>
                <CheckBox Margin="5" x:Name="check" chat:DataFormAutoBind.BindEditProperty="IsChecked" Content="{Binding PropertyDescriptor.DisplayName}"/>
            </DataTemplate>
        </chat:DataFormTemplateSelector.CheckBoxTemplate>
        <chat:DataFormTemplateSelector.TextInputTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <TextBox chat:DataFormAutoBind.BindEditProperty="Text"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.TextInputTemplate>
        <chat:DataFormTemplateSelector.DateTimeTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <telerik:RadDateTimePicker chat:DataFormAutoBind.BindEditProperty="SelectedValue"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.DateTimeTemplate>
        <chat:DataFormTemplateSelector.ComboBoxTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <telerik:RadComboBox chat:DataFormAutoBind.BindEditProperty="SelectedValue" ItemsSource="{Binding DataSource}" DisplayMemberPath="DisplayName" SelectedValuePath="Value"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.ComboBoxTemplate>
    </chat:DataFormTemplateSelector>
    <chat:MessageTemplateSelector x:Key="MessageTemplateSelector" x:Shared="false">
        <chat:MessageTemplateSelector.CalendarMessageTemplate>
            <DataTemplate>
                <telerik:RadCalendar SelectedDate="{Binding SelectedDate, Mode=TwoWay}" DisplayDate="{Binding DisplayDate}"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CalendarMessageTemplate>
        <chat:MessageTemplateSelector.ListMessageTemplate>
            <DataTemplate>
                <telerik:RadListBox
                        ItemsSource="{Binding Source}"
                        SelectionMode="{Binding SelectionMode}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                        DisplayMemberPath="{Binding DisplayMemberPath}"
                        ItemTemplate="{Binding ItemTemplate}"
                        IsSynchronizedWithCurrentItem="False"
                        MinWidth="220">
                    <telerik:EventToCommandBehavior.EventBindings>
                        <telerik:EventBinding Command="{Binding SelectionChangedCommand}" EventName="SelectionChanged" PassEventArgsToCommand="True"/>
                    </telerik:EventToCommandBehavior.EventBindings>
                </telerik:RadListBox>
            </DataTemplate>
        </chat:MessageTemplateSelector.ListMessageTemplate>
        <chat:MessageTemplateSelector.TextMessageTemplate>
            <DataTemplate>
                <chat:TextMessageControl/>
            </DataTemplate>
        </chat:MessageTemplateSelector.TextMessageTemplate>
        <chat:MessageTemplateSelector.CardTemplate>
            <DataTemplate>
                <chat:Card/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CardTemplate>
        <chat:MessageTemplateSelector.ImageCardTemplate>
            <DataTemplate>
                <chat:ImageCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageCardTemplate>
        <chat:MessageTemplateSelector.ProductCardTemplate>
            <DataTemplate>
                <chat:ProductCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ProductCardTemplate>
        <chat:MessageTemplateSelector.WeatherCardTemplate>
            <DataTemplate>
                <chat:WeatherCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.WeatherCardTemplate>
        <chat:MessageTemplateSelector.FlightCardTemplate>
            <DataTemplate>
                <chat:FlightCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.FlightCardTemplate>
        <chat:MessageTemplateSelector.CarouselTemplate>
            <DataTemplate>
                <chat:CarouselCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CarouselTemplate>
        <chat:MessageTemplateSelector.DataFormTemplate>
            <DataTemplate>
                <ItemsControl ItemsSource="{Binding Fields}" ItemTemplateSelector="{StaticResource DataFormTemplateSelector}" Margin="5" MinWidth="220"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.DataFormTemplate>
        <chat:MessageTemplateSelector.ImageTemplate>
            <DataTemplate>
                <Image Source="{Binding Source}" Width="{Binding Size.Width}" Height="{Binding Size.Height}" Stretch="{Binding Stretch}"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageTemplate>
        <chat:MessageTemplateSelector.GifTemplate>
            <DataTemplate>
                <MediaElement Width="{Binding Size.Width}" Height="{Binding Size.Height}" Stretch="{Binding Stretch}" Source="{Binding Source}" LoadedBehavior="Play" UnloadedBehavior="Play">
                    <telerik:EventToCommandBehavior.EventBindings>
                        <telerik:EventBinding Command="{Binding MediaEndedCommand}" EventName="MediaEnded" PassEventArgsToCommand="True"/>
                    </telerik:EventToCommandBehavior.EventBindings>
                </MediaElement>
            </DataTemplate>
        </chat:MessageTemplateSelector.GifTemplate>
    </chat:MessageTemplateSelector>
    <Style x:Key="ChatButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="CornerRadius" Value="36"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="8 0"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <Border x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChatToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid>
                        <Border x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeBreakControlStyle" TargetType="{x:Type chat:TimeBreakControl}">
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TimeBreakControl}">
                    <TextBlock
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{Binding Header}"
                            Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:TimeBreakControl}" BasedOn="{StaticResource TimeBreakControlStyle}"/>
    <Style x:Key="TypingIndicatorStyle" TargetType="{x:Type chat:TypingIndicator}">
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Padding" Value="16 0"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TypingIndicator}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Grid.Loaded">
                                <BeginStoryboard>
                                    <Storyboard Name="waitingAnimation" RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="Dot1" BeginTime="0:0:0.1" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Dot2" BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Dot3" BeginTime="0:0:0.3" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Image Source="{TemplateBinding Icon}" Stretch="UniformToFill" Width="28" Height="28" RenderOptions.BitmapScalingMode="HighQuality" SnapsToDevicePixels="True">
                            <Image.Clip>
                                <EllipseGeometry RadiusX="14" RadiusY="14" Center="14, 14"/>
                            </Image.Clip>
                        </Image>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0">
                            <Ellipse Name="Dot1" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8"/>
                            <Ellipse Name="Dot2" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8" Margin="4 0 0 0"/>
                            <Ellipse Name="Dot3" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8" Margin="4 0 0 0"/>
                        </StackPanel>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{TemplateBinding Text}" Opacity="1" Margin="5 -2 5 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:TypingIndicator}" BasedOn="{StaticResource TypingIndicatorStyle}"/>
    <Style TargetType="{x:Type chat:InlineMessageControl}" x:Key="InlineMessageControlStyle">
        <Style.Resources>
            <Style TargetType="telerik:RadCalendar" BasedOn="{StaticResource RadCalendarStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="telerik:RadListBox" BasedOn="{StaticResource RadListBoxStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2"/>
        <Setter Property="CornerRadiusValue" Value="10"/>
        <Setter Property="FontSize" Value="{telerik:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:InlineMessageControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <mat:Shadow
                                Grid.Column="1"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{Binding CalculatedCornerRadius}"
                                Background="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
                        <Grid Grid.Column="1" x:Name="ContentPresenterGrid">
                            <mat:ClipBorder CornerRadius="{Binding CalculatedCornerRadius}">
                                <ContentPresenter/>
                            </mat:ClipBorder>
                        </Grid>
                        <ItemsControl
                                ItemsSource="{Binding ReportActions}"
                                x:Name="ReportActionsInline"
                                HorizontalAlignment="Center"
                                Grid.Row="1"
                                Grid.Column="1"
                                Visibility="{Binding ReportCommandsVisibility}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton Command="{Binding Command}" CommandParameter="{Binding}" Content="{Binding Text}" Visibility="{Binding CommandButtonVisibility}" Margin="5 5 5 0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock x:Name="CreationDateTextBlock"
                                Grid.Row="0"
                                Grid.Column="2"
                                Margin="5 0"
                                FontSize="10"
                                Visibility="{Binding CreationDateVisibility}"
                                Text="{Binding CreationDate, StringFormat={}{0:t}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Opacity="1"/>
                        <TextBlock x:Name="StatusTextBlock"
                                Text="{Binding Status}"
                                Visibility="{Binding StatusVisibility}"
                                Grid.Row="2"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Margin="0 5"
                                Opacity="1"
                                FontSize="10"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Alignment}" Value="Right">
                            <Setter TargetName="CreationDateTextBlock" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="StatusTextBlock" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Null}">
                            <Setter TargetName="StatusTextBlock" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <BeginStoryboard.Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.280"/>
                                    </Storyboard>
                                </BeginStoryboard.Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextMessageControlStyle" TargetType="{x:Type chat:TextMessageControl}">
        <Style.Resources>
            <Style TargetType="TextBox"/>
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>
        <Setter Property="Text" Value="{Binding Text}"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TextMessageControl}">
                    <Grid MinHeight="{TemplateBinding MinHeight}">
                        <Border x:Name="MessageBorder" Background="{TemplateBinding Background}">
                            <TextBox
                                    Foreground="{TemplateBinding Foreground}"
                                    BorderThickness="0"
                                    Padding="{TemplateBinding Padding}"
                                    Background="Transparent"
                                    x:Name="PART_TextMessageTextBox"
                                    VerticalAlignment="Center"
                                    telerik:TouchManager.ShouldSuspendMousePromotion="True"
                                    IsReadOnly="True"
                                    TextWrapping="Wrap"
                                    ScrollViewer.PanningMode="None"
                                    AcceptsReturn="True"
                                    Text="{TemplateBinding Text}">
                                <telerik:RadContextMenu.ContextMenu>
                                    <telerik:RadContextMenu>
                                        <telerik:RadMenuItem Command="ApplicationCommands.Copy"/>
                                        <telerik:RadMenuItem Command="ApplicationCommands.SelectAll"/>
                                    </telerik:RadContextMenu>
                                </telerik:RadContextMenu.ContextMenu>
                            </TextBox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=HorizontalAlignment}" Value="Right">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentSelectedBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:InlineMessageControl}" BasedOn="{StaticResource InlineMessageControlStyle}"/>
    <Style TargetType="{x:Type chat:TextMessageControl}" BasedOn="{StaticResource TextMessageControlStyle}"/>
    <Style x:Key="MessageGroupStyle" TargetType="{x:Type chat:MessageGroup}">
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="ItemsSource" Value="{Binding Messages}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <chat:InlineMessageControl ContentTemplateSelector="{StaticResource MessageTemplateSelector}" Content="{Binding Message}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:MessageGroup}">
                    <DockPanel>
                        <Image
                                Source="{Binding Author.Avatar}"
                                DockPanel.Dock="{Binding AvatarAlignment}"
                                Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                SnapsToDevicePixels="True"
                                Margin="0 20 0 0"
                                Height="28"
                                Width="28"
                                VerticalAlignment="Top"
                                Stretch="UniformToFill">
                            <Image.Clip>
                                <EllipseGeometry RadiusX="14" RadiusY="14" Center="14, 14"/>
                            </Image.Clip>
                        </Image>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="20"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Opacity="1" TextElement.FontSize="10" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <TextBlock x:Name="CreationDateTextBlock" Text="{Binding CreationDate, StringFormat={}{0:t}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"/>
                                <TextBlock x:Name="AuthorNameTextBlock" Text="{Binding Author.Name, StringFormat=', {0}'}" Visibility="{Binding Author.IsCurrent, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                            </StackPanel>
                            <ItemsPresenter Grid.Row="1"/>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CreationDateTextBlock" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="AuthorNameTextBlock" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:MessageGroup}" BasedOn="{StaticResource MessageGroupStyle}"/>
    <Style x:Key="ChatMessageListStyle" TargetType="{x:Type chat:ChatMessageList}">
        <Setter Property="Padding" Value="16 20 16 16"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsPresenter}, Path=ActualWidth}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatMessageList}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled"
                                CanContentScroll="True"
                                PanningMode="None"
                                BorderThickness="0"
                                Background="{x:Null}">
                            <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatMessageList}" BasedOn="{StaticResource ChatMessageListStyle}"/>
    <Style x:Key="ChatCardBaseStyle" TargetType="{x:Type chat:Card}">
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="MinHeight" Value="28"/>
    </Style>
    <Style x:Key="ChatCardTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{telerik:CrystalResource ResourceKey=FontSizeXL}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ChatCardSubTitleStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="CardStyle" TargetType="{x:Type chat:Card}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:Card}">
                    <Border
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Margin="5 5 5 10">
                                <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                                <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                                <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap"/>
                            </StackPanel>
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding ReportActions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton Margin="5 0 5 5" Command="{Binding Command}" Content="{Binding Text}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageCardStyle" TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource, Mode=TwoWay}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ImageCard}">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" Stretch="UniformToFill" Grid.Row="0" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="1" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap"/>
                        </StackPanel>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProductCardStyle" TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Rating" Value="{Binding Rating, Mode=TwoWay}"/>
        <Setter Property="Price" Value="{Binding Price, Mode=TwoWay}"/>
        <Setter Property="RatingItemsCount" Value="{Binding RatingItemsCount}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ProductCard}">
                    <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" Stretch="UniformToFill" Grid.Row="0" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                            <telerik:RadRating
                                    NumberOfItemsToGenerate="{TemplateBinding RatingItemsCount}"
                                    Value="{TemplateBinding Rating}"
                                    Precision="Exact"
                                    IsReadOnly="True"
                                    Margin="0 0 0 5"
                                    Visibility="{Binding RatingItemsCount, Converter={StaticResource NumberToVisibilityConverter}}">
                                <telerik:RadRating.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </telerik:RadRating.ItemsPanel>
                            </telerik:RadRating>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap" Margin="0 0 0 5"/>
                            <TextBlock x:Name="Price" Text="{TemplateBinding Price}" Style="{StaticResource ChatCardTitleStyle}"/>
                        </StackPanel>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Price" Value="{x:Null}">
                            <Setter TargetName="Price" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WeatherCardStyle" TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Temperature" Value="{Binding Temperature, Mode=TwoWay}"/>
        <Setter Property="Humidity" Value="{Binding Humidity, Mode=TwoWay}"/>
        <Setter Property="Dew" Value="{Binding Dew, Mode=TwoWay}"/>
        <Setter Property="Pressure" Value="{Binding Pressure, Mode=TwoWay}"/>
        <Setter Property="Wind" Value="{Binding Wind, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:WeatherCard}">
                    <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="Title" Grid.ColumnSpan="2" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}" HorizontalAlignment="Center" Margin="0 20 0 0"/>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" HorizontalAlignment="Left" Width="{TemplateBinding Width}" Stretch="UniformToFill" Grid.Row="1" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}" TextAlignment="Center"/>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap" TextAlignment="Center"/>
                            <TextBlock x:Name="Temperature" Text="{TemplateBinding Temperature}" TextWrapping="Wrap" FontSize="30" TextAlignment="Center"/>
                        </StackPanel>
                        <Border x:Name="CardDetails"
                                Grid.Row="3"
                                Grid.ColumnSpan="2"
                                Padding="5 5 5 10"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="HumidityRow" Height="Auto"/>
                                    <RowDefinition x:Name="DewRow" Height="Auto"/>
                                    <RowDefinition x:Name="PressureRow" Height="Auto"/>
                                    <RowDefinition x:Name="WindRow" Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock telerik:LocalizationManager.ResourceKey="Chat_Humidity" TextWrapping="Wrap" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Humidity}" TextWrapping="Wrap" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock telerik:LocalizationManager.ResourceKey="Chat_Dew" TextWrapping="Wrap" Grid.Row="1" FontWeight="Bold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Dew}" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock telerik:LocalizationManager.ResourceKey="Chat_Pressure" TextWrapping="Wrap" Grid.Row="2" FontWeight="Bold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Pressure}" TextWrapping="Wrap" Grid.Row="2" Grid.Column="1"/>
                                <TextBlock telerik:LocalizationManager.ResourceKey="Chat_WindSpeed" TextWrapping="Wrap" Grid.Row="3" FontWeight="Bold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Wind}" TextWrapping="Wrap" Grid.Row="3" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="MaxWidth" Value="100"/>
                            <Setter TargetName="CardImage" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="5"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="Title" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="Title" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="CardDetails" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="CardDetails" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="CardDetails" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="CardDetails" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="4"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Portrait"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Margin" Value="0 10 0 0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Temperature" Value="{x:Null}">
                            <Setter TargetName="Temperature" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Humidity" Value="{x:Null}">
                            <Setter TargetName="HumidityRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Dew" Value="{x:Null}">
                            <Setter TargetName="DewRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Pressure" Value="{x:Null}">
                            <Setter TargetName="PressureRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Wind" Value="{x:Null}">
                            <Setter TargetName="WindRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlightCardStyle" TargetType="{x:Type chat:FlightCard}">
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="0 1"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="PassengerName" Value="{Binding PassengerName}"/>
        <Setter Property="Flights" Value="{Binding Flights}"/>
        <Setter Property="Total" Value="{Binding Total}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:FlightCard}">
                    <Border CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}" Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition x:Name="TotalRow" Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="PassengerName" Orientation="Vertical" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10">
                                <TextBlock telerik:LocalizationManager.ResourceKey="Chat_Passenger" Style="{StaticResource ChatCardTitleStyle}" Margin="0"/>
                                <TextBlock Text="{TemplateBinding PassengerName}" Style="{StaticResource ChatCardTitleStyle}" FontWeight="Normal" Margin="0"/>
                            </StackPanel>
                            <Border Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <TextBlock x:Name="DepartureLabel"
                                    Grid.Row="1"
                                    HorizontalAlignment="Left"
                                    telerik:LocalizationManager.ResourceKey="Chat_Departure"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    FontSize="16"
                                    Margin="10 10 5 0"/>
                            <TextBlock x:Name="ArrivalsLabel"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    TextAlignment="Right"
                                    telerik:LocalizationManager.ResourceKey="Chat_Arrival"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    FontSize="16"
                                    Margin="5 10 10 0"/>
                            <ItemsControl x:Name="FlightsItemsControl" Grid.Row="2" Grid.ColumnSpan="2" Margin="10 0 10 10" ItemsSource="{TemplateBinding Flights}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0 15">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding DepartureCity}" Style="{StaticResource ChatCardSubTitleStyle}" Margin="0 0 0 -5" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding DepartureAirport}" FontSize="30" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding DepartureDateTime, StringFormat={}{0:d}}" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding DepartureDateTime, StringFormat={}{0:t}}" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <Image x:Name="CardImage"
                                                    Grid.Column="1"
                                                    Grid.RowSpan="3"
                                                    MaxWidth="50"
                                                    MaxHeight="50"
                                                    Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"
                                                    Stretch="Uniform"/>
                                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding ArrivalCity}" Style="{StaticResource ChatCardSubTitleStyle}" TextAlignment="Right" Margin="0 0 0 -5" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding ArrivalAirport}" TextAlignment="Right" FontSize="30" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding ArrivalDateTime, StringFormat={}{0:d}}" TextAlignment="Right" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding ArrivalDateTime, StringFormat={}{0:t}}" TextAlignment="Right" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock
                                    Grid.Row="3"
                                    TextAlignment="Left"
                                    telerik:LocalizationManager.ResourceKey="Chat_Total"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Margin="10 10 5 10"
                                    FontWeight="Normal"/>
                            <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    TextAlignment="Right"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Margin="5 10 10 10"
                                    Text="{Binding Total, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"/>
                            <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FlightsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="FlightsItemsControl" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="DepartureLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrivalsLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="PassengerName" Value="{x:Null}">
                            <Setter TargetName="PassengerName" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Total" Value="{x:Null}">
                            <Setter TargetName="TotalRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CarouselCardStyle" TargetType="{x:Type chat:CarouselCard}">
        <Style.Resources>
            <Style TargetType="{x:Type telerikNavigation:CarouselItemContentPresenter}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                            <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource MessageTemplateSelector}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type chat:Card}" BasedOn="{StaticResource CardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ImageCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ProductCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource WeatherCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:FlightCard}" BasedOn="{StaticResource FlightCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>
        <Setter Property="Source" Value="{Binding Source, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:CarouselCard}">
                    <Border
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <telerik:RadCarousel HorizontalScrollBarVisibility="Hidden" Height="{Binding CarouselHeight}" ItemsSource="{TemplateBinding Source}" SelectedItem="{Binding SelectedItem}">
                                <telerik:RadCarousel.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <telerik:RadCarouselPanel IsScalingEnabled="False" IsContinuous="True" ItemsPerPage="3">
                                            <telerik:RadCarouselPanel.Path>
                                                <Path Stretch="Fill">
                                                    <Path.Data>
                                                        <LineGeometry StartPoint="300,200" EndPoint="20,200"/>
                                                    </Path.Data>
                                                </Path>
                                            </telerik:RadCarouselPanel.Path>
                                        </telerik:RadCarouselPanel>
                                    </ItemsPanelTemplate>
                                </telerik:RadCarousel.ItemsPanel>
                                <telerik:EventToCommandBehavior.EventBindings>
                                    <telerik:EventBinding Command="{Binding LoadedCommand}" EventName="Loaded" PassEventArgsToCommand="True"/>
                                </telerik:EventToCommandBehavior.EventBindings>
                            </telerik:RadCarousel>
                            <Grid HorizontalAlignment="Stretch">
                                <telerik:CarouselScrollButton x:Name="PART_PageLeftButton" HorizontalAlignment="Left" CarouselScrollButtonType="LineLeft" Height="30" Margin="10 0 0 0"/>
                                <telerik:CarouselScrollButton x:Name="PART_PageRightButton" HorizontalAlignment="Right" CarouselScrollButtonType="LineRight" Height="30" Margin="0 0 10 0"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:Card}" BasedOn="{StaticResource CardStyle}"/>
    <Style TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ImageCardStyle}"/>
    <Style TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ProductCardStyle}"/>
    <Style TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource WeatherCardStyle}"/>
    <Style TargetType="{x:Type chat:FlightCard}" BasedOn="{StaticResource FlightCardStyle}"/>
    <Style TargetType="{x:Type chat:CarouselCard}" BasedOn="{StaticResource CarouselCardStyle}"/>
    <Style x:Key="ChatOverlayStyle" TargetType="{x:Type chat:ChatOverlay}">
        <Setter Property="HeaderBackground" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="FooterBackground" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="ActionsBackground" Value="{telerik:CrystalResource ResourceKey=HeaderBrush}"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatOverlay}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Header" Height="Auto"/>
                                <RowDefinition x:Name="Main"/>
                                <RowDefinition x:Name="Footer" Height="Auto"/>
                                <RowDefinition x:Name="Actions"/>
                            </Grid.RowDefinitions>
                            <Grid MinHeight="52">
                                <Border Background="{TemplateBinding HeaderBackground}"/>
                                <ContentControl
                                        Content="{Binding OverlayViewModel.Header}"
                                        ContentTemplate="{Binding OverlayViewModel.HeaderTemplate}"
                                        FontSize="13"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Margin="10 5"/>
                            </Grid>
                            <Border x:Name="PART_MainBorder" Background="{TemplateBinding MainBackground}" Grid.Row="1">
                                <ContentPresenter/>
                            </Border>
                            <Grid Grid.Row="2" MinHeight="52">
                                <Border Background="{TemplateBinding FooterBackground}"/>
                                <ContentControl
                                        Content="{Binding OverlayViewModel.Footer}"
                                        ContentTemplate="{Binding OverlayViewModel.FooterTemplate}"
                                        FontSize="13"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Margin="10 5"/>
                            </Grid>
                            <Border
                                    Grid.Row="3"
                                    Background="{TemplateBinding ActionsBackground}"
                                    BorderThickness="0 1 0 0"
                                    MinHeight="52"
                                    SnapsToDevicePixels="True"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ItemsControl ItemsSource="{Binding ReportActions}" x:Name="ReportActionsOverlay" HorizontalAlignment="Right">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <telerik:RadButton
                                                    Margin="0 0 10 0"
                                                    Command="{Binding Command}"
                                                    CommandParameter="{Binding}"
                                                    Content="{Binding Text}"
                                                    Visibility="{Binding CommandButtonVisibility}"
                                                    VerticalAlignment="Center"
                                                    MinWidth="60"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatOverlay}" BasedOn="{StaticResource ChatOverlayStyle}"/>
    <Style x:Key="ChatPopupPlaceholderStyle" TargetType="{x:Type chat:ChatPopupPlaceholder}">
        <Setter Property="MaxHeight" Value="300"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatPopupPlaceholder}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0"/>
                            <ItemsControl ItemsSource="{Binding ReportActions}" x:Name="ReportActionsPopup" HorizontalAlignment="Center" Grid.Row="1">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadButton Margin="3" CommandParameter="{Binding}" Command="{Binding Command}" Content="{Binding Text}" Visibility="{Binding CommandButtonVisibility}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatPopupPlaceholder}" BasedOn="{StaticResource ChatPopupPlaceholderStyle}"/>
    <Style x:Key="RadChatStyle" TargetType="{x:Type controls:RadChat}">
        <Style.Setters>
            <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            <Setter Property="FontFamily" Value="{telerik:CrystalResource ResourceKey=FontFamily}"/>
            <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AlternativeBrush}"/>
            <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=BasicBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MessageListTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="MessagePopupTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="MessageOverlayTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:RadChat}">
                        <Grid>
                            <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <chat:ChatMessageList x:Name="PART_MessageList" Grid.Row="0" Margin="{TemplateBinding Padding}"/>
                                    <chat:ChatPopupPlaceholder x:Name="PART_PopupPlaceholder" Grid.Row="1" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}"/>
                                    <ItemsControl x:Name="PART_SuggestionItemsControl"
                                            Grid.Row="2"
                                            chat:ScrollViewerScrollingHelper.IsEnabled="True"
                                            Padding="12 4"
                                            ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActions}"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActionsVisibility}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <telerik:RadButton x:Name="SuggestionButton"
                                                        AutomationProperties.Name="{Binding Text}"
                                                        telerik:TouchManager.ShouldSuspendMousePromotion="True"
                                                        Command="{Binding Command}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}}"
                                                        HorizontalAlignment="Center"
                                                        Margin="4"
                                                        Padding="4 2"
                                                        VerticalAlignment="Center"
                                                        MinHeight="24">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image
                                                                Source="{Binding Icon}"
                                                                Height="16"
                                                                Width="16"
                                                                Stretch="UniformToFill"
                                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}">
                                                            <Image.Clip>
                                                                <EllipseGeometry RadiusX="8" RadiusY="8" Center="8, 8"/>
                                                            </Image.Clip>
                                                        </Image>
                                                        <TextBlock
                                                                Text="{Binding Text}"
                                                                VerticalAlignment="Center"
                                                                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}, Path=Padding}"
                                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToVisibilityConverter}}"/>
                                                    </StackPanel>
                                                </telerik:RadButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.Template>
                                            <ControlTemplate TargetType="ItemsControl">
                                                <ScrollViewer HorizontalScrollBarVisibility="Auto" BorderThickness="0" Background="{x:Null}">
                                                    <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActionsOrientation}"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <chat:TypingIndicator
                                            Grid.Row="3"
                                            Text="{TemplateBinding TypingIndicatorText}"
                                            Icon="{TemplateBinding TypingIndicatorIcon}"
                                            Visibility="{TemplateBinding TypingIndicatorVisibility}"
                                            x:Name="PART_TypingIndicator"/>
                                    <Border x:Name="InputBoxContainer"
                                            Grid.Row="4"
                                            BorderThickness="0 1 0 0"
                                            Height="52"
                                            Background="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"
                                            BorderBrush="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}">
                                        <Grid Margin="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <telerik:RadWatermarkTextBox x:Name="PART_InputBox"
                                                    AutomationProperties.Name="Input Box"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="3"
                                                    WatermarkContent="{TemplateBinding InputBoxWatermarkContent}"
                                                    AcceptsReturn="True"
                                                    Padding="8 3 84 3"/>
                                            <telerik:RadToggleButton x:Name="PART_ToolBarButton"
                                                    Grid.Column="1"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolBarCommands.Count, Converter={StaticResource NumberToVisibilityConverter}}"
                                                    Style="{StaticResource ChatToggleButtonStyle}"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsToolBarOpen, Mode=TwoWay}">
                                                <telerik:RadGlyph Glyph="{StaticResource GlyphMoreHorizontal}" TextOptions.TextRenderingMode="Aliased"/>
                                            </telerik:RadToggleButton>
                                            <telerik:RadButton x:Name="SendButton"
                                                    Grid.Column="2"
                                                    Style="{StaticResource ChatButtonStyle}"
                                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SendCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                <Path Fill="{Binding ElementName=SendButton, Path=Foreground}" StrokeThickness="0" Data="M1,9 L18,9 0,16 z M0,0 L18,8 1,8 z" Stretch="None" SnapsToDevicePixels="True"/>
                                            </telerik:RadButton>
                                        </Grid>
                                    </Border>
                                    <Border
                                            Name="PART_ToolBar"
                                            Grid.Row="5"
                                            Height="52"
                                            CornerRadius="0 0 1 1"
                                            Background="{telerik:CrystalResource ResourceKey=HeaderBrush}"
                                            BorderThickness="0 1 0 0"
                                            SnapsToDevicePixels="True"
                                            Visibility="{Binding ElementName=PART_ToolBarButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            BorderBrush="{TemplateBinding BorderBrush}">
                                        <ItemsControl ItemsSource="{TemplateBinding ToolBarCommands}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <telerik:RadButton
                                                            ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplateSelector}"
                                                            ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplate}"
                                                            Command="{Binding Command}"
                                                            Content="{Binding}"
                                                            Margin="5 5 0 5"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Border>
                                    <chat:ChatOverlay x:Name="PART_Overlay" Grid.RowSpan="5" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SuggestedActionsOrientation" Value="Vertical">
                                <Setter TargetName="PART_SuggestionItemsControl" Property="MaxHeight" Value="104"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type controls:RadChat}" BasedOn="{StaticResource RadChatStyle}"/>
    <ControlTemplate x:Key="AIPromptRadioButtonTemplate" TargetType="telerik:RadRadioButton">
        <Grid>
            <mat:Shadow
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
            <Border x:Name="BorderVisual"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
            <Border x:Name="FocusVisual"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Visibility="Collapsed"
                    IsHitTestVisible="False"
                    BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                    Background="{x:Null}"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.FocusBrush)}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
            <ContentPresenter x:Name="Content"
                    Margin="{TemplateBinding Padding}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsBackgroundVisible" Value="False"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsBackgroundVisible" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="0"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Hidden"/>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Hidden"/>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="AIPromptRadioButtonStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="helpers:ThemeHelper.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template" Value="{StaticResource AIPromptRadioButtonTemplate}"/>
    </Style>
    <ItemsPanelTemplate x:Key="SuggestionsItemsPanel">
        <StackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>
    <Style x:Key="SuggestionsExpanderStyle" TargetType="telerik:RadExpander" BasedOn="{StaticResource RadExpanderStyle}">
        <Setter Property="Padding" Value="0 12 0 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsExpanded" Value="True"/>
    </Style>
    <Style x:Key="AIPromptAccentButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="85"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptInputViewStyle" TargetType="controls:AIPromptInputView">
        <Setter Property="Padding" Value="16"/>
        <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="FooterBackground" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="FooterMinHeight" Value="36"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptInputView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled"
                                CanContentScroll="True"
                                PanningMode="None"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <telerik:RadWatermarkTextBox x:Name="PART_InputTextBox"
                                        AcceptsReturn="True"
                                        MaxHeight="200"
                                        TextWrapping="Wrap"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{Binding InputText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Style="{Binding InputTextBoxStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                <telerik:RadExpander
                                        Grid.Row="1"
                                        x:Name="PART_SuggestionsExpander"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Style="{Binding SuggestionsExpanderStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        HorizontalHeaderAlignment="Left"
                                        Visibility="{Binding AreSuggestionsVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Header="{Binding SuggestionsHeaderContent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        HeaderTemplate="{Binding SuggestionsHeaderContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}">
                                    <ItemsControl ItemsSource="{Binding Suggestions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}" ItemsPanel="{StaticResource SuggestionsItemsPanel}" ItemTemplate="{Binding SuggestionItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                </telerik:RadExpander>
                            </Grid>
                        </ScrollViewer>
                        <Border x:Name="Footer"
                                MinHeight="{TemplateBinding FooterMinHeight}"
                                Background="{TemplateBinding FooterBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Grid.Row="1"/>
                        <telerik:RadButton x:Name="PART_PromptButton"
                                Grid.Row="1"
                                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=Left}"
                                Style="{StaticResource AIPromptAccentButtonStyle}"
                                Content="{Binding InputButtonContent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                ContentTemplate="{Binding InputButtonContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                Command="{Binding PromptRequestCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputItemsControlStyle" TargetType="chat:AIPromptOutputItemsControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputItemsControl">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" BorderThickness="0" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputItemStyle" TargetType="chat:AIPromptOutputItem">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="CornerRadius" Value="{telerik:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Padding" Value="12 8 12 4"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="InputText" Value="{Binding InputText}"/>
        <Setter Property="ResponseText" Value="{Binding ResponseText}"/>
        <Setter Property="Rating" Value="{Binding Rating}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputItem">
                    <Grid>
                        <mat:Shadow x:Name="Shadow"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="PART_Title" Text="{Binding Title}" FontWeight="SemiBold" FontSize="{telerik:CrystalResource ResourceKey=FontSizeL}"/>
                                <TextBlock x:Name="PART_InputText"
                                        Grid.Row="1"
                                        Text="{Binding InputText}"
                                        Margin="0 8 0 0"
                                        FontSize="{telerik:CrystalResource ResourceKey=FontSizeS}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputText, Converter={StaticResource NullToVisibilityConverter}}"/>
                            </Grid>
                            <TextBlock x:Name="PART_ResponseText" Grid.Row="1" Text="{Binding ResponseText}" Margin="0 12 0 0" TextWrapping="Wrap"/>
                            <Grid Grid.Row="2" Margin="0 12 0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <telerik:RadButton x:Name="PART_CopyButton"
                                            Command="{Binding OutputItemCopyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            VerticalAlignment="Center"
                                            IsBackgroundVisible="False"
                                            MinWidth="80">
                                        <StackPanel Orientation="Horizontal">
                                            <telerik:RadSvgImage
                                                    Width="16"
                                                    Height="16"
                                                    Focusable="False"
                                                    UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/copy_icon.svg"
                                                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                    IsTabStop="False"/>
                                            <TextBlock Text="{telerik:LocalizableResource Key=AIPrompt_Copy}" Margin="4 0 0 0"/>
                                        </StackPanel>
                                    </telerik:RadButton>
                                    <telerik:RadButton x:Name="PART_RetryButton"
                                            Command="{Binding OutputItemRetryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            VerticalAlignment="Center"
                                            Margin="4 0"
                                            IsBackgroundVisible="False"
                                            MinWidth="80">
                                        <StackPanel Orientation="Horizontal">
                                            <telerik:RadSvgImage
                                                    Width="16"
                                                    Height="16"
                                                    Focusable="False"
                                                    UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/retry_icon.svg"
                                                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                    IsTabStop="False"/>
                                            <TextBlock Text="{telerik:LocalizableResource Key=AIPrompt_Retry}" Margin="6 0 0 0"/>
                                        </StackPanel>
                                    </telerik:RadButton>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <telerik:RadRadioButton x:Name="PART_LikeButton"
                                            IsChecked="{Binding Rating, Converter={StaticResource DoubleToBooleanConverter}, ConverterParameter='like'}"
                                            Command="{Binding OutputItemRatingChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            MinWidth="24"
                                            MinHeight="24"
                                            Margin="4 0"
                                            Style="{StaticResource AIPromptRadioButtonStyle}">
                                        <telerik:RadSvgImage
                                                Width="16"
                                                Height="16"
                                                Focusable="False"
                                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/thumbs_up_icon.svg"
                                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                IsTabStop="False"/>
                                    </telerik:RadRadioButton>
                                    <telerik:RadRadioButton x:Name="PART_DislikeButton"
                                            IsChecked="{Binding Rating, Converter={StaticResource DoubleToBooleanConverter}, ConverterParameter='dislike'}"
                                            Command="{Binding OutputItemRatingChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:RadAIPrompt}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            MinWidth="24"
                                            MinHeight="24"
                                            Style="{StaticResource AIPromptRadioButtonStyle}">
                                        <telerik:RadSvgImage
                                                Width="16"
                                                Height="16"
                                                Focusable="False"
                                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/thumbs_down_icon.svg"
                                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                IsTabStop="False"/>
                                    </telerik:RadRadioButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Title" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="PART_InputText" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="PART_ResponseText" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputPagerStyle" TargetType="chat:AIPromptOutputPager">
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Padding" Value="12 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputPager">
                    <Border x:Name="Footer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <telerik:RadButton x:Name="PART_MoveToFirstPage"
                                        Command="{Binding MoveToFirstPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Padding="0"
                                        MinWidth="24"
                                        MinHeight="24"
                                        IsBackgroundVisible="False">
                                    <telerik:RadGlyph Glyph="{StaticResource GlyphArrowBackward}"/>
                                </telerik:RadButton>
                                <telerik:RadButton x:Name="PART_MoveToPreviousPage"
                                        Command="{Binding MoveToPreviousPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Margin="4 0"
                                        Padding="0"
                                        MinWidth="24"
                                        MinHeight="24"
                                        IsBackgroundVisible="False">
                                    <telerik:RadGlyph Glyph="{StaticResource GlyphArrow60Left}"/>
                                </telerik:RadButton>
                                <telerik:RadButton x:Name="PART_MoveToNextPage"
                                        Command="{Binding MoveToNextPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Padding="0"
                                        MinWidth="24"
                                        MinHeight="24"
                                        IsBackgroundVisible="False">
                                    <telerik:RadGlyph Glyph="{StaticResource GlyphArrow60Right}"/>
                                </telerik:RadButton>
                                <telerik:RadButton x:Name="PART_MoveToLastPage"
                                        Command="{Binding MoveToLastPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Padding="0"
                                        MinWidth="24"
                                        MinHeight="24"
                                        IsBackgroundVisible="False"
                                        Margin="4 0">
                                    <telerik:RadGlyph Glyph="{StaticResource GlyphArrowForward}"/>
                                </telerik:RadButton>
                            </StackPanel>
                            <StackPanel x:Name="PagerStackPanel" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="8 0">
                                <TextBlock x:Name="PART_CurrentPageIndex" Text="{Binding CurrentPageIndex, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                <TextBlock Text="/"/>
                                <TextBlock x:Name="PART_PageCount" Text="{Binding PageCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PagerStackPanel" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputViewStyle" TargetType="controls:AIPromptOutputView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptOutputView">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <chat:AIPromptOutputItemsControl x:Name="PART_AIPromptOutputItemsControl" ItemsSource="{Binding PagedOutputItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                        <chat:AIPromptOutputPager x:Name="PART_AIPromptOutputPager" Visibility="{Binding IsPagingEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <DataTemplate x:Key="AIPromptCommandBaseTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <telerik:RadSvgImage x:Name="Icon"
                    Width="16"
                    Height="16"
                    Focusable="False"
                    UriSource="{Binding Icon}"
                    Margin="4 0 8 0"
                    IsTabStop="False"
                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                    SizeType="SizeToContent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"/>
            <TextBlock Grid.Column="1" Text="{Binding Text}"/>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger SourceName="Icon" Property="UriSource" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="AIPromptCommandPanelBarItemStyle" TargetType="telerik:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource AIPromptCommandBaseTemplate}"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
    </Style>
    <Style x:Key="AIPromptCommandGroupPanelBarItemStyle" TargetType="telerik:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource AIPromptCommandBaseTemplate}"/>
        <Setter Property="ItemsSource" Value="{Binding Commands}"/>
    </Style>
    <chat:CommandsPanelBarItemContainerStyleSelector x:Key="CommandsPanelBarItemContainerStyleSelector" AIPromptCommandStyle="{StaticResource AIPromptCommandPanelBarItemStyle}" AIPromptCommandGroupStyle="{StaticResource AIPromptCommandGroupPanelBarItemStyle}"/>
    <Style x:Key="AIPromptCommandViewStyle" TargetType="controls:AIPromptCommandView">
        <Setter Property="Padding" Value="16"/>
        <Setter Property="CommandsPanelBarItemContainerStyleSelector" Value="{StaticResource CommandsPanelBarItemContainerStyleSelector}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptCommandView">
                    <Grid>
                        <telerik:RadPanelBar x:Name="PART_CommandsPanelBar"
                                ItemsSource="{Binding Commands, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                ItemContainerStyleSelector="{TemplateBinding CommandsPanelBarItemContainerStyleSelector}"
                                Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptItemStyle" TargetType="controls:RadAIPromptItem">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12 4"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="Margin" Value="0 0 4 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadSvgImage
                            Background="#01FFFFFF"
                            Width="16"
                            Height="16"
                            UriSource="{Binding}"
                            SizeType="SizeToContent"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                            IsTabStop="False"
                            Focusable="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RadAIPromptItem">
                    <Grid x:Name="Root" Background="#01FFFFFF">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" ContentSource="Icon" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="Header" Grid.Column="1" ContentSource="Header" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4 0 0 0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                        </Trigger>
                        <Trigger SourceName="Root" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=MouseOverBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Root" Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                            <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptInputItemStyle" TargetType="controls:RadAIPromptInputItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Header" Value="{telerik:LocalizableResource Key=AIPrompt_InputViewHeaderText}"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"/>
    </Style>
    <Style x:Key="RadAIPromptOutputItemStyle" TargetType="controls:RadAIPromptOutputItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Header" Value="{telerik:LocalizableResource Key=AIPrompt_OutputViewHeaderText}"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/output_view_icon.svg"/>
    </Style>
    <Style x:Key="RadAIPromptCommandsItemStyle" TargetType="controls:RadAIPromptCommandsItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/commands_view_icon.svg"/>
    </Style>
    <Style x:Key="AIPromptWatermarkTextBoxStyle" TargetType="telerik:RadWatermarkTextBox" BasedOn="{StaticResource RadWatermarkTextBoxStyle}">
        <Setter Property="WatermarkContent" Value="{telerik:LocalizableResource Key=AIPrompt_WatermarkContent}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 12"/>
    </Style>
    <DataTemplate x:Key="AIPromptSuggestionItemContentTemplate">
        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
    </DataTemplate>
    <ControlTemplate x:Key="RadAIPromptTemplate" TargetType="controls:RadAIPrompt">
        <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid x:Name="Grid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="Header">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 1"/>
                    <ItemsPresenter Margin="{TemplateBinding Padding}" MinHeight="{TemplateBinding HeaderMinHeight}"/>
                    <telerik:RadButton x:Name="PART_ClosePopupButton"
                            Grid.Column="1"
                            IsBackgroundVisible="False"
                            HorizontalAlignment="Right"
                            MinHeight="0"
                            Padding="0"
                            Margin="0 0 8 0"
                            Width="24"
                            Height="24"
                            Visibility="Collapsed">
                        <telerik:RadGlyph Glyph="{StaticResource GlyphClose}"/>
                    </telerik:RadButton>
                </Grid>
                <ContentPresenter x:Name="PART_Content" Grid.Row="1" Content="{Binding ActiveItem.Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AlternativeBrush}"/>
            </Trigger>
            <Trigger Property="controls:RadAIPromptButton.IsInPopup" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter TargetName="PART_ClosePopupButton" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadAIPromptStyle" TargetType="controls:RadAIPrompt">
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeaderBackground" Value="{telerik:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="HeaderMinHeight" Value="36"/>
        <Setter Property="Padding" Value="16 0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="InputTextBoxStyle" Value="{StaticResource AIPromptWatermarkTextBoxStyle}"/>
        <Setter Property="InputButtonContent" Value="{telerik:LocalizableResource Key=AIPrompt_GenerateButtonText}"/>
        <Setter Property="InputButtonContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <telerik:RadSvgImage
                                Width="16"
                                Height="16"
                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"/>
                        <TextBlock Text="{Binding}" Margin="4 0 0 0"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SuggestionsHeaderContent" Value="{telerik:LocalizableResource Key=AIPrompt_SuggestionsHeaderText}"/>
        <Setter Property="SuggestionItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik:RadButton x:Name="SuggestionButton"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            ContentTemplate="{StaticResource AIPromptSuggestionItemContentTemplate}"
                            Content="{Binding .}"
                            Command="{Binding SuggestionClickedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                            CommandParameter="{Binding}"
                            Margin="0 0 0 8"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SuggestionsExpanderStyle" Value="{StaticResource SuggestionsExpanderStyle}"/>
        <Setter Property="Template" Value="{StaticResource RadAIPromptTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptButtonStyle" TargetType="controls:RadAIPromptButton">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="24"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="Foreground" Value="{telerik:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="PopupWidth" Value="408"/>
        <Setter Property="PopupHeight" Value="438"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RadAIPromptButton">
                    <Grid>
                        <Border x:Name="Border"
                                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <telerik:RadSvgImage
                                    UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"
                                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                    Width="16"
                                    Height="16"
                                    Focusable="False"/>
                        </Border>
                        <Popup x:Name="PART_AIPromptPopup"
                                AllowsTransparency="True"
                                StaysOpen="True"
                                Focusable="False"
                                Placement="Top"
                                HorizontalOffset="{TemplateBinding PopupHorizontalOffset}"
                                VerticalOffset="{TemplateBinding PopupVerticalOffset}"
                                IsOpen="{Binding IsPopupOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Width="{TemplateBinding PopupWidth}"
                                Height="{TemplateBinding PopupHeight}">
                            <Grid Margin="4">
                                <mat:Shadow Background="{telerik:CrystalResource ResourceKey=AlternativeBrush}" ShadowDepth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.ShadowDepth)}" CornerRadius="{telerik:CrystalResource ResourceKey=CornerRadius}"/>
                                <Border x:Name="AIPromptPopupBorder"
                                        CornerRadius="{telerik:CrystalResource ResourceKey=CornerRadius}"
                                        Background="{telerik:CrystalResource ResourceKey=AlternativeBrush}"
                                        BorderBrush="{telerik:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        BorderThickness="1">
                                    <ContentPresenter Content="{TemplateBinding AIPrompt}" telerik:CornerRadiusHelper.ClipRadius="{telerik:CrystalResource ResourceKey=CornerRadius}"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik:CrystalResource ResourceKey=AccentPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:AIPromptOutputItemsControl}" BasedOn="{StaticResource AIPromptOutputItemsControlStyle}"/>
    <Style TargetType="{x:Type chat:AIPromptOutputItem}" BasedOn="{StaticResource AIPromptOutputItemStyle}"/>
    <Style TargetType="{x:Type chat:AIPromptOutputPager}" BasedOn="{StaticResource AIPromptOutputPagerStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptInputView}" BasedOn="{StaticResource AIPromptInputViewStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptOutputView}" BasedOn="{StaticResource AIPromptOutputViewStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptCommandView}" BasedOn="{StaticResource AIPromptCommandViewStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptItem}" BasedOn="{StaticResource RadAIPromptItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptInputItem}" BasedOn="{StaticResource RadAIPromptInputItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptOutputItem}" BasedOn="{StaticResource RadAIPromptOutputItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptCommandsItem}" BasedOn="{StaticResource RadAIPromptCommandsItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPrompt}" BasedOn="{StaticResource RadAIPromptStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptButton}" BasedOn="{StaticResource RadAIPromptButtonStyle}"/>
</ResourceDictionary>
