<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="c"
        xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
        xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
        xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
        xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
        xmlns:expander="clr-namespace:Telerik.Windows.Controls.Expander;assembly=Telerik.Windows.Controls"
        xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
        xmlns:telerik1="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:telerikInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
        xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:animationNavigation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:chat="clr-namespace:Telerik.Windows.Controls.ConversationalUI;assembly=Telerik.Windows.Controls.ConversationalUI"
        xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
        xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"
        xmlns:controls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.ConversationalUI">
    <telerik:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter"/>
    <telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <expander:ExpandDirectionToRotationAngleConverter x:Key="ExpandDirectionToRotationAngleConverter"/>
    <telerik:NumberToVisibilityConverter x:Key="NumberToVisibilityConverter"/>
    <telerik:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <CornerRadius x:Key="ValidationTooltipCornerRadius">1</CornerRadius>
    <CornerRadius x:Key="ValidationTooltip_CornerRadius">1</CornerRadius>
    <SolidColorBrush x:Key="ValidationTooltipForeground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ValidationTooltipOuterBorder" Color="#FFDC000C"/>
    <SolidColorBrush x:Key="ValidationTooltipInnerBorder" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ValidationTooltipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFF424C" Offset="1"/>
        <GradientStop Color="#FFC92931"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ValidationInnerTick" Color="#FFCB576E"/>
    <SolidColorBrush x:Key="ValidationOuterTick" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ValidationBrush" Color="#FFDC000C"/>
    <ControlTemplate x:Key="StaticValidationTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
                <AdornedElementPlaceholder x:Name="Holder"/>
                <Border BorderBrush="{StaticResource ValidationBrush}" BorderThickness="1" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}"/>
            </Grid>
            <Grid Margin="1 0 0 0">
                <Border Background="{StaticResource ValidationBrush}" SnapsToDevicePixels="True" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}">
                    <TextBlock x:Name="PART_ToolTip"
                            Foreground="{StaticResource ValidationTooltipForeground}"
                            Padding="4 3"
                            VerticalAlignment="Center"
                            Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid x:Name="RootVisual" HorizontalAlignment="Right" RenderTransformOrigin="0 0" Opacity="0" Margin="5 0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border
                    MinHeight="22"
                    Background="{StaticResource ValidationTooltipBackground}"
                    BorderBrush="{StaticResource ValidationTooltipOuterBorder}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ValidationTooltipCornerRadius}">
                <Border BorderBrush="{StaticResource ValidationTooltipInnerBorder}" BorderThickness="1">
                    <ContentPresenter TextBlock.Foreground="{StaticResource ValidationTooltipForeground}" Content="{Binding ErrorContent}" Margin="4 0 4 1"/>
                </Border>
            </Border>
            <ContentControl/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
            <Border Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Width="3" Height="3"/>
            <AdornedElementPlaceholder x:Name="Holder"/>
            <Border BorderBrush="{StaticResource ValidationTooltipOuterBorder}" BorderThickness="1" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}"/>
            <Path Data="M2,1 L6,1 6,5 Z" Fill="{StaticResource ValidationInnerTick}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <Path Data="M0,0 L2,0 7,5 7,7 Z" Fill="{StaticResource ValidationOuterTick}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <ToolTipService.ToolTip>
                <ToolTip x:Name="PART_ToolTip"
                        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                        Template="{StaticResource ErrorTooltipTemplate}"
                        Placement="Right"/>
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="StaticValidationOnFocusTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
                <AdornedElementPlaceholder x:Name="Holder"/>
                <Border BorderBrush="{StaticResource ValidationBrush}" BorderThickness="1" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}"/>
            </Grid>
            <Grid Margin="1 0 0 0" Visibility="{Binding ElementName=Holder, Path=AdornedElement.IsKeyboardFocusWithin, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Border Background="{StaticResource ValidationBrush}" SnapsToDevicePixels="True" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}">
                    <TextBlock x:Name="PART_ToolTip"
                            Foreground="{StaticResource ValidationTooltipForeground}"
                            Padding="4 3"
                            VerticalAlignment="Center"
                            Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <FontFamily x:Key="TelerikWebUI">/Telerik.Windows.Controls;component/Themes/Fonts/old/TelerikWebUI.ttf#TelerikWebUI</FontFamily>
    <sys:String x:Key="GlyphArrow60Right"></sys:String>
    <sys:String x:Key="GlyphArrow60Left"></sys:String>
    <sys:String x:Key="GlyphArrowForward"></sys:String>
    <sys:String x:Key="GlyphArrowBackward"></sys:String>
    <sys:String x:Key="GlyphMoreHorizontal"></sys:String>
    <sys:String x:Key="GlyphClose"></sys:String>
    <telerik:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter"/>
    <SolidColorBrush x:Key="Foreground_brush" Color="#FF000000"/>
    <SolidColorBrush x:Key="FocusBrushBlack" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander_Background" Color="#00FFFFFF"/>
    <SolidColorBrush x:Key="Expander_BorderBrush" Color="#00FFFFFF"/>
    <Thickness x:Key="Expander_BorderThickness">0</Thickness>
    <CornerRadius x:Key="Expander_BorderRadius">3</CornerRadius>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#3C6AA3"/>
    <SolidColorBrush x:Key="RadHyperlinkButtonHoverBrush" Color="#548DD4"/>
    <SolidColorBrush x:Key="RadHyperlinkButtonVisitedBrush" Color="#3333CC"/>
    <LinearGradientBrush x:Key="TooltipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFE0E3EF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Tooltip_OuterBorderBrush" Color="#FF777792"/>
    <Thickness x:Key="Tooltip_OuterBorderThickness">1</Thickness>
    <SolidColorBrush x:Key="TooltipForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="LabelForeground" Color="#FF000000"/>
    <CornerRadius x:Key="SplitButton_LeftPartCornerRadius">1 0 0 1</CornerRadius>
    <CornerRadius x:Key="SplitButton_RightPartCornerRadius">0 1 1 0</CornerRadius>
    <CornerRadius x:Key="SplitButton_TopPartCornerRadius">1 1 0 0</CornerRadius>
    <CornerRadius x:Key="SplitButton_BottomPartCornerRadius">0 0 1 1</CornerRadius>
    <CornerRadius x:Key="SplitButton_SpanCornerRadius">1</CornerRadius>
    <CornerRadius x:Key="SplitButton_SpanInnerCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="ControlOuterBorder_CornerRadius">1</CornerRadius>
    <CornerRadius x:Key="ControlInnerBorder_CornerRadius">0</CornerRadius>
    <SolidColorBrush x:Key="ControlOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="ControlBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ControlElement_Disabled" Color="#FF8D8D8D"/>
    <SolidColorBrush x:Key="ControlOuterBorder_Disabled" Color="#FF9F9FB3"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Disabled" Color="Transparent"/>
    <SolidColorBrush x:Key="ControlBackground_Disabled" Color="#FFE0E0EA"/>
    <sys:Double x:Key="ControlElement_Height">3</sys:Double>
    <sys:Double x:Key="ControlElement_Width">5</sys:Double>
    <SolidColorBrush x:Key="ControlElement_Normal" Color="#FF525272"/>
    <SolidColorBrush x:Key="ControlElement_InnerNormal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ControlForeground_Normal" Color="#FF000000"/>
    <SolidColorBrush x:Key="ControlOuterBorder_Normal" Color="#FF777792"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Normal" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White"/>
        <GradientStop Color="#FFE0E3F0" Offset="0.5"/>
        <GradientStop Color="#FFC2C9E0" Offset="0.5"/>
        <GradientStop Color="#FFE1E1EA" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlElement_MouseOver" Color="#FF525272"/>
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlInnerBorder_MouseOver" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.5"/>
        <GradientStop Color="#FFFFD25A" Offset="0.5"/>
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlElement_Pressed" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ControlOuterBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF616161" Offset="0"/>
        <GradientStop Color="#FF989898" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB69A78"/>
        <GradientStop Color="#FFFFE17A" Offset="0.126"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFBA74" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Highlighted" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Highlighted" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlBackground_Highlighted" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Checked" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Checked" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlBackground_Checked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFD74E" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlOuterBorder_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF282828"/>
        <GradientStop Color="#FF5F5F5F" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlInnerBorder_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB69A78"/>
        <GradientStop Color="#FFFFE17A" Offset="0.169"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFE8AB" Offset="0"/>
        <GradientStop Color="#FFFFE08F" Offset="0.5"/>
        <GradientStop Color="#FFFEAF27" Offset="0.5"/>
        <GradientStop Color="#FFFFE74E" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Focused" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Focused" Color="Transparent"/>
    <SolidColorBrush x:Key="ControlItem_OuterBorder_Normal" Color="#FF777792"/>
    <SolidColorBrush x:Key="ControlItem_InnerBorder_Normal" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlItem_Background_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White"/>
        <GradientStop Color="#FFE1E1EA" Offset="1"/>
        <GradientStop Color="#FFC2C9E0" Offset="0.43"/>
        <GradientStop Color="#FFE0E3F0" Offset="0.42"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlItem_OuterBorder_MouseOver" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlItem_InnerBorder_MouseOver" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlItem_Background_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFFD25A" Offset="0.43"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.42"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlItem_OuterBorder_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF282828"/>
        <GradientStop Color="#FF5F5F5F" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlItem_InnerBorder_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB69A78"/>
        <GradientStop Color="#FFFFE17A" Offset="0.126"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlItem_Background_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFD74E" Offset="0.996"/>
        <GradientStop Color="#FFFFDCAB" Offset="0.17"/>
        <GradientStop Color="#FFFFB062" Offset="0.57"/>
        <GradientStop Color="#FFFFD18F" Offset="0.56"/>
        <GradientStop Color="#FFFFBA74"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlSubItem_OuterBorder_MouseOver" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlSubItem_InnerBorder_MouseOver" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlSubItem_Background_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlSubItem_OuterBorder_Selected" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="ControlSubItem_InnerBorder_Selected" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ControlSubItem_Background_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCE79F" Offset="1"/>
        <GradientStop Color="#FFFDD3A8"/>
    </LinearGradientBrush>
    <CornerRadius x:Key="ControlSubItem_OuterCornerRadius">1</CornerRadius>
    <CornerRadius x:Key="ControlSubItem_InnerCornerRadius">0</CornerRadius>
    <Thickness x:Key="ControlSubItem_OuterBorderThickness">1</Thickness>
    <Thickness x:Key="ControlSubItem_InnerBorderThickness">1</Thickness>
    <SolidColorBrush x:Key="ScrollBarThumbGripFill_Normal" Color="#FF525272"/>
    <SolidColorBrush x:Key="ScrollBarThumbGripStroke_Normal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ScrollBarThumbGripFill_MouseOver" Color="#FF525272"/>
    <SolidColorBrush x:Key="ScrollBarThumbGripStroke_MouseOver" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ScrollBarThumbGripFill_Disabled" Color="#FF8D8D8D"/>
    <SolidColorBrush x:Key="ScrollBarThumbGripStroke_Disabled" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ScrollBarBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE8EBF4" Offset="0.257"/>
        <GradientStop Color="#FFB7BCD6"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarInnerBorder_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="ScrollBarOuterBorder_Normal" Color="#FF777792"/>
    <SolidColorBrush x:Key="ScrollBarOuterBorder_Disabled" Color="#FF777792"/>
    <SolidColorBrush x:Key="ScrollBarBackground_Disabled" Color="#FFE8EBF4"/>
    <LinearGradientBrush x:Key="ScrollBarBackgroundVertical_Normal" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FFE8EBF4" Offset="0.257"/>
        <GradientStop Color="#FFB7BCD6"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarInnerBorderVertical_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="ScrollBarOuterBorderVertical_Normal" Color="#FF777792"/>
    <SolidColorBrush x:Key="ScrollBarOuterBorderVertical_Disabled" Color="#FF777792"/>
    <SolidColorBrush x:Key="ScrollBarBackgroundVertical_Disabled" Color="#FFE8EBF4"/>
    <RadialGradientBrush x:Key="ScrollViewerIntersectionRectangle" GradientOrigin="0 0" Center="0 0" RadiusX="1" RadiusY="1">
        <GradientStop Color="#FF777792" Offset="0.066"/>
        <GradientStop Color="#FFB7BCD6" Offset="0.066"/>
        <GradientStop Color="#FFE8EBF4" Offset="0.29"/>
    </RadialGradientBrush>
    <Thickness x:Key="ScrollBarDecreaseButtonMarginHorizontal">0</Thickness>
    <Thickness x:Key="ScrollBarIncreaseButtonMarginHorizontal">0</Thickness>
    <Thickness x:Key="ScrollBarDecreaseButtonMarginVertical">0</Thickness>
    <Thickness x:Key="ScrollBarIncreaseButtonMarginVertical">0</Thickness>
    <Thickness x:Key="ScrollBarThumbMarginHorizontal">0</Thickness>
    <Thickness x:Key="ScrollBarThumbMarginVertical">0</Thickness>
    <sys:Double x:Key="ScrollBarMinWidth">15</sys:Double>
    <sys:Double x:Key="ScrollBarMinHeight">15</sys:Double>
    <Thickness x:Key="ScrollViewerHorizontalScrollBarBorderThickness">0 1</Thickness>
    <Thickness x:Key="ScrollViewerVerticalScrollBarBorderThickness">1 0</Thickness>
    <SolidColorBrush x:Key="ButtonIconForeground_Disabled" Color="#FF8D8D8D"/>
    <SolidColorBrush x:Key="ButtonIconForeground_Normal" Color="#FF525272"/>
    <SolidColorBrush x:Key="ButtonIconForeground_MouseOver" Color="#FF525272"/>
    <SolidColorBrush x:Key="ButtonIconForeground_Pressed" Color="#FF000000"/>
    <SolidColorBrush x:Key="ButtonIconBackground_Disabled" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ButtonIconBackground_Normal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ButtonIconBackground_MouseOver" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ButtonIconBackground_Pressed" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PickerForeground_Normal" Color="#FF000000"/>
    <SolidColorBrush x:Key="PickerBackground_Normal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="HeaderInnerBorder" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White"/>
        <GradientStop Color="#FFE1E1EA" Offset="1"/>
        <GradientStop Color="#FFB1B7CB" Offset="0.43"/>
        <GradientStop Color="#FFD5D8E8" Offset="0.42"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderTextForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="HeaderTextBackground" Color="#FFFFFFFF"/>
    <FontWeight x:Key="HeaderTextFontWeight">Bold</FontWeight>
    <SolidColorBrush x:Key="HeaderButtonIconForeground_Disabled" Color="#88FFFFFF"/>
    <SolidColorBrush x:Key="HeaderButtonIconForeground_Normal" Color="#FF525272"/>
    <SolidColorBrush x:Key="HeaderButtonIconForeground_MouseOver" Color="#FF525272"/>
    <SolidColorBrush x:Key="HeaderButtonIconForeground_Pressed" Color="#FF000000"/>
    <SolidColorBrush x:Key="HeaderButtonIconBackground_Disabled" Color="#88000000"/>
    <SolidColorBrush x:Key="HeaderButtonIconBackground_Normal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderButtonIconBackground_MouseOver" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderButtonIconBackground_Pressed" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderButtonOuterBorder_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="HeaderButtonInnerBorder_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="HeaderButtonBackground_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="HeaderButtonOuterBorder_MouseOver" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="HeaderButtonInnerBorder_MouseOver" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="HeaderButtonBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFFD25A" Offset="0.43"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.42"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButtonOuterBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF5F5F5F" Offset="1"/>
        <GradientStop Color="#FF282828"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButtonInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB69A78"/>
        <GradientStop Color="#FFFFE17A" Offset="0.126"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButtonBackground_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFD74E" Offset="0.996"/>
        <GradientStop Color="#FFFFDCAB" Offset="0.17"/>
        <GradientStop Color="#FFFE9227" Offset="0.57"/>
        <GradientStop Color="#FFFFD18F" Offset="0.56"/>
        <GradientStop Color="#FFFFBA74" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PanelBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PanelBorderBrush" Color="#FF777792"/>
    <SolidColorBrush x:Key="ClockBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ClockInnerBorderBrush" Color="White"/>
    <CornerRadius x:Key="ClockOuterBorderCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="ClockInnerBorderCornerRadius">0</CornerRadius>
    <Thickness x:Key="ClockItemPadding">5 3</Thickness>
    <Thickness x:Key="ClockButtonChromeMargin">2</Thickness>
    <Thickness x:Key="ClockItemsMargin">1 0 1 1</Thickness>
    <ControlTemplate x:Key="CalendarIcon" TargetType="ContentControl">
        <Grid>
            <Path x:Name="CalendarIconBackground"
                    Margin="4 5 4 4"
                    Width="7"
                    Height="7"
                    Stroke="{TemplateBinding Background}"
                    Data="M0,0.5 L7,0.5 M0,2.5 L7,2.5 M0,4.5 L7,4.5 M0,6.5 L7,6.5 M0.5,0 L0.5,7 M2.5,0 L2.5,7 M4.5,0 L4.5,7 M6.5,0 L6.5,7"/>
            <Path x:Name="CalendarIconForeground"
                    Margin="4 4 4 5"
                    Width="7"
                    Height="7"
                    Stroke="{TemplateBinding Foreground}"
                    Data="M0,0.5 L7,0.5 M0,2.5 L7,2.5 M0,4.5 L7,4.5 M0,6.5 L7,6.5 M0.5,0 L0.5,7 M2.5,0 L2.5,7 M4.5,0 L4.5,7 M6.5,0 L6.5,7"/>
        </Grid>
    </ControlTemplate>
    <SolidColorBrush x:Key="CalendarOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="CalendarInnerBorder" Color="Transparent"/>
    <CornerRadius x:Key="CalendarOuterBorderCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="CalendarInnerBorderCornerRadius">0</CornerRadius>
    <Thickness x:Key="CalendarTransitionPanelMargin">0 0 0 0</Thickness>
    <Thickness x:Key="CalendarHeaderBorderThickness">1</Thickness>
    <CornerRadius x:Key="CalendarHeaderOuterCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="CalendarHeaderInnerCornerRadius">0</CornerRadius>
    <SolidColorBrush x:Key="CalendarSubHeaderOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="CalendarSubHeaderInnerBorder" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="CalendarSubHeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White"/>
        <GradientStop Color="#FFE1E1EA" Offset="1"/>
        <GradientStop Color="#FFB1B7CB" Offset="0.43"/>
        <GradientStop Color="#FFD5D8E8" Offset="0.42"/>
    </LinearGradientBrush>
    <Thickness x:Key="CalendarHeaderPadding">0</Thickness>
    <Thickness x:Key="CalendarViewMargin">-1 -1 0 0</Thickness>
    <Thickness x:Key="CalendarViewHeaderPadding">3</Thickness>
    <Thickness x:Key="CalendarViewHeaderMargin">0 0 0 0</Thickness>
    <SolidColorBrush x:Key="CalendarViewBackground" Color="#FFFFFFFF"/>
    <Thickness x:Key="CalendarViewBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarItemsMargin">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarButtonButtonChromeMargin">2</Thickness>
    <Thickness x:Key="CalendarButtonTodayVisualMargin">1</Thickness>
    <sys:Int32 x:Key="CalendarWeekHeaderVerticalOuterBorderZIndex">0</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderHorizontalOuterBorderZIndex">0</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderVerticalInnerBorderZIndex">0</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderHorizontalInnerBorderZIndex">0</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderVerticalBackgroundZIndex">0</sys:Int32>
    <sys:Int32 x:Key="CalendarWeekHeaderHorizontalBackgroundZIndex">0</sys:Int32>
    <SolidColorBrush x:Key="CalendarWeekHeaderVerticalOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="CalendarWeekHeaderHorizontalOuterBorder" Color="#FF777792"/>
    <SolidColorBrush x:Key="CalendarWeekHeaderVerticalInnerBorder" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CalendarWeekHeaderHorizontalInnerBorder" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CalendarWeekHeaderVerticalBackground" Color="#FFE8EBF4"/>
    <SolidColorBrush x:Key="CalendarWeekHeaderHorizontalBackground" Color="#FFE8EBF4"/>
    <Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderThickness">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderThickness">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderThickness">1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalOuterBorderMargin">0 0 -1 0</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalOuterBorderMargin">0 0 0 0</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalInnerBorderMargin">1 1 0 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalInnerBorderMargin">1 0 1 1</Thickness>
    <Thickness x:Key="CalendarWeekHeaderVerticalBackgroundMargin">2 2 1 2</Thickness>
    <Thickness x:Key="CalendarWeekHeaderHorizontalBackgroundMargin">2 1 2 2</Thickness>
    <TextDecorationCollection x:Key="HeaderButtonTextDecoration">Underline</TextDecorationCollection>
    <ControlTemplate x:Key="ScrollBarThumbGripHorizontal" TargetType="ContentControl">
        <Grid>
            <Rectangle Fill="{TemplateBinding Foreground}" Width="6" Height="9"/>
            <Path Stroke="{TemplateBinding Background}" Data="M0.5,0 L0.5,9 M2.5,0 L2.5,9 M4.5,0 L4.5,9" Width="6" Height="9"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollBarThumbGripVertical" TargetType="ContentControl">
        <Grid>
            <Rectangle Fill="{TemplateBinding Foreground}" Width="9" Height="6"/>
            <Path Stroke="{TemplateBinding Background}" Data="M0,0.5 L9,0.5 M0,2.5 L9,2.5 M0,4.5 L9,4.5" Width="9" Height="6"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollArrow_Up" TargetType="ContentControl">
        <Grid>
            <Path x:Name="BackgroundIcon" Data="M0,1 L1,0 2,1 Z" Stretch="Fill" Width="7" Height="4" Fill="{TemplateBinding Background}" Margin="0 2 0 0"/>
            <Path x:Name="ForegroundIcon" Data="M0,1 L1,0 2,1 Z" Stretch="Fill" Width="7" Height="4" Fill="{TemplateBinding Foreground}" Margin="0 1 0 1"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollArrow_Down" TargetType="ContentControl">
        <Grid>
            <Path x:Name="BackgroundIcon" Data="M0,0 L2,0 1,1 Z" Stretch="Fill" Width="7" Height="4" Fill="{TemplateBinding Background}" Margin="0 2 0 0"/>
            <Path x:Name="ForegroundIcon" Data="M0,0 L2,0 1,1 Z" Stretch="Fill" Width="7" Height="4" Fill="{TemplateBinding Foreground}" Margin="0 1 0 1"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollArrow_Left" TargetType="ContentControl">
        <Grid>
            <Path x:Name="BackgroundIcon" Data="M1,0 L0,1 1,2 Z" Stretch="Fill" Width="4" Height="7" Fill="{TemplateBinding Background}" Margin="0 2 0 0"/>
            <Path x:Name="ForegroundIcon" Data="M1,0 L0,1 1,2 Z" Stretch="Fill" Width="4" Height="7" Fill="{TemplateBinding Foreground}" Margin="0 1 0 1"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollArrow_Right" TargetType="ContentControl">
        <Grid>
            <Path x:Name="BackgroundIcon" Data="M0,0 L0,2 1,1 Z" Stretch="Fill" Width="4" Height="7" Fill="{TemplateBinding Background}" Margin="0 2 0 0"/>
            <Path x:Name="ForegroundIcon" Data="M0,0 L0,2 1,1 Z" Stretch="Fill" Width="4" Height="7" Fill="{TemplateBinding Foreground}" Margin="0 1 0 1"/>
        </Grid>
    </ControlTemplate>
    <SolidColorBrush x:Key="DragVisualForeground" Color="Black"/>
    <SolidColorBrush x:Key="DragVisualBorder" Color="#FF848484"/>
    <LinearGradientBrush x:Key="DragVisualBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFDEDEDE" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DragVisualMultyItemBorder" Color="#FF848484"/>
    <SolidColorBrush x:Key="DragVisualMultyItemBackground" Color="White"/>
    <SolidColorBrush x:Key="DragVisualEffectNormal" Color="#FF364F6F"/>
    <SolidColorBrush x:Key="DragVisualEffectImportant" Color="#FFDC000C"/>
    <SolidColorBrush x:Key="ListBoxDragVisualBorder" Color="#FFFFC92B"/>
    <LinearGradientBrush x:Key="ListBoxDragVisualBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCE79F" Offset="1"/>
        <GradientStop Color="#FFFDD3A8"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListBoxDragVisualTooltipBorder" Color="#FF848484"/>
    <LinearGradientBrush x:Key="ListBoxDragVisualTooltipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFDEDEDE" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListBoxDragVisualIconBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="ControlBackground_ReadOnly" Color="#5EC9C9C9"/>
    <telerik1:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverterInstance"/>
    <SolidColorBrush x:Key="Rating_Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Rating_BorderBrush" Color="Transparent"/>
    <sys:String x:Key="PanelBarItemPathGeometry">M 1,1.5 L 4.5,5 L 8,1.5</sys:String>
    <SolidColorBrush x:Key="RadPanelBar_SplitterBackground" Color="#FFF0F0F0"/>
    <LinearGradientBrush x:Key="RadPanelBar_SplitterOpacityMask" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadPanelBar_SplitterPath_OuterBackground" Color="#FF525272"/>
    <SolidColorBrush x:Key="RadPanelBar_SplitterPath_InnerBackground" Color="#FFFFFFFF"/>
    <Thickness x:Key="RadPanelBar_Splitter_BorderThickness">0 1 0 0</Thickness>
    <chat:DoubleToBooleanConverter x:Key="DoubleToBooleanConverter"/>
    <telerik1:BrushToColorConverter x:Key="BrushToColorConverter"/>
    <LinearGradientBrush x:Key="ChatToolBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFBFBFC"/>
        <GradientStop Color="#FFDADBE5" Offset="1"/>
        <GradientStop Color="#FFCCCFE0" Offset="0.5"/>
        <GradientStop Color="#FFB4B9CD" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="AIPromptForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="AIPromptBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AIPromptBorderBrush" Color="#FF777792"/>
    <SolidColorBrush x:Key="AIPromptHeaderBackground" Color="#FFE8EBF4"/>
    <SolidColorBrush x:Key="AIPromptFooterBackground" Color="#FFE8EBF4"/>
    <SolidColorBrush x:Key="AIPromptDisabledBackground" Color="#FFE0E0E0"/>
    <SolidColorBrush x:Key="AIPromptDisabledBorderBrush" Color="#FF989898"/>
    <SolidColorBrush x:Key="AIPromptItemForeground" Color="#FF000000"/>
    <LinearGradientBrush x:Key="AIPromptItemBackgroundMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.50"/>
        <GradientStop Color="#FFFFD25A" Offset="0.50"/>
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="AIPromptItemBorderBrushMouseOver" Color="#FFFFC92B"/>
    <LinearGradientBrush x:Key="AIPromptItemBackgroundActive" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFD74E" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="AIPromptItemBorderBrushActive" Color="#FFFFC92B"/>
    <Thickness x:Key="AIPromptButtonBorderThickness">2</Thickness>
    <SolidColorBrush x:Key="AIPromptButtonBorderBrush" Color="#FFFFC92B"/>
    <LinearGradientBrush x:Key="AIPromptButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFD74E" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AIPromptButtonBackgroundMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBDA" Offset="0"/>
        <GradientStop Color="#FFFEEBAE" Offset="0.50"/>
        <GradientStop Color="#FFFFD25A" Offset="0.50"/>
        <GradientStop Color="#FFFFFBA3" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AIPromptButtonBackgroundPressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFDCAB" Offset="0"/>
        <GradientStop Color="#FFFFD18F" Offset="0.5"/>
        <GradientStop Color="#FFFE9227" Offset="0.5"/>
        <GradientStop Color="#FFFFBA74" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="AIPromptButtonBorderBrushMouseOver" Color="#FFFFC92B"/>
    <SolidColorBrush x:Key="AIPromptButtonForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="AIPromptButtonPopupBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AIPromptButtonPopupBorderBrush" Color="#FF777792"/>
    <SolidColorBrush x:Key="AIPromptInnerBorderNormal" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AIPromptInnerBorderPressed" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AIPromptOutputItemBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="AIPromptRadioButtonForegroundChecked" Color="#FFFE9227"/>
    <Style x:Key="ScrollViewerRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalIncrementStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="{StaticResource ScrollBarIncreaseButtonMarginHorizontal}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1"
                                RenderNormal="False"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"/>
                        <ContentControl x:Name="Arrow"
                                Foreground="{StaticResource ButtonIconForeground_Normal}"
                                Background="{StaticResource ButtonIconBackground_Normal}"
                                Template="{StaticResource ScrollArrow_Right}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalDecrementStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="{StaticResource ScrollBarDecreaseButtonMarginHorizontal}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1"
                                RenderNormal="False"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"/>
                        <ContentControl x:Name="Arrow"
                                Foreground="{StaticResource ButtonIconForeground_Normal}"
                                Background="{StaticResource ButtonIconBackground_Normal}"
                                Template="{StaticResource ScrollArrow_Left}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalIncrementStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="{StaticResource ScrollBarDecreaseButtonMarginVertical}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Orientation="Vertical"
                                CornerRadius="1"
                                RenderNormal="False"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"/>
                        <ContentControl x:Name="Arrow"
                                Foreground="{StaticResource ButtonIconForeground_Normal}"
                                Background="{StaticResource ButtonIconBackground_Normal}"
                                Template="{StaticResource ScrollArrow_Down}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalDecrementStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="{StaticResource ScrollBarIncreaseButtonMarginVertical}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Orientation="Vertical"
                                CornerRadius="1"
                                RenderNormal="False"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"/>
                        <ContentControl x:Name="Arrow"
                                Template="{StaticResource ScrollArrow_Up}"
                                Foreground="{StaticResource ButtonIconForeground_Normal}"
                                Background="{StaticResource ButtonIconBackground_Normal}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripFill_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripStroke_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderPressed">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripFill_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripStroke_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                                Margin="{StaticResource ScrollBarThumbMarginVertical}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Orientation="Vertical"
                                CornerRadius="1"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsDragging}"/>
                        <ContentControl x:Name="Grips"
                                Foreground="{StaticResource ScrollBarThumbGripFill_Normal}"
                                Background="{StaticResource ScrollBarThumbGripStroke_Normal}"
                                Template="{StaticResource ScrollBarThumbGripVertical}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripFill_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripStroke_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderPressed">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripFill_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grips" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbGripStroke_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                                Margin="{StaticResource ScrollBarThumbMarginHorizontal}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1"
                                RenderEnabled="{TemplateBinding IsEnabled}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsDragging}"/>
                        <ContentControl x:Name="Grips"
                                Foreground="{StaticResource ScrollBarThumbGripFill_Normal}"
                                Background="{StaticResource ScrollBarThumbGripStroke_Normal}"
                                Template="{StaticResource ScrollBarThumbGripHorizontal}"
                                IsTabStop="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ScrollBarBackgroundVertical_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBarOuterBorderVertical_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="{StaticResource ScrollBarMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource ScrollBarMinHeight}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="15"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition MaxHeight="15"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual"
                                Grid.RowSpan="3"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ScrollBarInnerBorderVertical_Normal}"/>
                        </Border>
                        <RepeatButton x:Name="DecreaseRepeat"
                                MinHeight="{StaticResource ScrollBarMinHeight}"
                                Style="{StaticResource VerticalDecrementStyle}"
                                IsTabStop="False"
                                Interval="50"
                                Command="ScrollBar.LineUpCommand"/>
                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">32</sys:Double>
                            </Track.Resources>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" MinHeight="16" Style="{StaticResource VerticalThumbStyle}" SnapsToDevicePixels="True" IsTabStop="False"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{StaticResource ScrollViewerRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" IsTabStop="False"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{StaticResource ScrollViewerRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" IsTabStop="False"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="IncreaseRepeat"
                                Grid.Row="2"
                                MinHeight="{StaticResource ScrollBarMinHeight}"
                                Style="{StaticResource VerticalIncrementStyle}"
                                Command="ScrollBar.LineDownCommand"
                                IsTabStop="False"/>
                        <ContentPresenter
                                Grid.RowSpan="3"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundVisual" Property="BorderBrush" Value="{StaticResource ScrollBarOuterBorderVertical_Disabled}"/>
                            <Setter TargetName="BackgroundVisual" Property="Background" Value="{StaticResource ScrollBarBackgroundVertical_Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition MaxWidth="15"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BackgroundVisual"
                                        Grid.ColumnSpan="3"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{StaticResource ScrollBarBackground_Normal}"
                                        BorderBrush="{StaticResource ScrollBarOuterBorder_Normal}">
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ScrollBarInnerBorder_Normal}"/>
                                </Border>
                                <RepeatButton x:Name="DecreaseRepeat"
                                        MinWidth="{StaticResource ScrollBarMinWidth}"
                                        Style="{StaticResource HorizontalDecrementStyle}"
                                        IsTabStop="False"
                                        Interval="50"
                                        Command="ScrollBar.LineLeftCommand"/>
                                <Track Grid.Column="1" x:Name="PART_Track" Orientation="Horizontal" IsDirectionReversed="False">
                                    <Track.Resources>
                                        <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">32</sys:Double>
                                    </Track.Resources>
                                    <Track.Thumb>
                                        <Thumb x:Name="thumb" MinWidth="16" Style="{StaticResource HorizontalThumbStyle}" SnapsToDevicePixels="True" IsTabStop="False"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Style="{StaticResource ScrollViewerRepeatButtonStyle}" Command="ScrollBar.PageRightCommand" IsTabStop="False"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Style="{StaticResource ScrollViewerRepeatButtonStyle}" Command="ScrollBar.PageLeftCommand" IsTabStop="False"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>
                                <RepeatButton
                                        Grid.Column="2"
                                        x:Name="IncreaseRepeat"
                                        MinWidth="{StaticResource ScrollBarMinWidth}"
                                        Style="{StaticResource HorizontalIncrementStyle}"
                                        Command="ScrollBar.LineRightCommand"
                                        IsTabStop="False"/>
                                <ContentPresenter
                                        Grid.ColumnSpan="3"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="BackgroundVisual" Property="BorderBrush" Value="{StaticResource ScrollBarOuterBorder_Disabled}"/>
                                    <Setter TargetName="BackgroundVisual" Property="Background" Value="{StaticResource ScrollBarBackground_Disabled}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            <Border Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Margin="0 0 -1 -1">
                                <Border
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                        BorderThickness="0 0 1 1"
                                        BorderBrush="{StaticResource ScrollBarOuterBorder_Normal}"
                                        Background="{StaticResource ScrollViewerIntersectionRectangle}"/>
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Margin="0 0 -1 0"
                                    BorderThickness="{StaticResource ScrollViewerVerticalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Orientation="Vertical"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Margin="0 0 0 -1"
                                    BorderThickness="{StaticResource ScrollViewerHorizontalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Grid.Column="0"
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableWidth}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar"/>
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer"/>
    <Style x:Key="RadButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <ContentPresenter x:Name="Content"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Collapsed"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadPathButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{StaticResource ControlElement_Normal}"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style x:Key="RadPathButtonStyle" TargetType="telerik:RadPathButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="PathStyle" Value="{StaticResource RadPathButtonPathStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadPathButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentVisibilityStates">
                                <VisualState x:Name="Visible"/>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="Path" Grid.Column="1" Grid.Row="1" Style="{TemplateBinding PathStyle}" Data="{TemplateBinding PathGeometry}"/>
                            <Grid x:Name="ContentHost" Grid.Column="1" Grid.Row="2">
                                <ContentPresenter x:Name="Content"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        Margin="{TemplateBinding ContentMargin}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        RecognizesAccessKey="True"/>
                            </Grid>
                        </Grid>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Collapsed"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- content placement -->
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 3 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="3 0 0 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 0 3"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 3 0 0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Left"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Right"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Right"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Left"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Top"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Bottom"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Bottom"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Top"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}"
                                Background="{StaticResource ControlBackground_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadDropDownButtonStyle" TargetType="telerik:RadDropDownButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DropDownMinHeight" Value="3"/>
        <Setter Property="DropDownMinWidth" Value="3"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="IsOpen" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadDropDownButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownButtonPosition">
                                <VisualState x:Name="DropDownButtonAtLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupPlacementState">
                                <VisualState x:Name="PlacementBottom"/>
                                <VisualState x:Name="PlacementTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PlacementLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PlacementRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Border x:Name="CheckedVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Checked}"
                                BorderBrush="{StaticResource ControlOuterBorder_Checked}">
                            <Border x:Name="InnerCheckedVisual"
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Content"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    RecognizesAccessKey="True"/>
                            <Grid x:Name="DropDownIndicator"
                                    IsHitTestVisible="False"
                                    Grid.Column="1"
                                    Grid.Row="2"
                                    HorizontalAlignment="Center"
                                    Canvas.ZIndex="2"
                                    VerticalAlignment="Center"
                                    RenderTransformOrigin="0.5,0.5"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}"
                                    Margin="5 3">
                                <Path
                                        Data="M0,0 L2,0 1,1 Z"
                                        Margin="0 2 0 0"
                                        Stretch="Fill"
                                        Width="{StaticResource ControlElement_Width}"
                                        Height="{StaticResource ControlElement_Height}"
                                        Fill="{StaticResource ControlElement_InnerNormal}"/>
                                <Path x:Name="Path"
                                        Data="M0,0 L2,0 1,1 Z"
                                        Margin="0 1"
                                        Fill="{StaticResource ControlElement_Normal}"
                                        Width="{StaticResource ControlElement_Width}"
                                        Height="{StaticResource ControlElement_Height}"
                                        Stretch="Fill"/>
                            </Grid>
                        </Grid>
                        <Popup x:Name="DropDownPopup" PopupAnimation="{TemplateBinding PopupAnimation}" AllowsTransparency="True" StaysOpen="False" Focusable="False" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownPopupBorder"
                                        BorderThickness="1"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MinWidth="{TemplateBinding DropDownMinWidth}"
                                        MinHeight="{TemplateBinding DropDownMinHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{StaticResource ControlBackground}"
                                        BorderBrush="{StaticResource ControlOuterBorder}"
                                        CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding DropDownContent}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                </Border>
                            </Grid>
                        </Popup>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSplitButtonToggleButtonStyle" BasedOn="{StaticResource RadToggleButtonStyle}" TargetType="telerik:RadToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ControlElement_Normal}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}"
                                Background="{StaticResource ControlBackground_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSplitButtonStyle" TargetType="telerik:RadSplitButton">
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="IsOpen" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ButtonPartStyle" Value="{StaticResource RadButtonStyle}"/>
        <Setter Property="TogglePartStyle" Value="{StaticResource RadSplitButtonToggleButtonStyle}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadSplitButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsCheckedState">
                                <VisualState x:Name="UnChecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenOrChecked">
                                <VisualState x:Name="OpenOrChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_Checked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="IsBackgroundVisible">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotOpenNotChecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownButtonPosition">
                                <VisualState x:Name="DropDownButtonAtLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 -1 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_LeftPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_RightPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 0 -1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_TopPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_BottomPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>-1 0 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 -1 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_BottomPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_TopPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonPartVisibility">
                                <VisualState x:Name="ButtonInvisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>3</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>3</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden"/>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Double>0</sys:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Double>1</sys:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <telerik:RadButton x:Name="ButtonPart"
                                    IsTabStop="False"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsButtonPartVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Background="{TemplateBinding Background}"
                                    Style="{TemplateBinding ButtonPartStyle}"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    Focusable="False"
                                    CornerRadius="{StaticResource SplitButton_LeftPartCornerRadius}"/>
                            <Border x:Name="CheckedVisual"
                                    Visibility="Collapsed"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="1"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                    Background="{x:Null}"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"/>
                            <telerik:RadToggleButton x:Name="DropDownPart"
                                    Margin="-1 0 0 0"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    IsTabStop="False"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    Style="{TemplateBinding TogglePartStyle}"
                                    FontSize="{TemplateBinding FontSize}"
                                    IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}"
                                    IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    MinHeight="9"
                                    MinWidth="15"
                                    CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}">
                                <Grid x:Name="PART_DropDownIndicatorInner"
                                        IsHitTestVisible="False"
                                        HorizontalAlignment="Center"
                                        Canvas.ZIndex="2"
                                        VerticalAlignment="Center"
                                        RenderTransformOrigin="0.5 0.5">
                                    <Path
                                            Data="M0,0 L2,0 1,1 Z"
                                            Margin="0 2 0 0"
                                            Stretch="Fill"
                                            Width="{StaticResource ControlElement_Width}"
                                            Height="{StaticResource ControlElement_Height}"
                                            Fill="{StaticResource ControlElement_InnerNormal}"/>
                                    <Path x:Name="Path"
                                            Fill="{Binding Foreground, ElementName=DropDownPart}"
                                            Margin="0 1"
                                            Data="M0,0 L2,0 1,1 Z"
                                            Width="{StaticResource ControlElement_Width}"
                                            Height="{StaticResource ControlElement_Height}"
                                            Stretch="Fill"/>
                                </Grid>
                            </telerik:RadToggleButton>
                        </Grid>
                        <Border x:Name="MouseOverVisual"
                                Visibility="Collapsed"
                                Background="{x:Null}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"/>
                        <Border x:Name="CommonStatesWrapper" Visibility="{Binding Path=IsPressed, ElementName = DropDownPart, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                            <Border x:Name="FocusVisual"
                                    Visibility="{Binding Path=IsPressed, ElementName = ButtonPart, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" CornerRadius="{TemplateBinding InnerCornerRadius}" BorderBrush="{StaticResource ControlInnerBorder_Focused}"/>
                            </Border>
                        </Border>
                        <Popup x:Name="DropDownPopup" PopupAnimation="{TemplateBinding PopupAnimation}" AllowsTransparency="True" StaysOpen="False" Focusable="False" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownPopupBorder"
                                        BorderThickness="1"
                                        MinWidth="3"
                                        MinHeight="3"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{StaticResource ControlBackground}"
                                        BorderBrush="{StaticResource ControlOuterBorder}"
                                        CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding DropDownContent}"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DropDownPlacement" Value="Bottom"/>
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="False">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadHyperlinkButtonStyle" TargetType="telerik:RadHyperlinkButton">
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}"/>
        <Setter Property="VisitedForeground" Value="{StaticResource RadHyperlinkButtonVisitedBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadHyperlinkButton">
                    <Border x:Name="PART_Background"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Hyperlink x:Name="PART_Hyperlink"
                                    Command="{TemplateBinding Command}"
                                    AutomationProperties.Name="HyperlinkElement"
                                    CommandParameter="{TemplateBinding CommandParameter}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    TextDecorations="{x:Null}"
                                    Cursor="Hand"
                                    TargetName="{TemplateBinding TargetName}"
                                    NavigateUri="{TemplateBinding NavigateUri}"
                                    Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="ContentPresenter"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                            </Hyperlink>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}"/>
                            <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <Trigger Property="IsVisited" Value="True">
                            <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VisitedForeground}"/>
                            <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsVisited" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsBackgroundVisible" Value="False">
                            <Setter TargetName="PART_Background" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}"/>
    <Style TargetType="telerik:RadPathButton" BasedOn="{StaticResource RadPathButtonStyle}"/>
    <Style TargetType="telerik:RadToggleButton" BasedOn="{StaticResource RadToggleButtonStyle}"/>
    <Style TargetType="telerik:RadRadioButton" BasedOn="{StaticResource RadRadioButtonStyle}"/>
    <Style TargetType="telerik:RadDropDownButton" BasedOn="{StaticResource RadDropDownButtonStyle}"/>
    <Style TargetType="telerik:RadSplitButton" BasedOn="{StaticResource RadSplitButtonStyle}"/>
    <Style TargetType="telerik:RadHyperlinkButton" BasedOn="{StaticResource RadHyperlinkButtonStyle}"/>
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{StaticResource DragVisualForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DragVisualBorder}"/>
        <Setter Property="Background" Value="{StaticResource DragVisualBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 2"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EffectStates">
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NoneEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Move">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoveEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Copy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CopyEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Link">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LinkEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Scroll">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ScrollEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="SecondItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                CornerRadius="2"
                                Margin="4 4 0 0"
                                BorderBrush="{StaticResource DragVisualMultyItemBorder}"
                                Background="{StaticResource DragVisualMultyItemBackground}"
                                BorderThickness="1"/>
                        <Border x:Name="ThirdthItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                CornerRadius="2"
                                Margin="2 2 2 2"
                                BorderBrush="{StaticResource DragVisualMultyItemBorder}"
                                Background="{StaticResource DragVisualMultyItemBackground}"
                                BorderThickness="1"/>
                        <Border x:Name="DragBackgroundVisual"
                                CornerRadius="2"
                                Margin="0 0 4 4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <Border Margin="0 0 4 4" Padding="{TemplateBinding BorderThickness}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="NoneEffect"
                                        Visibility="Collapsed"
                                        Margin="0 3 5 0"
                                        Width="10"
                                        Height="10"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Data="M2,8 L8,2 M9,5 C9,7.2 7.2,9 5,9 C2.7,9 1,7 1,5 C1,2.8 2.8,1 5,1 C7.2,1 9,2.8 9,5 z"
                                        Stroke="{StaticResource DragVisualEffectImportant}"
                                        StrokeThickness="2"/>
                                <Path x:Name="MoveEffect"
                                        Visibility="Collapsed"
                                        Margin="0 3 5 0"
                                        Width="10"
                                        Height="10"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Data="M0,5 L8,5 M4,1 L8,5 4,9"
                                        Stroke="{StaticResource DragVisualEffectNormal}"
                                        StrokeThickness="2"/>
                                <Path x:Name="CopyEffect"
                                        Visibility="Collapsed"
                                        Margin="0 3 5 0"
                                        Width="10"
                                        Height="10"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Data="M5,1 L5,9 M1,5 L9,5"
                                        Stroke="{StaticResource DragVisualEffectNormal}"
                                        StrokeThickness="2"/>
                                <Path x:Name="LinkEffect"
                                        Visibility="Collapsed"
                                        Margin="0 5 4 0"
                                        Height="6"
                                        Width="11"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Data="M8,0.5 C9.4,0.5 10.5,1.6 10.5,3 C10.5,4.4 9.4,5.5 8,5.5 C6.6,5.5 5.5,4.4 5.5,3 C5.5,1.6 6.6,0.5 8,0.5 z M3,0.5 C4.4,0.5 5.5,1.6 5.5,3 C5.5,4.4 4.4,5.5 3,5.5 C1.6,5.5 0.5,4.4 0.5,3 C0.5,1.6 1.6,0.5 3,0.5 z"
                                        Stroke="{StaticResource DragVisualEffectImportant}"
                                        StrokeThickness="1"/>
                                <Path x:Name="ScrollEffect"
                                        Visibility="Collapsed"
                                        Margin="0 2 5 0"
                                        Width="10"
                                        Height="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Data="M0,5 L5,0 10,5Z M0,7 L5,12 10,7Z"
                                        Fill="{StaticResource DragVisualEffectNormal}"/>
                                <ContentPresenter x:Name="Content"
                                        Grid.Column="1"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikDragDrop:DragVisual" BasedOn="{StaticResource DragVisualStyle}"/>
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik:RadListBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadListBoxItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"/>
                        <Border x:Name="MouseOverVisual"
                                Opacity="0"
                                SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlOuterBorder_Highlighted}">
                            <Border
                                    Background="{StaticResource ControlBackground_Highlighted}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Highlighted}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
                                    SnapsToDevicePixels="True"/>
                        </Border>
                        <Border x:Name="SelectedVisual"
                                Opacity="0"
                                SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}">
                            <Border
                                    Background="{StaticResource ControlSubItem_Background_Selected}"
                                    BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
                                    SnapsToDevicePixels="True"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border x:Name="FocusVisual"
                                Opacity="0"
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxDragVisualStyle" TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource DragVisualStyle}">
        <Setter Property="Foreground" Value="{StaticResource Foreground_brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxDragVisualBorder}"/>
        <Setter Property="Background" Value="{StaticResource ListBoxDragVisualBackground}"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Padding" Value="6 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EffectStates">
                                <VisualState x:Name="None">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NoneEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Move">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NoneEffect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DragBackgroundVisual"
                                    Margin="0 0 4 0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"/>
                            <Path x:Name="NoneEffect"
                                    Visibility="Collapsed"
                                    Margin="5 0 0 0"
                                    Width="10"
                                    Height="10"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Data="M2,8 L8,2 M9,5 C9,7.2 7.2,9 5,9 C2.7,9 1,7 1,5 C1,2.8 2.8,1 5,1 C7.2,1 9,2.8 9,5 z"
                                    Stroke="{StaticResource DragVisualEffectImportant}"
                                    StrokeThickness="2"/>
                            <Border
                                    Padding="{TemplateBinding BorderThickness}"
                                    Margin="1 1 5 1"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                                    Grid.ColumnSpan="2"/>
                            <ItemsControl
                                    ItemsSource="{Binding DraggedItemsStrings}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Grid.Column="1"/>
                        </Grid>
                        <Border
                                BorderBrush="{StaticResource ListBoxDragVisualTooltipBorder}"
                                Background="{StaticResource ListBoxDragVisualTooltipBackground}"
                                BorderThickness="1"
                                Margin="0 1 4 0"
                                Grid.Row="1"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}">
                            <StackPanel Orientation="Horizontal" Margin="5 1">
                                <Path
                                        Data="M6,2.9 L11,2.9 L11,3.9 L6,3.9 z M4.0,4.9 L13,4.9 L13,5.9 L4.0,5.9 z M6.0,6.9 L11,6.9 L11,7.9 L6.0,7.9 z M4,3.4 L0,7 L0,0 z"
                                        Fill="{StaticResource ListBoxDragVisualIconBrush}"
                                        Height="8"
                                        Stretch="Fill"
                                        VerticalAlignment="Center"
                                        Margin="0 0 5 0"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}"/>
                                <Path
                                        Data="M2,4 L7,4 L7,5 L2,5 z M0,2 L9,2 L9,3 L0,3 z M13,1.0 L13,8.0 L9,4.4 z M2,0 L7,0 L7,1 L2,1 z"
                                        HorizontalAlignment="Left"
                                        Fill="{StaticResource ListBoxDragVisualIconBrush}"
                                        Height="8"
                                        Stretch="Fill"
                                        VerticalAlignment="Center"
                                        Margin="0 0 5 0"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}"/>
                                <TextBlock Text="{Binding DropPosition}"/>
                                <TextBlock Text=":" Margin="1 0 5 0"/>
                                <TextBlock Text="{Binding DropItemString}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik:RadListBox">
        <Setter Property="telerik:ScrollingSettingsBehavior.IsEnabled" Value="True"/>
        <Setter Property="telerik:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30"/>

        <!-- ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based. -->
        <Setter Property="telerik:ScrollingSettingsBehavior.ScrollStep" Value="24"/>
        <Setter Property="telerik:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadListBox">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                    IsTabStop="False"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{x:Null}"
                                    Margin="0"
                                    BorderThickness="0">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Command="telerikPrimitives:ListControl.SelectAllCommand" Key="A" Modifiers="Control"/>
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter x:Name="PART_DropVisualPlaceholder" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadListBox" BasedOn="{StaticResource RadListBoxStyle}"/>
    <Style TargetType="telerik:RadListBoxItem" BasedOn="{StaticResource RadListBoxItemStyle}"/>
    <Style TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource ListBoxDragVisualStyle}"/>
    <Style x:Key="LabelStyle" TargetType="telerik:Label">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 3"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource LabelForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:Label">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ContentPresenter x:Name="Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik:Label" BasedOn="{StaticResource LabelStyle}"/>
    <Style x:Key="WatermarkTextBoxLabelStyle" TargetType="telerik:Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="Padding" Value="7 0"/>
        <Setter Property="Margin" Value="0 3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik:RadWatermarkTextBox}, Path=HasLabel}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik:RadWatermarkTextBox}, Path=IsLabelFloated}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik:RadWatermarkTextBox}, Path=HasLabel}" Value="False">
                <Setter Property="Margin" Value="0"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadWatermarkTextBoxStyle" TargetType="telerik:RadWatermarkTextBox">
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="Padding" Value="5 2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource PickerBackground_Normal}"/>
        <Setter Property="ReadOnlyBackground" Value="{StaticResource ControlBackground_ReadOnly}"/>
        <Setter Property="DisabledBackground" Value="{StaticResource ControlBackground_Disabled}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="LabelStyle" Value="{StaticResource WatermarkTextBoxLabelStyle}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="LabelFloatAnimation">
                        <animation:LabelPositionAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="Out"/>
                        <animation:FontSizeAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="Out"/>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="LabelCenterAnimation">
                        <animation:LabelPositionAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="In"/>
                        <animation:FontSizeAnimation TargetElementName="PART_LabelVisualElement" Duration="00:00:00.175" Direction="In"/>
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadWatermarkTextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_ContentHost"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualState x:Name="WatermarkHidden">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="WatermarkVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="WatermarkVisible"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="PART_LabelRowDefinition"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                Opacity="1"/>
                        <Border x:Name="ReadOnlyVisualElement"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                Background="{TemplateBinding ReadOnlyBackground}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                Opacity="0"/>
                        <Border x:Name="MouseOverVisual"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Visibility="Collapsed"/>
                        <Border x:Name="DisabledVisualElement"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                Background="{TemplateBinding DisabledBackground}"
                                BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                                Grid.RowSpan="2"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderThickness="0"
                                IsTabStop="False"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="FocusVisual"
                                Opacity="0"
                                IsHitTestVisible="False"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Border>
                        <ContentControl x:Name="WatermarkVisualElement"
                                Grid.RowSpan="2"
                                IsTabStop="False"
                                Opacity="0.5"
                                FontStyle="Italic"
                                Content="{TemplateBinding WatermarkContent}"
                                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="False"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="1 0 0 0">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <ContentPresenter x:Name="AdditionalContentHost"
                                Grid.Column="1"
                                Grid.RowSpan="2"
                                Content="{TemplateBinding AdditionalContent}"
                                ContentTemplate="{TemplateBinding AdditionalContentTemplate}"/>
                        <telerik:Label x:Name="PART_LabelVisualElement" Grid.RowSpan="2" Content="{TemplateBinding Label}" Style="{TemplateBinding LabelStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasLabel" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_ContentHost" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="ToolTip">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="Static">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik:ValidationErrorTemplateHelper.DisplayMode" Value="StaticOnFocus">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerik:RadWatermarkTextBox" BasedOn="{StaticResource RadWatermarkTextBoxStyle}"/>
    <Style x:Key="ExpanderHeaderButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TabIndex" Value="{Binding TabIndex, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="VerticalAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="FontStyle" Value="{Binding FontStyle, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="FontStretch" Value="{Binding FontStretch, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=telerik:RadExpander}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Border x:Name="BorderVisual" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid x:Name="HeaderPanel" Background="Transparent" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Ellipse x:Name="NormalCircle"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Width="20"
                                        Height="20"
                                        Fill="{StaticResource ControlBackground_Normal}"
                                        Stroke="{StaticResource ControlOuterBorder_Normal}"
                                        StrokeThickness="1"/>
                                <Ellipse x:Name="OuterCircle" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{x:Null}" Fill="{x:Null}" Width="20" Height="20" StrokeThickness="1"/>
                                <Ellipse x:Name="InnerCircle" Width="18" Height="18" Stroke="{StaticResource ControlInnerBorder_Normal}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Grid RenderTransformOrigin="0.5 0.5" x:Name="arrowPanel">
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=telerik:RadExpander},Converter={StaticResource ExpandDirectionToRotationAngleConverter}}"/>
                                    </Grid.RenderTransform>
                                    <Path x:Name="arrow"
                                            Stretch="None"
                                            RenderTransformOrigin="0.5,0.5"
                                            Width="8"
                                            Height="4"
                                            Data="M0,0 L0.67,0 4,2.67 7.25,0 8,0 8,0.67 4,4 0,0.75 z"
                                            Fill="{StaticResource ControlElement_Normal}">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="0"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>
                            <ContentPresenter x:Name="HeaderContent"
                                    Grid.Column="1"
                                    Margin="5 0"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStateGroup">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalCircle" Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Fill" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalCircle" Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Fill" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterCircle" Storyboard.TargetProperty="Fill" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="Fill" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="HeaderContent" Storyboard.TargetProperty="Opacity" To=".5"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerCircle" Storyboard.TargetProperty="Stroke" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="180" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="telerik:RadExpander" x:Key="ExpanderTemplate">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStateGroup">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderStateGroup">
                    <VisualState x:Name="NormalHeader"/>
                    <VisualState x:Name="MouseOverHeader"/>
                    <VisualState x:Name="PressedHeader"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderOrientationGroup">
                    <VisualState x:Name="HorizontalOrientation">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="0"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalOrientation">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStateGroup">
                    <VisualState x:Name="Expanded"/>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandDirectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(Grid.Row)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <sys:Int32>0</sys:Int32>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <sys:Int32>0</sys:Int32>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="(Grid.Row)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <sys:Int32>0</sys:Int32>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <sys:Int32>0</sys:Int32>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col0" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <GridLength>Auto</GridLength>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col1" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <GridLength>Auto</GridLength>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row0" Storyboard.TargetProperty="Height">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <GridLength>Auto</GridLength>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row1" Storyboard.TargetProperty="Height">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <GridLength>Auto</GridLength>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="DirectionLeft">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col0" Storyboard.TargetProperty="Width">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row0" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="(Grid.Column)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>1</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionRight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col1" Storyboard.TargetProperty="Width">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row0" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(Grid.Column)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>1</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionUp">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col0" Storyboard.TargetProperty="Width">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row0" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentTransform" Storyboard.TargetProperty="(Grid.Row)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>1</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DirectionDown">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col0" Storyboard.TargetProperty="Width">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row1" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <GridLength>*</GridLength>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(Grid.Row)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>1</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{StaticResource Expander_BorderRadius}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto"/>
                        <RowDefinition x:Name="row1" Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto"/>
                        <ColumnDefinition x:Name="col1" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <telerikPrimitives:LayoutTransformControl RenderTransformOrigin=".5 .5" x:Name="HeaderContentTransform">
                        <telerik:RadToggleButton x:Name="HeaderButton"
                                IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                ClickMode="{TemplateBinding ClickMode}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                Style="{TemplateBinding HeaderButtonStyle}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                    </telerikPrimitives:LayoutTransformControl>
                    <ContentPresenter x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            Visibility="Collapsed"
                            UseLayoutRounding="True"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style TargetType="telerik:RadExpander" x:Key="RadExpanderStyle">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HeaderButtonStyle" Value="{StaticResource ExpanderHeaderButtonStyle}"/>
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch"/>
        <Setter Property="VerticalHeaderAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource Expander_Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Expander_BorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource Expander_BorderThickness}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Collapse" Direction="Out" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="ExpandHorizontal" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="CollapseHorizontal" Direction="Out" TargetElementName="Content"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadExpander" BasedOn="{StaticResource RadExpanderStyle}"/>
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="IsInAnotherView"/>
                                <VisualState x:Name="IsNotFromCurrentView">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonType">
                                <VisualState x:Name="Year"/>
                                <VisualState x:Name="Decade"/>
                                <VisualState x:Name="Date"/>
                                <VisualState x:Name="WeekName">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="WeekNumber">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TodayDate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Month"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <telerikChromes:ButtonChrome x:Name="SelectionChrome"
                                Margin="{StaticResource CalendarButtonButtonChromeMargin}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderNormal="False"
                                RenderFocused="{TemplateBinding IsFocused}"
                                RenderSelected="{TemplateBinding IsSelected}"
                                RenderHighlighted="{TemplateBinding IsMouseOver}"/>
                        <Border x:Name="TodayVisual"
                                Margin="{StaticResource CalendarButtonTodayVisualMargin}"
                                Visibility="Collapsed"
                                BorderThickness="1"
                                CornerRadius="2"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="calendar:CalendarButton" BasedOn="{StaticResource CalendarButtonStyle}"/>
    <Style TargetType="calendar:CalendarView" x:Key="CalendarViewStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2" Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Visibility="{TemplateBinding HeaderVisibility}"
                                Margin="{StaticResource CalendarViewHeaderMargin}"
                                Background="{StaticResource CalendarSubHeaderBackground}"
                                BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}"/>
                        <Border x:Name="BorderBrush" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style x:Key="MonthViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}"/>
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2" Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Visibility="{TemplateBinding HeaderVisibility}"
                                Margin="{StaticResource CalendarViewHeaderMargin}"
                                Background="{StaticResource CalendarSubHeaderBackground}"
                                BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <Grid x:Name="WeekHeaders" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="7*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="VerticalOuterBorder"
                                    Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalOuterBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderVerticalOuterBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderVerticalOuterBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalOuterBorderMargin}"
                                    Visibility="{Binding Path=HideColumn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                            <Border x:Name="HorizontalOuterBorder"
                                    Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalOuterBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderHorizontalOuterBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderHorizontalOuterBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalOuterBorderMargin}"
                                    Visibility="{Binding Path=HideRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                            <Border x:Name="VerticalInnerBorder"
                                    Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalInnerBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderVerticalInnerBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderVerticalInnerBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalInnerBorderMargin}"
                                    Visibility="{Binding Path=HideColumn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                            <Border x:Name="HorizontalInnerBorder"
                                    Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalInnerBorderZIndex}"
                                    BorderBrush="{StaticResource CalendarWeekHeaderHorizontalInnerBorder}"
                                    BorderThickness="{StaticResource CalendarWeekHeaderHorizontalInnerBorderThickness}"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalInnerBorderMargin}"
                                    Visibility="{Binding Path=HideRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                            <Rectangle x:Name="VerticalBackground"
                                    Grid.RowSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalBackgroundZIndex}"
                                    Fill="{StaticResource CalendarWeekHeaderVerticalBackground}"
                                    Margin="{StaticResource CalendarWeekHeaderVerticalBackgroundMargin}"
                                    Visibility="{Binding Path=HideColumn, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                            <Rectangle x:Name="HorizontalBackground"
                                    Grid.ColumnSpan="2"
                                    Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalBackgroundZIndex}"
                                    Fill="{StaticResource CalendarWeekHeaderHorizontalBackground}"
                                    Margin="{StaticResource CalendarWeekHeaderHorizontalBackgroundMargin}"
                                    Visibility="{Binding Path=HideRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                        </Grid>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}"/>
                        <Border x:Name="BorderBrush" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style TargetType="calendar:CalendarView" BasedOn="{StaticResource MonthViewStyle}"/>
    <Style x:Key="HeaderButtonChrome" TargetType="telerikChromes:ButtonChrome">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource HeaderButtonBackground_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource SplitButton_SpanCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikChromes:ButtonChrome">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonOuterBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonInnerBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonOuterBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonInnerBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="InnerBorder"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource HeaderButtonInnerBorder_Normal}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveLeftButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome
                                Style="{StaticResource HeaderButtonChrome}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"
                                RenderFocused="{TemplateBinding IsFocused}"/>
                        <Path x:Name="BackgroundIcon"
                                Fill="{StaticResource HeaderButtonIconBackground_Normal}"
                                Margin="0 2 0 0"
                                Width="4"
                                Height="7"
                                Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z"/>
                        <Path x:Name="ForegroundIcon"
                                Fill="{StaticResource HeaderButtonIconForeground_Normal}"
                                Margin="0 1 0 1"
                                Width="4"
                                Height="7"
                                Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoveRightButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundIcon" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonIconForeground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome
                                Style="{StaticResource HeaderButtonChrome}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                RenderMouseOver="{TemplateBinding IsMouseOver}"
                                RenderPressed="{TemplateBinding IsPressed}"
                                RenderFocused="{TemplateBinding IsFocused}"/>
                        <Path x:Name="BackgroundIcon"
                                Fill="{StaticResource HeaderButtonIconBackground_Normal}"
                                Margin="0 2 0 0"
                                Width="4"
                                Height="7"
                                Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z"/>
                        <Path x:Name="ForegroundIcon"
                                Fill="{StaticResource HeaderButtonIconForeground_Normal}"
                                Margin="0 1 0 1"
                                Width="4"
                                Height="7"
                                Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ForegroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundText" Storyboard.TargetProperty="TextDecorations">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButtonTextDecoration}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="BackgroundText"
                                Text="{TemplateBinding Content}"
                                Margin="0 2 0 0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                Foreground="{StaticResource HeaderTextBackground}"/>
                        <TextBlock x:Name="ForegroundText"
                                Text="{TemplateBinding Content}"
                                Margin="0 1 0 1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                Foreground="{StaticResource HeaderTextForeground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadCalendarStyle" TargetType="telerikInput:RadCalendar">
        <Setter Property="Columns" Value="1"/>
        <Setter Property="Rows" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}"/>
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}"/>
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="Background" Value="{StaticResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}"/>
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Background" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <calendar:TransitionPanel x:Name="TransitionPanel" Grid.Row="1" ClipToBounds="True" Margin="{StaticResource CalendarTransitionPanelMargin}">
                            <telerikPrimitives:RadUniformGrid x:Name="MonthViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}"/>
                            <telerikPrimitives:RadUniformGrid x:Name="YearViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                            <telerikPrimitives:RadUniformGrid x:Name="DecadeViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                            <telerikPrimitives:RadUniformGrid x:Name="CenturyViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed"/>
                        </calendar:TransitionPanel>
                        <Border x:Name="OuterBorder"
                                Grid.RowSpan="2"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CalendarOuterBorderCornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource CalendarInnerBorder}" CornerRadius="{StaticResource CalendarInnerBorderCornerRadius}" BorderThickness="1"/>
                        </Border>
                        <Border x:Name="Navigation"
                                Margin="0 0 0 -1"
                                Canvas.ZIndex="2"
                                Visibility="{TemplateBinding HeaderVisibility}"
                                BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}"
                                BorderBrush="{StaticResource HeaderOuterBorder}"
                                Background="{StaticResource HeaderBackground}">
                            <Border
                                    BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                    BorderBrush="{StaticResource HeaderInnerBorder}"
                                    CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton x:Name="MoveLeft"
                                            Grid.Column="0"
                                            AutomationProperties.Name="Move Left"
                                            Visibility="{TemplateBinding PreviousButtonVisibility}"
                                            Style="{StaticResource MoveLeftButtonStyle}"/>
                                    <Button x:Name="Header" Grid.Column="1" Style="{StaticResource CalendarHeaderButton}"/>
                                    <RepeatButton x:Name="MoveRight"
                                            AutomationProperties.Name="Move Right"
                                            Grid.Column="2"
                                            Visibility="{TemplateBinding NextButtonVisibility}"
                                            Style="{StaticResource MoveRightButtonStyle}"/>
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" FirstColumn="1" VerticalAlignment="Stretch" Rows="7" Columns="8"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadCalendar" BasedOn="{StaticResource RadCalendarStyle}"/>
    <Style TargetType="telerikInput:RadClockItem" x:Key="ClockItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="{StaticResource ClockItemPadding}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClockItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikChromes:ButtonChrome x:Name="SelectionChrome"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                Margin="{StaticResource ClockButtonChromeMargin}"
                                RenderNormal="False"
                                RenderSelected="{TemplateBinding IsSelected}"
                                RenderHighlighted="{TemplateBinding IsMouseOver}"
                                RenderFocused="{TemplateBinding IsFocused}"/>
                        <ContentPresenter x:Name="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type telerikInput:RadClock}}}" Value="True">
                            <Setter TargetName="SelectionChrome" Property="RenderFocused" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadClockItem" BasedOn="{StaticResource ClockItemStyle}"/>
    <Style TargetType="telerikInput:RadClock" x:Key="RadClockStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ClockBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="1"/>
        <Setter Property="StartTime" Value="0:0:0"/>
        <Setter Property="EndTime" Value="23:59:0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikPrimitives:RadUniformGrid x:Name="uniformGrid" Columns="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="ContentText" Text="{Binding}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundVisual"
                                Grid.RowSpan="2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{StaticResource ClockOuterBorderCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border CornerRadius="{StaticResource ClockInnerBorderCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ClockInnerBorderBrush}"/>
                        </Border>
                        <Border x:Name="Header"
                                BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}"
                                BorderBrush="{StaticResource HeaderOuterBorder}"
                                Background="{StaticResource HeaderBackground}"
                                MinHeight="32">
                            <Border
                                    BorderThickness="{StaticResource CalendarHeaderBorderThickness}"
                                    BorderBrush="{StaticResource HeaderInnerBorder}"
                                    CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentControl
                                        Foreground="{StaticResource HeaderTextForeground}"
                                        IsTabStop="False"
                                        FontWeight="{StaticResource HeaderTextFontWeight}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Border>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource ClockItemsMargin}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadClock" BasedOn="{StaticResource RadClockStyle}"/>
    <DataTemplate x:Key="DateTimePickerWatermarkTemplate">
        <ContentControl Content="{Binding}" Opacity="1" IsTabStop="False" Margin="1 0"/>
    </DataTemplate>
    <DataTemplate x:Key="TooltipTemplate">
        <Border Margin="2" CornerRadius="3">
            <Border CornerRadius="2" Background="{StaticResource TooltipBackground}" BorderBrush="{x:Null}" BorderThickness="{StaticResource Tooltip_OuterBorderThickness}" Margin="-3">
                <Border CornerRadius="1" BorderBrush="{StaticResource Tooltip_OuterBorderBrush}" BorderThickness="{StaticResource Tooltip_OuterBorderThickness}">
                    <ContentControl Foreground="{StaticResource TooltipForeground}" Margin="5 2" Content="{Binding}"/>
                </Border>
            </Border>
        </Border>
    </DataTemplate>
    <Style x:Key="CloseButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabIndex" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid>
                        <telerikChromes:ButtonChrome RenderNormal="False" RenderFocused="{TemplateBinding IsFocused}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikInput:RadDateTimePicker" x:Key="RadDateTimePickerStyle">
        <Setter Property="CalendarStyle" Value="{StaticResource RadCalendarStyle}"/>
        <Setter Property="ClockStyle" Value="{StaticResource RadClockStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}"/>
        <Setter Property="Background" Value="{StaticResource PickerBackground_Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource DateTimePickerWatermarkTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderActive">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.050" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.050">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.150" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderFocused">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputTypeStates">
                                <VisualState x:Name="DateTimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayButtonBorder" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1 0 0 1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DatePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Clock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonContainer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Calendar" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonContainer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayButtonBorder" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundVisual"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                        <Border x:Name="MouseOverVisual"
                                Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0"
                                Visibility="Collapsed"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                        <telerik1:RadWatermarkTextBox x:Name="PART_DateTimeInput"
                                Grid.Column="0"
                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                AutomationProperties.HelpText="{TemplateBinding AutomationProperties.HelpText}"
                                AutomationProperties.LabeledBy="{TemplateBinding AutomationProperties.LabeledBy}"
                                Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                CurrentText="{Binding CurrentDateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Stretch"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                MinHeight="0"
                                Margin="{TemplateBinding BorderThickness}"
                                WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                                WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TabIndex="0"
                                SelectionOnFocus="{TemplateBinding SelectionOnFocus}"
                                Focusable="{TemplateBinding Focusable}"/>
                        <Border x:Name="FocusVisual"
                                Visibility="Collapsed"
                                Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Border>
                        <telerik1:RadDropDownButton
                                Grid.Column="2"
                                TabIndex="1"
                                Margin="-1 0 0 0"
                                Padding="0"
                                DropDownIndicatorVisibility="Collapsed"
                                x:Name="PART_DropDownButton"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True"
                                IsTabStop="False"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True"
                                Focusable="False">
                            <telerik1:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <telerikInput:RadCalendar x:Name="PART_Calendar"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                            Culture="{TemplateBinding Culture}"
                                            SelectionMode="Single"
                                            Style="{TemplateBinding CalendarStyle}"
                                            DisplayDateStart="{Binding DisplayDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            DisplayDateEnd="{Binding DisplayDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            SelectableDateStart="{Binding SelectableDateStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            BlackoutDates="{Binding BlackoutDates, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            SelectableDateEnd="{Binding SelectableDateEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                    <telerikInput:DateTimePickerClock x:Name="PART_Clock"
                                            Grid.Column="1"
                                            Grid.Row="0"
                                            ItemsSource="{TemplateBinding ClockItemsSource}"
                                            StartTime="{TemplateBinding StartTime}"
                                            EndTime="{TemplateBinding EndTime}"
                                            TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            Style="{TemplateBinding ClockStyle}"
                                            Culture="{TemplateBinding Culture}"
                                            SelectedItem="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Border x:Name="CloseButtonContainer"
                                            Grid.ColumnSpan="2"
                                            telerik1:TouchManager.TouchMode="None"
                                            Grid.Row="1"
                                            Background="{StaticResource PanelBackground}"
                                            BorderThickness="1 0 1 1"
                                            BorderBrush="{StaticResource CalendarOuterBorder}">
                                        <Border BorderThickness="1 0 1 1" BorderBrush="{StaticResource CalendarInnerBorder}">
                                            <telerik1:RadToggleButton x:Name="PART_Close"
                                                    IsBackgroundVisible="False"
                                                    HorizontalAlignment="Right"
                                                    Padding="8 3"
                                                    Margin="2"
                                                    IsThreeState="False"
                                                    telerik1:LocalizationManager.ResourceKey="Close"
                                                    Style="{StaticResource CloseButtonStyle}"
                                                    IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </Border>
                                    </Border>
                                    <Border x:Name="TodayButtonBorder"
                                            Grid.Row="1"
                                            Visibility="{TemplateBinding TodayButtonVisibility}"
                                            BorderThickness="1 0 1 1"
                                            BorderBrush="{StaticResource CalendarOuterBorder}"
                                            Background="{StaticResource PanelBackground}">
                                        <telerik1:RadButton x:Name="TodayButton"
                                                Command="{x:Static telerik1:RadDateTimePickerCommands.SetToday}"
                                                IsBackgroundVisible="False"
                                                Margin="3 2 3 3"
                                                Content="{TemplateBinding TodayButtonContent}"/>
                                    </Border>
                                </Grid>
                            </telerik1:RadDropDownButton.DropDownContent>
                            <telerik1:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik1:RadDropDownButton">
                                    <Grid>
                                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Popup x:Name="DropDownPopup"
                                                AllowsTransparency="True"
                                                StaysOpen="False"
                                                Focusable="false"
                                                Placement="Bottom"
                                                IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ContentPresenter x:Name="DropDownPopupContent"
                                                    Content="{TemplateBinding DropDownContent}"
                                                    ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik1:RadDropDownButton.Template>
                            <Grid>
                                <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
                                        CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}"
                                        RenderEnabled="{TemplateBinding IsEnabled}"
                                        RenderActive="{TemplateBinding IsMouseOver}"
                                        RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
                                <ContentControl x:Name="DropDownIcon"
                                        IsTabStop="False"
                                        FlowDirection="LeftToRight"
                                        Template="{StaticResource CalendarIcon}"
                                        Background="{StaticResource ButtonIconBackground_Normal}"
                                        Foreground="{StaticResource ButtonIconForeground_Normal}"/>
                            </Grid>
                        </telerik1:RadDropDownButton>
                        <Popup x:Name="PART_InputPopup"
                                telerik1:PopupExtensions.IsOpen="{Binding IsTooltipOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                telerik1:PopupExtensions.Placement="Top"
                                telerik1:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                telerik1:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                StaysOpen="False"
                                AllowsTransparency="True">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}"/>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="ToolTip">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="Static">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}"/>
            </Trigger>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.DisplayMode" Value="StaticOnFocus">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerikInput:RadDateTimePicker" BasedOn="{StaticResource RadDateTimePickerStyle}"/>
    <Style TargetType="telerikInput:RadDatePicker" BasedOn="{StaticResource RadDateTimePickerStyle}">
        <Setter Property="InputMode" Value="DatePicker"/>
    </Style>
    <Style TargetType="telerikInput:RadTimePicker" BasedOn="{StaticResource RadDateTimePickerStyle}">
        <Setter Property="InputMode" Value="TimePicker"/>
    </Style>
    <SolidColorBrush x:Key="GridSplitter_Background" Color="#FFEFEFEF"/>
    <SolidColorBrush x:Key="GridSplitter_Foreground" Color="#FF525272"/>
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource GridSplitter_Background}"/>
        <Setter Property="MinWidth" Value="6"/>
        <Setter Property="MinHeight" Value="6"/>
        <Setter Property="Foreground" Value="{StaticResource GridSplitter_Foreground}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Border x:Name="BorderVisual" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path x:Name="Path"
                                Data="M0,0L2,0L2,2L0,2zM0,4L2,4L2,6L0,6zM0,8L2,8L2,10L0,10zM0,12L2,12L2,14L0,14z"
                                Width="2"
                                Height="14"
                                Fill="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="Path" Property="Data" Value="M0,0L2,0L2,2L0,2L0,0z M4,0L6,0L6,2L4,2L4,0z M8,0L10,0L10,2L8,2L8,0z M12,0L14,0L14,2L12,2L12,0z"/>
                            <Setter TargetName="Path" Property="Width" Value="14"/>
                            <Setter TargetName="Path" Property="Height" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource GridSplitterStyle}"/>
    <Style TargetType="telerikNavigation:RadPanelBar" x:Key="RadPanelbarBaseStyle">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="telerik1:AnimationManager.IsAnimationEnabled" Value="False"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animationNavigation:PanelBarExpandCollapseAnimation AnimationName="Expand" Direction="In"/>
                    <animationNavigation:PanelBarExpandCollapseAnimation AnimationName="Collapse" Direction="Out"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0 -1 0 0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikNavigation:PanelBarPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadPanelBar">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="transformationRoot" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="transformationRoot" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="ScrollViewer"
                                        IsTabStop="False"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Padding="{TemplateBinding Padding}"
                                        Margin="0"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </telerikPrimitives:LayoutTransformControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="telerik1:AnimationManager.IsAnimationEnabled" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <telerikNavigation:PanelBarPanel VerticalAlignment="Top"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Path" x:Key="PanelBarItemExpanderStyle">
        <Setter Property="Data" Value="{Binding Source={StaticResource PanelBarItemPathGeometry}}"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Stroke" Value="{StaticResource ControlElement_Normal}"/>
    </Style>
    <ControlTemplate TargetType="telerikNavigation:RadPanelBarItem" x:Key="PanelBarItemTopLevelTemplate">
        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Arrow" To="0.5" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header" To="0.5" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOut"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="SelectedVisual" Duration="0" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="directionRotation" Storyboard.TargetProperty="Angle" To="180" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HeaderRow" UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="NormalVisual"
                        Grid.ColumnSpan="5"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Margin="-1 0 -1 -1">
                    <Border BorderBrush="{StaticResource ControlItem_InnerBorder_Normal}" BorderThickness="1" Background="{x:Null}"/>
                </Border>
                <Border x:Name="MouseOverVisual"
                        Opacity="0"
                        Grid.ColumnSpan="5"
                        Background="{StaticResource ControlItem_Background_MouseOver}"
                        Margin="-1 0 -1 -1"
                        BorderBrush="{StaticResource ControlItem_OuterBorder_MouseOver}"
                        BorderThickness="1">
                    <Border BorderBrush="{StaticResource ControlItem_InnerBorder_MouseOver}" BorderThickness="1" Background="{x:Null}"/>
                </Border>
                <Border x:Name="SelectedVisual"
                        Opacity="0"
                        Grid.ColumnSpan="5"
                        Background="{StaticResource ControlItem_Background_Selected}"
                        Margin="-1 0 -1 -1"
                        BorderBrush="{StaticResource ControlItem_OuterBorder_Selected}"
                        BorderThickness="1">
                    <Border BorderBrush="{StaticResource ControlItem_InnerBorder_Selected}" BorderThickness="1" Background="{x:Null}"/>
                </Border>
                <Grid Grid.Column="5" Margin="7 0" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5 0.5" Opacity="1">
                    <Grid.RenderTransform>
                        <RotateTransform x:Name="directionRotation" Angle="0"/>
                    </Grid.RenderTransform>
                    <Path x:Name="Arrow" Style="{TemplateBinding ExpanderStyle}"/>
                </Grid>
                <ContentControl x:Name="Header"
                        Margin="{TemplateBinding Padding}"
                        Grid.ColumnSpan="4"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        FontWeight="{TemplateBinding FontWeight}"
                        FontSize="{TemplateBinding FontSize}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        Foreground="{TemplateBinding Foreground}"/>
                <Rectangle x:Name="FocusVisual"
                        Visibility="Collapsed"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        StrokeThickness="1"
                        IsHitTestVisible="False"
                        StrokeDashArray="1 2"
                        Stroke="{StaticResource FocusBrushBlack}"/>
            </Grid>
            <Grid Grid.Row="1" Visibility="Collapsed" x:Name="ItemsContainer">
                <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                    <ScrollViewer x:Name="PART_ScrollViewer"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Disabled"
                            IsTabStop="False"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </telerikPrimitives:LayoutTransformControl>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsScrollViewerInsideItemsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type telerikNavigation:RadPanelBar}}}" Value="True">
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter TargetName="PART_ScrollViewer" Property="VerticalScrollBarVisibility" Value="Auto"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="telerikNavigation:RadPanelBarItem" x:Key="PanelBarItemSecondLevelTemplate">
        <Grid x:Name="RootElement" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisual" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual" To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOut"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedVisual" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HeaderRow" Background="Transparent" MinHeight="{TemplateBinding MinHeight}" Margin="5 0">
                <Border x:Name="MouseOverVisual"
                        Opacity="0"
                        Background="{StaticResource ControlSubItem_Background_MouseOver}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderBrush="{StaticResource ControlSubItem_OuterBorder_MouseOver}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlSubItem_InnerBorder_MouseOver}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <Border x:Name="SelectedVisual"
                        Opacity="0"
                        Background="{StaticResource ControlSubItem_Background_Selected}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <Border x:Name="DisabledVisual"
                        Background="{StaticResource ControlBackground_Disabled}"
                        Opacity="0"
                        BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <ContentControl x:Name="Header"
                        Margin="{TemplateBinding Padding}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Mode=OneWay}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <Rectangle x:Name="FocusVisual"
                        Visibility="Collapsed"
                        IsHitTestVisible="False"
                        StrokeThickness="1"
                        StrokeDashArray="1 2"
                        RadiusX="2"
                        RadiusY="2"
                        Stroke="{StaticResource FocusBrushBlack}"/>
            </Grid>
            <Grid Visibility="Collapsed" Grid.Row="1" x:Name="ItemsContainer">
                <ItemsPresenter/>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style TargetType="telerikNavigation:RadPanelBarItem" x:Key="RadPanelbarItemBaseStyle">
        <Setter Property="ExpanderStyle" Value="{StaticResource PanelBarItemExpanderStyle}"/>
        <Setter Property="Template" Value="{StaticResource PanelBarItemSecondLevelTemplate}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ControlItem_Background_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlItem_OuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ChildItemsTemplate" Value="{StaticResource PanelBarItemSecondLevelTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikNavigation:PanelBarPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Level" Value="1">
                <Setter Property="Template" Value="{StaticResource PanelBarItemTopLevelTemplate}"/>
                <Setter Property="ExpandedMinLength" Value="23"/>
                <Setter Property="ExpandedLength" Value="65"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PanelBarGridSplitterStyle" TargetType="telerikNavigation:PanelBarGridSplitter" BasedOn="{StaticResource GridSplitterStyle}">
        <Setter Property="Margin" Value="-1"/>
        <Setter Property="MinHeight" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="NormalVisual" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NormalVisual"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                OpacityMask="{StaticResource RadPanelBar_SplitterOpacityMask}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="15" Height="3">
                                <Path
                                        Stretch="Fill"
                                        Fill="{StaticResource RadPanelBar_SplitterPath_OuterBackground}"
                                        Data="M12,0 L13,0 L14,0 L14,1 L14,2 L13,2 L12,2 L12,1 z M8,0 L9,0 L10,0 L10,1 L10,2 L9,2 L8,2 L8,1 z M4,0 L5,0 L6,0 L6,1 L6,2 L5,2 L4,2 L4,1 z M0,0 L1,0 L2,0 L2,1 L2,2 L1,2 L0,2 L0,1 z"
                                        Margin="0 0 1 1"/>
                                <Path
                                        Fill="{StaticResource RadPanelBar_SplitterPath_InnerBackground}"
                                        Stretch="Fill"
                                        StrokeThickness="0"
                                        Margin="1 1 0 0"
                                        Data="M12,0 L13,0 L14,0 L14,1 L14,2 L13,2 L12,2 L12,1 z M8,0 L9,0 L10,0 L10,1 L10,2 L9,2 L8,2 L8,1 z M4,0 L5,0 L6,0 L6,1 L6,2 L5,2 L4,2 L4,1 z M0,0 L1,0 L2,0 L2,1 L2,2 L1,2 L0,2 L0,1 z"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder}"/>
        <Setter Property="BorderThickness" Value="{StaticResource RadPanelBar_Splitter_BorderThickness}"/>
        <Setter Property="Background" Value="{StaticResource RadPanelBar_SplitterBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 2 0 2"/>
        <Setter Property="Cursor" Value="SizeNS"/>
    </Style>
    <Style TargetType="telerikNavigation:RadPanelBar" BasedOn="{StaticResource RadPanelbarBaseStyle}" x:Key="RadPanelBarStyle"/>
    <Style TargetType="telerikNavigation:RadPanelBar" BasedOn="{StaticResource RadPanelBarStyle}"/>
    <Style TargetType="telerikNavigation:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}" x:Key="RadPanelBarItemStyle"/>
    <Style TargetType="telerikNavigation:RadPanelBarItem" BasedOn="{StaticResource RadPanelBarItemStyle}"/>
    <Style TargetType="telerikNavigation:PanelBarGridSplitter" BasedOn="{StaticResource PanelBarGridSplitterStyle}"/>
    <chat:DataFormTemplateSelector x:Key="DataFormTemplateSelector">
        <chat:DataFormTemplateSelector.CheckBoxTemplate>
            <DataTemplate>
                <CheckBox Margin="5" x:Name="check" chat:DataFormAutoBind.BindEditProperty="IsChecked" Content="{Binding PropertyDescriptor.DisplayName}"/>
            </DataTemplate>
        </chat:DataFormTemplateSelector.CheckBoxTemplate>
        <chat:DataFormTemplateSelector.TextInputTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <TextBox chat:DataFormAutoBind.BindEditProperty="Text"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.TextInputTemplate>
        <chat:DataFormTemplateSelector.DateTimeTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <telerik1:RadDateTimePicker chat:DataFormAutoBind.BindEditProperty="SelectedValue"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.DateTimeTemplate>
        <chat:DataFormTemplateSelector.ComboBoxTemplate>
            <DataTemplate>
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding PropertyDescriptor.DisplayName}" Margin="0 0 0 5"/>
                    <telerik1:RadComboBox chat:DataFormAutoBind.BindEditProperty="SelectedValue" ItemsSource="{Binding DataSource}" DisplayMemberPath="DisplayName" SelectedValuePath="Value"/>
                </StackPanel>
            </DataTemplate>
        </chat:DataFormTemplateSelector.ComboBoxTemplate>
    </chat:DataFormTemplateSelector>
    <chat:MessageTemplateSelector x:Key="MessageTemplateSelector" x:Shared="false">
        <chat:MessageTemplateSelector.CalendarMessageTemplate>
            <DataTemplate>
                <telerik1:RadCalendar SelectedDate="{Binding SelectedDate, Mode=TwoWay}" DisplayDate="{Binding DisplayDate}"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CalendarMessageTemplate>
        <chat:MessageTemplateSelector.ListMessageTemplate>
            <DataTemplate>
                <telerik1:RadListBox
                        ItemsSource="{Binding Source}"
                        SelectionMode="{Binding SelectionMode}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                        DisplayMemberPath="{Binding DisplayMemberPath}"
                        ItemTemplate="{Binding ItemTemplate}"
                        IsSynchronizedWithCurrentItem="False"
                        MinWidth="220">
                    <telerik1:EventToCommandBehavior.EventBindings>
                        <telerik1:EventBinding Command="{Binding SelectionChangedCommand}" EventName="SelectionChanged" PassEventArgsToCommand="True"/>
                    </telerik1:EventToCommandBehavior.EventBindings>
                </telerik1:RadListBox>
            </DataTemplate>
        </chat:MessageTemplateSelector.ListMessageTemplate>
        <chat:MessageTemplateSelector.TextMessageTemplate>
            <DataTemplate>
                <chat:TextMessageControl/>
            </DataTemplate>
        </chat:MessageTemplateSelector.TextMessageTemplate>
        <chat:MessageTemplateSelector.CardTemplate>
            <DataTemplate>
                <chat:Card/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CardTemplate>
        <chat:MessageTemplateSelector.ImageCardTemplate>
            <DataTemplate>
                <chat:ImageCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageCardTemplate>
        <chat:MessageTemplateSelector.ProductCardTemplate>
            <DataTemplate>
                <chat:ProductCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ProductCardTemplate>
        <chat:MessageTemplateSelector.WeatherCardTemplate>
            <DataTemplate>
                <chat:WeatherCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.WeatherCardTemplate>
        <chat:MessageTemplateSelector.FlightCardTemplate>
            <DataTemplate>
                <chat:FlightCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.FlightCardTemplate>
        <chat:MessageTemplateSelector.CarouselTemplate>
            <DataTemplate>
                <chat:CarouselCard/>
            </DataTemplate>
        </chat:MessageTemplateSelector.CarouselTemplate>
        <chat:MessageTemplateSelector.DataFormTemplate>
            <DataTemplate>
                <ItemsControl ItemsSource="{Binding Fields}" ItemTemplateSelector="{StaticResource DataFormTemplateSelector}" Margin="5" MinWidth="220"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.DataFormTemplate>
        <chat:MessageTemplateSelector.ImageTemplate>
            <DataTemplate>
                <Image Source="{Binding Source}" Width="{Binding Size.Width}" Height="{Binding Size.Height}" Stretch="{Binding Stretch}"/>
            </DataTemplate>
        </chat:MessageTemplateSelector.ImageTemplate>
        <chat:MessageTemplateSelector.GifTemplate>
            <DataTemplate>
                <MediaElement Width="{Binding Size.Width}" Height="{Binding Size.Height}" Stretch="{Binding Stretch}" Source="{Binding Source}" LoadedBehavior="Play" UnloadedBehavior="Play">
                    <telerik1:EventToCommandBehavior.EventBindings>
                        <telerik1:EventBinding Command="{Binding MediaEndedCommand}" EventName="MediaEnded" PassEventArgsToCommand="True"/>
                    </telerik1:EventToCommandBehavior.EventBindings>
                </MediaElement>
            </DataTemplate>
        </chat:MessageTemplateSelector.GifTemplate>
    </chat:MessageTemplateSelector>
    <Style x:Key="ChatButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <Border x:Name="BorderVisual" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FFFE952A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#FFFE952A"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChatToggleButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid>
                        <Border x:Name="BorderVisual" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#FF777792"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FFFE952A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#FFFE952A"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChatScrollViewerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollContentPresenter
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Margin="0 0 -1 -1">
                                <Border
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                        BorderThickness="0 0 1 1"
                                        BorderBrush="{StaticResource ScrollBarOuterBorder_Normal}"
                                        Background="{StaticResource ScrollViewerIntersectionRectangle}"/>
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Margin="0 0 -1 0"
                                    BorderThickness="{StaticResource ScrollViewerVerticalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    HorizontalAlignment="Right"
                                    Orientation="Vertical"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Margin="0 0 0 -1"
                                    telerik1:TouchManager.TouchMode="None"
                                    BorderThickness="{StaticResource ScrollViewerHorizontalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    VerticalAlignment="Bottom"
                                    Orientation="Horizontal"
                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableWidth}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChatRatingStyle" TargetType="telerikInput:RadRating">
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource Rating_Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Rating_BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadRating">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard Duration="0">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter/>
                        </Border>
                        <Rectangle x:Name="FocusVisualElement"
                                IsHitTestVisible="false"
                                Visibility="Collapsed"
                                StrokeThickness="1"
                                Stroke="{StaticResource FocusBrushBlack}"
                                StrokeDashArray="1 2"
                                RadiusX="1"
                                RadiusY="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeBreakControlStyle" TargetType="{x:Type chat:TimeBreakControl}">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TimeBreakControl}">
                    <TextBlock
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{Binding Header}"
                            Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:TimeBreakControl}" BasedOn="{StaticResource TimeBreakControlStyle}"/>
    <Style x:Key="TypingIndicatorStyle" TargetType="{x:Type chat:TypingIndicator}">
        <Setter Property="Background" Value="#FF000000"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Padding" Value="16 0"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TypingIndicator}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Grid.Loaded">
                                <BeginStoryboard>
                                    <Storyboard Name="waitingAnimation" RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="Dot1" BeginTime="0:0:0.1" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Dot2" BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Dot3" BeginTime="0:0:0.3" Storyboard.TargetProperty="Opacity" From=".3" To="0.7" AutoReverse="True" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Image Source="{TemplateBinding Icon}" Stretch="UniformToFill" Width="28" Height="28" RenderOptions.BitmapScalingMode="HighQuality" SnapsToDevicePixels="True">
                            <Image.Clip>
                                <EllipseGeometry RadiusX="14" RadiusY="14" Center="14, 14"/>
                            </Image.Clip>
                        </Image>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0">
                            <Ellipse Name="Dot1" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8"/>
                            <Ellipse Name="Dot2" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8" Margin="4 0 0 0"/>
                            <Ellipse Name="Dot3" Fill="{TemplateBinding Background}" Opacity=".3" Width="8" Height="8" Margin="4 0 0 0"/>
                        </StackPanel>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{TemplateBinding Text}" Opacity="0.8" Margin="5 -2 5 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:TypingIndicator}" BasedOn="{StaticResource TypingIndicatorStyle}"/>
    <Style TargetType="{x:Type chat:InlineMessageControl}" x:Key="InlineMessageControlStyle">
        <Style.Resources>
            <Style TargetType="telerik1:RadCalendar" BasedOn="{StaticResource RadCalendarStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="telerik1:RadListBox" BasedOn="{StaticResource RadListBoxStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="CornerRadiusValue" Value="10"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:InlineMessageControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <mat:Shadow Grid.Column="1" ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" CornerRadius="{Binding CalculatedCornerRadius}" Background="#FFFFFFFF"/>
                        <Grid Grid.Column="1" x:Name="ContentPresenterGrid">
                            <mat:ClipBorder CornerRadius="{Binding CalculatedCornerRadius}">
                                <ContentPresenter/>
                            </mat:ClipBorder>
                        </Grid>
                        <ItemsControl
                                ItemsSource="{Binding ReportActions}"
                                x:Name="ReportActionsInline"
                                HorizontalAlignment="Center"
                                Grid.Row="1"
                                Grid.Column="1"
                                Visibility="{Binding ReportCommandsVisibility}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik1:RadButton Command="{Binding Command}" CommandParameter="{Binding}" Content="{Binding Text}" Visibility="{Binding CommandButtonVisibility}" Margin="5 5 5 0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock x:Name="CreationDateTextBlock"
                                Grid.Row="0"
                                Grid.Column="2"
                                Margin="5 0"
                                FontSize="10"
                                Visibility="{Binding CreationDateVisibility}"
                                Text="{Binding CreationDate, StringFormat={}{0:t}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Opacity="0.8"/>
                        <TextBlock x:Name="StatusTextBlock"
                                Text="{Binding Status}"
                                Visibility="{Binding StatusVisibility}"
                                Grid.Row="2"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Margin="0 5"
                                Opacity="0.8"
                                FontSize="10"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Alignment}" Value="Right">
                            <Setter TargetName="CreationDateTextBlock" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="StatusTextBlock" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Null}">
                            <Setter TargetName="StatusTextBlock" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <BeginStoryboard.Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.280"/>
                                    </Storyboard>
                                </BeginStoryboard.Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextMessageControlStyle" TargetType="{x:Type chat:TextMessageControl}">
        <Style.Resources>
            <Style TargetType="TextBox"/>
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>
        <Setter Property="Text" Value="{Binding Text}"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:TextMessageControl}">
                    <Grid MinHeight="{TemplateBinding MinHeight}">
                        <Border x:Name="MessageBorder" Background="{TemplateBinding Background}">
                            <TextBox
                                    Foreground="{TemplateBinding Foreground}"
                                    BorderThickness="0"
                                    Padding="{TemplateBinding Padding}"
                                    Background="Transparent"
                                    x:Name="PART_TextMessageTextBox"
                                    VerticalAlignment="Center"
                                    telerik1:TouchManager.ShouldSuspendMousePromotion="True"
                                    IsReadOnly="True"
                                    TextWrapping="Wrap"
                                    ScrollViewer.PanningMode="None"
                                    AcceptsReturn="True"
                                    Text="{TemplateBinding Text}">
                                <telerik1:RadContextMenu.ContextMenu>
                                    <telerik1:RadContextMenu>
                                        <telerik1:RadMenuItem Command="ApplicationCommands.Copy"/>
                                        <telerik1:RadMenuItem Command="ApplicationCommands.SelectAll"/>
                                    </telerik1:RadContextMenu>
                                </telerik1:RadContextMenu.ContextMenu>
                            </TextBox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=HorizontalAlignment}" Value="Right">
                            <Setter Property="Background" Value="#FFFFC92B"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:InlineMessageControl}" BasedOn="{StaticResource InlineMessageControlStyle}"/>
    <Style TargetType="{x:Type chat:TextMessageControl}" BasedOn="{StaticResource TextMessageControlStyle}"/>
    <Style x:Key="MessageGroupStyle" TargetType="{x:Type chat:MessageGroup}">
        <Setter Property="HorizontalAlignment" Value="{Binding Alignment}"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="ItemsSource" Value="{Binding Messages}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <chat:InlineMessageControl ContentTemplateSelector="{StaticResource MessageTemplateSelector}" Content="{Binding Message}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:MessageGroup}">
                    <DockPanel>
                        <Image
                                Source="{Binding Author.Avatar}"
                                DockPanel.Dock="{Binding AvatarAlignment}"
                                Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                SnapsToDevicePixels="True"
                                Margin="0 20 0 0"
                                Height="28"
                                Width="28"
                                VerticalAlignment="Top"
                                Stretch="UniformToFill">
                            <Image.Clip>
                                <EllipseGeometry RadiusX="14" RadiusY="14" Center="14, 14"/>
                            </Image.Clip>
                        </Image>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="20"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Opacity="0.8" TextElement.FontSize="10" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <TextBlock x:Name="CreationDateTextBlock" Text="{Binding CreationDate, StringFormat={}{0:t}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"/>
                                <TextBlock x:Name="AuthorNameTextBlock" Text="{Binding Author.Name, StringFormat=', {0}'}" Visibility="{Binding Author.IsCurrent, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                            </StackPanel>
                            <ItemsPresenter Grid.Row="1"/>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CreationDateTextBlock" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="AuthorNameTextBlock" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:MessageGroup}" BasedOn="{StaticResource MessageGroupStyle}"/>
    <Style x:Key="ChatMessageListStyle" TargetType="{x:Type chat:ChatMessageList}">
        <Setter Property="Padding" Value="16 20 16 11"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsPresenter}, Path=ActualWidth}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatMessageList}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled"
                                CanContentScroll="True"
                                PanningMode="None"
                                BorderThickness="0"
                                Background="{x:Null}"
                                Style="{StaticResource ChatScrollViewerStyle}"
                                Margin="0 -1 0 0">
                            <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatMessageList}" BasedOn="{StaticResource ChatMessageListStyle}"/>
    <Style x:Key="ChatCardBaseStyle" TargetType="{x:Type chat:Card}">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FFC0C0D6"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="MinHeight" Value="28"/>
    </Style>
    <Style x:Key="ChatCardTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ChatCardSubTitleStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="CardStyle" TargetType="{x:Type chat:Card}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:Card}">
                    <Border
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Margin="5 5 5 10">
                                <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                                <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                                <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap"/>
                            </StackPanel>
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding ReportActions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik1:RadButton Margin="5 0 5 5" Command="{Binding Command}" Content="{Binding Text}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageCardStyle" TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource, Mode=TwoWay}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ImageCard}">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" Stretch="UniformToFill" Grid.Row="0" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="1" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap"/>
                        </StackPanel>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik1:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProductCardStyle" TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Rating" Value="{Binding Rating, Mode=TwoWay}"/>
        <Setter Property="Price" Value="{Binding Price, Mode=TwoWay}"/>
        <Setter Property="RatingItemsCount" Value="{Binding RatingItemsCount}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ProductCard}">
                    <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" Stretch="UniformToFill" Grid.Row="0" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="Title" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}"/>
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}"/>
                            <telerik1:RadRating
                                    NumberOfItemsToGenerate="{TemplateBinding RatingItemsCount}"
                                    Value="{TemplateBinding Rating}"
                                    Precision="Exact"
                                    IsReadOnly="True"
                                    Margin="0 0 0 5"
                                    Visibility="{Binding RatingItemsCount, Converter={StaticResource NumberToVisibilityConverter}}"
                                    Style="{StaticResource ChatRatingStyle}"/>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap" Margin="0 0 0 5"/>
                            <TextBlock x:Name="Price" Text="{TemplateBinding Price}" Style="{StaticResource ChatCardTitleStyle}"/>
                        </StackPanel>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik1:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Price" Value="{x:Null}">
                            <Setter TargetName="Price" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WeatherCardStyle" TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource ChatCardBaseStyle}">
        <Style.Triggers>
            <Trigger Property="CardOrientation" Value="Landscape">
                <Setter Property="Width" Value="260"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}"/>
        <Setter Property="SubTitle" Value="{Binding SubTitle, Mode=TwoWay}"/>
        <Setter Property="Text" Value="{Binding Text, Mode=TwoWay}"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="CardOrientation" Value="{Binding CardOrientation, Mode=TwoWay}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="ImageDisplayMode" Value="{Binding ImageDisplayMode, Mode=TwoWay}"/>
        <Setter Property="Temperature" Value="{Binding Temperature, Mode=TwoWay}"/>
        <Setter Property="Humidity" Value="{Binding Humidity, Mode=TwoWay}"/>
        <Setter Property="Dew" Value="{Binding Dew, Mode=TwoWay}"/>
        <Setter Property="Pressure" Value="{Binding Pressure, Mode=TwoWay}"/>
        <Setter Property="Wind" Value="{Binding Wind, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:WeatherCard}">
                    <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="Title" Grid.ColumnSpan="2" Text="{TemplateBinding Title}" Style="{StaticResource ChatCardTitleStyle}" HorizontalAlignment="Center" Margin="0 20 0 0"/>
                        <Image x:Name="CardImage" Source="{Binding ImageSource}" HorizontalAlignment="Left" Width="{TemplateBinding Width}" Stretch="UniformToFill" Grid.Row="1" Grid.ColumnSpan="2"/>
                        <StackPanel x:Name="TitleStackPanel" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 10 10 5">
                            <TextBlock x:Name="SubTitle" Text="{TemplateBinding SubTitle}" Style="{StaticResource ChatCardSubTitleStyle}" TextAlignment="Center"/>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Text}" TextWrapping="Wrap" TextAlignment="Center"/>
                            <TextBlock x:Name="Temperature" Text="{TemplateBinding Temperature}" TextWrapping="Wrap" FontSize="30" TextAlignment="Center"/>
                        </StackPanel>
                        <Border x:Name="CardDetails"
                                Grid.Row="3"
                                Grid.ColumnSpan="2"
                                Padding="5 5 5 10"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="HumidityRow" Height="Auto"/>
                                    <RowDefinition x:Name="DewRow" Height="Auto"/>
                                    <RowDefinition x:Name="PressureRow" Height="Auto"/>
                                    <RowDefinition x:Name="WindRow" Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock telerik1:LocalizationManager.ResourceKey="Chat_Humidity" TextWrapping="Wrap" Grid.Row="0" FontWeight="SemiBold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Humidity}" TextWrapping="Wrap" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock telerik1:LocalizationManager.ResourceKey="Chat_Dew" TextWrapping="Wrap" Grid.Row="1" FontWeight="SemiBold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Dew}" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock telerik1:LocalizationManager.ResourceKey="Chat_Pressure" TextWrapping="Wrap" Grid.Row="2" FontWeight="SemiBold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Pressure}" TextWrapping="Wrap" Grid.Row="2" Grid.Column="1"/>
                                <TextBlock telerik1:LocalizationManager.ResourceKey="Chat_WindSpeed" TextWrapping="Wrap" Grid.Row="3" FontWeight="SemiBold" HorizontalAlignment="Right" Margin="0 0 5 0"/>
                                <TextBlock Text="{TemplateBinding Wind}" TextWrapping="Wrap" Grid.Row="3" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <telerik1:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CardOrientation}" Value="Landscape">
                            <Setter TargetName="CardImage" Property="MaxWidth" Value="100"/>
                            <Setter TargetName="CardImage" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="CardImage" Property="Grid.RowSpan" Value="5"/>
                            <Setter TargetName="CardImage" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="Title" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="Title" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleStackPanel" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="CardDetails" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="CardDetails" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="CardDetails" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="CardDetails" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Row" Value="4"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ActionResultsItemsControl" Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImageDisplayMode}" Value="Thumbnail">
                            <Setter TargetName="CardImage" Property="Margin" Value="10 10 10 5"/>
                            <Setter TargetName="CardImage" Property="Width" Value="80"/>
                            <Setter TargetName="CardImage" Property="Height" Value="80"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                            <Setter TargetName="CardImage" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="CardImage" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Portrait"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Margin" Value="0 10 0 0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CardOrientation}" Value="Landscape"/>
                                <Condition Binding="{Binding ImageDisplayMode}" Value="Stretch"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CardImage" Property="Width" Value="120"/>
                            <Setter TargetName="CardImage" Property="Stretch" Value="Uniform"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SubTitle" Value="{x:Null}">
                            <Setter TargetName="SubTitle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Temperature" Value="{x:Null}">
                            <Setter TargetName="Temperature" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Humidity" Value="{x:Null}">
                            <Setter TargetName="HumidityRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Dew" Value="{x:Null}">
                            <Setter TargetName="DewRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Pressure" Value="{x:Null}">
                            <Setter TargetName="PressureRow" Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="Wind" Value="{x:Null}">
                            <Setter TargetName="WindRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlightCardStyle" TargetType="{x:Type chat:FlightCard}">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FFC0C0D6"/>
        <Setter Property="BorderThickness" Value="0 1"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="ActionResultsOrientation" Value="{Binding ActionResultsOrientation, Mode=TwoWay}"/>
        <Setter Property="PassengerName" Value="{Binding PassengerName}"/>
        <Setter Property="Flights" Value="{Binding Flights}"/>
        <Setter Property="Total" Value="{Binding Total}"/>
        <Setter Property="ImageSource" Value="{Binding ImageSource}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:FlightCard}">
                    <Border CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}" Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition x:Name="TotalRow" Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="PassengerName" Orientation="Vertical" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10">
                                <TextBlock telerik1:LocalizationManager.ResourceKey="Chat_Passenger" Style="{StaticResource ChatCardTitleStyle}" Margin="0"/>
                                <TextBlock Text="{TemplateBinding PassengerName}" Style="{StaticResource ChatCardTitleStyle}" FontWeight="Normal" Margin="0"/>
                            </StackPanel>
                            <Border Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <TextBlock x:Name="DepartureLabel"
                                    Grid.Row="1"
                                    HorizontalAlignment="Left"
                                    telerik1:LocalizationManager.ResourceKey="Chat_Departure"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    FontSize="16"
                                    Margin="10 10 5 0"/>
                            <TextBlock x:Name="ArrivalsLabel"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    TextAlignment="Right"
                                    telerik1:LocalizationManager.ResourceKey="Chat_Arrival"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    FontSize="16"
                                    Margin="5 10 10 0"/>
                            <ItemsControl x:Name="FlightsItemsControl" Grid.Row="2" Grid.ColumnSpan="2" Margin="10 0 10 10" ItemsSource="{TemplateBinding Flights}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0 15">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding DepartureCity}" Style="{StaticResource ChatCardSubTitleStyle}" Margin="0 0 0 -5" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding DepartureAirport}" FontSize="30" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding DepartureDateTime, StringFormat={}{0:d}}" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding DepartureDateTime, StringFormat={}{0:t}}" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <Image x:Name="CardImage"
                                                    Grid.Column="1"
                                                    Grid.RowSpan="3"
                                                    MaxWidth="50"
                                                    MaxHeight="50"
                                                    Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"
                                                    Stretch="Uniform"/>
                                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding ArrivalCity}" Style="{StaticResource ChatCardSubTitleStyle}" TextAlignment="Right" Margin="0 0 0 -5" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding ArrivalAirport}" TextAlignment="Right" FontSize="30" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding ArrivalDateTime, StringFormat={}{0:d}}" TextAlignment="Right" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding ArrivalDateTime, StringFormat={}{0:t}}" TextAlignment="Right" FontSize="11" FontWeight="Bold" TextWrapping="Wrap"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock
                                    Grid.Row="3"
                                    TextAlignment="Left"
                                    telerik1:LocalizationManager.ResourceKey="Chat_Total"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Margin="10 10 5 10"
                                    FontWeight="Normal"/>
                            <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    TextAlignment="Right"
                                    Style="{StaticResource ChatCardTitleStyle}"
                                    Margin="5 10 10 10"
                                    Text="{Binding Total, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type chat:FlightCard}}}"/>
                            <ItemsControl x:Name="ActionResultsItemsControl" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding ReportActions}" Margin="5 0 5 10">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik1:RadButton Margin="5 5 5 0" Command="{Binding Command}" Content="{Binding Text}" helpers:ThemeHelper.FocusVisualMargin="0"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="{Binding ActionResultsOrientation}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ActionResultsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="ActionResultsItemsControl" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FlightsItemsControl, Path=HasItems}" Value="False">
                            <Setter TargetName="FlightsItemsControl" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="DepartureLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ArrivalsLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="PassengerName" Value="{x:Null}">
                            <Setter TargetName="PassengerName" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Total" Value="{x:Null}">
                            <Setter TargetName="TotalRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CarouselCardStyle" TargetType="{x:Type chat:CarouselCard}">
        <Style.Resources>
            <Style TargetType="{x:Type telerikNavigation:CarouselItemContentPresenter}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                            <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource MessageTemplateSelector}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type chat:Card}" BasedOn="{StaticResource CardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ImageCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ProductCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource WeatherCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type chat:FlightCard}" BasedOn="{StaticResource FlightCardStyle}">
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>
        <Setter Property="Source" Value="{Binding Source, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:CarouselCard}">
                    <Border
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type chat:InlineMessageControl}}, Path=DataContext.CalculatedCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <telerik1:RadCarousel HorizontalScrollBarVisibility="Hidden" Height="{Binding CarouselHeight}" ItemsSource="{TemplateBinding Source}" SelectedItem="{Binding SelectedItem}">
                                <telerik1:RadCarousel.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <telerik1:RadCarouselPanel IsScalingEnabled="False" IsContinuous="True" ItemsPerPage="3">
                                            <telerik1:RadCarouselPanel.Path>
                                                <Path Stretch="Fill">
                                                    <Path.Data>
                                                        <LineGeometry StartPoint="300,200" EndPoint="20,200"/>
                                                    </Path.Data>
                                                </Path>
                                            </telerik1:RadCarouselPanel.Path>
                                        </telerik1:RadCarouselPanel>
                                    </ItemsPanelTemplate>
                                </telerik1:RadCarousel.ItemsPanel>
                                <telerik1:EventToCommandBehavior.EventBindings>
                                    <telerik1:EventBinding Command="{Binding LoadedCommand}" EventName="Loaded" PassEventArgsToCommand="True"/>
                                </telerik1:EventToCommandBehavior.EventBindings>
                            </telerik1:RadCarousel>
                            <Grid HorizontalAlignment="Stretch">
                                <telerik1:CarouselScrollButton x:Name="PART_PageLeftButton" HorizontalAlignment="Left" CarouselScrollButtonType="LineLeft" Height="30" Margin="10 0 0 0"/>
                                <telerik1:CarouselScrollButton x:Name="PART_PageRightButton" HorizontalAlignment="Right" CarouselScrollButtonType="LineRight" Height="30" Margin="0 0 10 0"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:Card}" BasedOn="{StaticResource CardStyle}"/>
    <Style TargetType="{x:Type chat:ImageCard}" BasedOn="{StaticResource ImageCardStyle}"/>
    <Style TargetType="{x:Type chat:ProductCard}" BasedOn="{StaticResource ProductCardStyle}"/>
    <Style TargetType="{x:Type chat:WeatherCard}" BasedOn="{StaticResource WeatherCardStyle}"/>
    <Style TargetType="{x:Type chat:FlightCard}" BasedOn="{StaticResource FlightCardStyle}"/>
    <Style TargetType="{x:Type chat:CarouselCard}" BasedOn="{StaticResource CarouselCardStyle}"/>
    <Style x:Key="ChatOverlayStyle" TargetType="{x:Type chat:ChatOverlay}">
        <Setter Property="HeaderBackground" Value="#FFD2D5E8"/>
        <Setter Property="FooterBackground" Value="#FFD2D5E8"/>
        <Setter Property="ActionsBackground" Value="{StaticResource ChatToolBarBackground}"/>
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="-1"/>
        <Setter Property="Background" Value="#FFE8EBF4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatOverlay}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Header" Height="Auto"/>
                                <RowDefinition x:Name="Main"/>
                                <RowDefinition x:Name="Footer" Height="Auto"/>
                                <RowDefinition x:Name="Actions"/>
                            </Grid.RowDefinitions>
                            <Grid MinHeight="48">
                                <Border Background="{TemplateBinding HeaderBackground}"/>
                                <ContentControl
                                        Content="{Binding OverlayViewModel.Header}"
                                        ContentTemplate="{Binding OverlayViewModel.HeaderTemplate}"
                                        FontSize="13"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Margin="10 5"/>
                            </Grid>
                            <Border x:Name="PART_MainBorder" Background="{TemplateBinding MainBackground}" Grid.Row="1">
                                <ContentPresenter/>
                            </Border>
                            <Grid Grid.Row="2" MinHeight="48">
                                <Border Background="{TemplateBinding FooterBackground}"/>
                                <ContentControl
                                        Content="{Binding OverlayViewModel.Footer}"
                                        ContentTemplate="{Binding OverlayViewModel.FooterTemplate}"
                                        FontSize="13"
                                        FontWeight="SemiBold"
                                        VerticalAlignment="Center"
                                        Margin="10 5"/>
                            </Grid>
                            <Border
                                    Grid.Row="3"
                                    Background="{TemplateBinding ActionsBackground}"
                                    BorderThickness="0 1 0 0"
                                    MinHeight="48"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="0 0 1 1"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ItemsControl ItemsSource="{Binding ReportActions}" x:Name="ReportActionsOverlay" HorizontalAlignment="Right">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <telerik1:RadButton
                                                    Margin="0 0 10 0"
                                                    Command="{Binding Command}"
                                                    CommandParameter="{Binding}"
                                                    Content="{Binding Text}"
                                                    Visibility="{Binding CommandButtonVisibility}"
                                                    VerticalAlignment="Center"
                                                    MinWidth="60"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatOverlay}" BasedOn="{StaticResource ChatOverlayStyle}"/>
    <Style x:Key="ChatPopupPlaceholderStyle" TargetType="{x:Type chat:ChatPopupPlaceholder}">
        <Setter Property="MaxHeight" Value="200"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chat:ChatPopupPlaceholder}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0"/>
                            <ItemsControl ItemsSource="{Binding ReportActions}" x:Name="ReportActionsPopup" HorizontalAlignment="Center" Grid.Row="1">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <telerik1:RadButton Margin="3" CommandParameter="{Binding}" Command="{Binding Command}" Content="{Binding Text}" Visibility="{Binding CommandButtonVisibility}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:ChatPopupPlaceholder}" BasedOn="{StaticResource ChatPopupPlaceholderStyle}"/>
    <Style x:Key="RadChatStyle" TargetType="{x:Type controls:RadChat}">
        <Style.Setters>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Background" Value="#FFE8EBF4"/>
            <Setter Property="BorderBrush" Value="#FF777792"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MessageListTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="MessagePopupTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="MessageOverlayTemplateSelector" Value="{StaticResource MessageTemplateSelector}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:RadChat}">
                        <Grid>
                            <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="2">
                                <Border BorderBrush="#FFFFFFFF" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <chat:ChatMessageList x:Name="PART_MessageList" Grid.Row="0" Margin="{TemplateBinding Padding}"/>
                                        <chat:ChatPopupPlaceholder x:Name="PART_PopupPlaceholder" Grid.Row="1" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}"/>
                                        <ItemsControl x:Name="PART_SuggestionItemsControl"
                                                Grid.Row="2"
                                                chat:ScrollViewerScrollingHelper.IsEnabled="True"
                                                Padding="12 4"
                                                ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActions}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActionsVisibility}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <telerik1:RadButton x:Name="SuggestionButton"
                                                            AutomationProperties.Name="{Binding Text}"
                                                            telerik1:TouchManager.ShouldSuspendMousePromotion="True"
                                                            Command="{Binding Command}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}}"
                                                            HorizontalAlignment="Center"
                                                            Margin="4"
                                                            CornerRadius="4"
                                                            MinHeight="28">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image
                                                                    Source="{Binding Icon}"
                                                                    Height="16"
                                                                    Width="16"
                                                                    Stretch="UniformToFill"
                                                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}">
                                                                <Image.Clip>
                                                                    <EllipseGeometry RadiusX="8" RadiusY="8" Center="8, 8"/>
                                                                </Image.Clip>
                                                            </Image>
                                                            <TextBlock
                                                                    Text="{Binding Text}"
                                                                    VerticalAlignment="Center"
                                                                    Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadButton}}, Path=Padding}"
                                                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToVisibilityConverter}}"/>
                                                        </StackPanel>
                                                    </telerik1:RadButton>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.Template>
                                                <ControlTemplate TargetType="ItemsControl">
                                                    <ScrollViewer HorizontalScrollBarVisibility="Auto" BorderThickness="0" Background="{x:Null}" Style="{StaticResource ChatScrollViewerStyle}">
                                                        <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </ItemsControl.Template>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=SuggestedActionsOrientation}"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                        <chat:TypingIndicator
                                                Grid.Row="3"
                                                Text="{TemplateBinding TypingIndicatorText}"
                                                Icon="{TemplateBinding TypingIndicatorIcon}"
                                                Visibility="{TemplateBinding TypingIndicatorVisibility}"
                                                x:Name="PART_TypingIndicator"/>
                                        <Border x:Name="InputBoxContainer" Grid.Row="4" BorderThickness="0 1 0 0" Height="48" Background="#FFFFFFFF" BorderBrush="{TemplateBinding BorderBrush}">
                                            <DockPanel>
                                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                                    <telerik1:RadToggleButton x:Name="PART_ToolBarButton"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolBarCommands.Count, Converter={StaticResource NumberToVisibilityConverter}}"
                                                            Style="{StaticResource ChatToggleButtonStyle}"
                                                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsToolBarOpen, Mode=TwoWay}"
                                                            Margin="5 0">
                                                        <telerik1:RadGlyph Glyph="{StaticResource GlyphMoreHorizontal}" TextOptions.TextRenderingMode="Aliased"/>
                                                    </telerik1:RadToggleButton>
                                                    <telerik1:RadButton x:Name="SendButton"
                                                            Style="{StaticResource ChatButtonStyle}"
                                                            Margin="5 0"
                                                            Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SendCommand}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Path Fill="{Binding ElementName=SendButton, Path=Foreground}" StrokeThickness="0" Data="M1,9 L18,9 0,16 z M0,0 L18,8 1,8 z" Stretch="None" SnapsToDevicePixels="True"/>
                                                    </telerik1:RadButton>
                                                </StackPanel>
                                                <telerik1:RadWatermarkTextBox x:Name="PART_InputBox"
                                                        AutomationProperties.Name="Input Box"
                                                        WatermarkContent="{TemplateBinding InputBoxWatermarkContent}"
                                                        AcceptsReturn="True"
                                                        Background="Transparent"
                                                        DisabledBackground="Transparent"
                                                        BorderThickness="0"/>
                                            </DockPanel>
                                        </Border>
                                        <Border
                                                Name="PART_ToolBar"
                                                Grid.Row="5"
                                                Height="48"
                                                CornerRadius="0 0 1 1"
                                                Background="{StaticResource ChatToolBarBackground}"
                                                BorderThickness="0 1 0 0"
                                                SnapsToDevicePixels="True"
                                                Visibility="{Binding ElementName=PART_ToolBarButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Margin="-1 0">
                                            <Border BorderBrush="#FFFFFFFF" SnapsToDevicePixels="True" BorderThickness="1 1 1 0">
                                                <ItemsControl ItemsSource="{TemplateBinding ToolBarCommands}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <telerik1:RadButton
                                                                    ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplateSelector}"
                                                                    ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:RadChat}}, Path=ToolBarCommandTemplate}"
                                                                    Command="{Binding Command}"
                                                                    Content="{Binding}"
                                                                    Margin="5 5 0 5"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Border>
                                        </Border>
                                        <chat:ChatOverlay x:Name="PART_Overlay" Grid.RowSpan="5" Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="InputBoxContainer" Property="Background" Value="{StaticResource ControlBackground_Disabled}"/>
                            </Trigger>
                            <Trigger Property="SuggestedActionsOrientation" Value="Vertical">
                                <Setter TargetName="PART_SuggestionItemsControl" Property="MaxHeight" Value="116"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type controls:RadChat}" BasedOn="{StaticResource RadChatStyle}"/>
    <Style x:Key="AIPromptScrollViewerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollContentPresenter
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Margin="0 0 -1 -1">
                                <Border
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                        BorderThickness="0 0 1 1"
                                        BorderBrush="{StaticResource ScrollBarOuterBorder_Normal}"
                                        Background="{StaticResource ScrollViewerIntersectionRectangle}"/>
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Margin="0 0 -1 0"
                                    BorderThickness="{StaticResource ScrollViewerVerticalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    HorizontalAlignment="Right"
                                    Orientation="Vertical"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Margin="0 0 0 -1"
                                    telerik1:TouchManager.TouchMode="None"
                                    BorderThickness="{StaticResource ScrollViewerHorizontalScrollBarBorderThickness}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    VerticalAlignment="Bottom"
                                    Orientation="Horizontal"
                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    IsTabStop="False"
                                    Minimum="0"
                                    Maximum="{TemplateBinding ScrollableWidth}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="AIPromptRadioButtonTemplate" TargetType="telerik1:RadRadioButton">
        <Grid>
            <Border x:Name="BorderVisual"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Border
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{x:Null}"
                        CornerRadius="{TemplateBinding InnerCornerRadius}"
                        BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
            </Border>
            <Border x:Name="FocusVisual"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Visibility="Collapsed"
                    IsHitTestVisible="False"
                    BorderThickness="1"
                    Background="{x:Null}"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.FocusBrush)}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
            </Border>
            <ContentPresenter x:Name="Content"
                    Margin="{TemplateBinding Padding}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsBackgroundVisible" Value="False"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsBackgroundVisible" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="0"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AIPromptRadioButtonForegroundChecked}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
                <Setter Property="Background" Value="{StaticResource ControlBackground_MouseOver}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_MouseOver}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
                <Setter Property="Background" Value="{StaticResource ControlBackground_Pressed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="Opacity" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="AIPromptRadioButtonStyle" TargetType="telerik1:RadRadioButton">
        <Setter Property="helpers:ThemeHelper.FocusBrush" Value="{StaticResource ControlOuterBorder_Focused}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template" Value="{StaticResource AIPromptRadioButtonTemplate}"/>
    </Style>
    <ItemsPanelTemplate x:Key="SuggestionsItemsPanel">
        <StackPanel Orientation="Vertical"/>
    </ItemsPanelTemplate>
    <Style x:Key="SuggestionsExpanderStyle" TargetType="telerik1:RadExpander" BasedOn="{StaticResource RadExpanderStyle}">
        <Setter Property="Padding" Value="0 12 0 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsExpanded" Value="True"/>
    </Style>
    <Style x:Key="AIPromptAccentButtonStyle" TargetType="telerik1:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AIPromptButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AIPromptButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AIPromptButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="85"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="InnerBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="0"
                                    BorderBrush="{StaticResource AIPromptInnerBorderNormal}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptButtonBackgroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptButtonBackgroundPressed}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource AIPromptInnerBorderPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptInputViewStyle" TargetType="controls:AIPromptInputView">
        <Setter Property="Padding" Value="16"/>
        <Setter Property="BorderBrush" Value="{StaticResource AIPromptBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="FooterBackground" Value="{StaticResource AIPromptFooterBackground}"/>
        <Setter Property="FooterMinHeight" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptInputView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled"
                                CanContentScroll="True"
                                PanningMode="None"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                Style="{StaticResource AIPromptScrollViewerStyle}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <telerik1:RadWatermarkTextBox x:Name="PART_InputTextBox"
                                        AcceptsReturn="True"
                                        MaxHeight="200"
                                        TextWrapping="Wrap"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        Text="{Binding InputText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        Style="{Binding InputTextBoxStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                <telerik1:RadExpander
                                        Grid.Row="1"
                                        x:Name="PART_SuggestionsExpander"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Style="{Binding SuggestionsExpanderStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        HorizontalHeaderAlignment="Left"
                                        Visibility="{Binding AreSuggestionsVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Header="{Binding SuggestionsHeaderContent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                        HeaderTemplate="{Binding SuggestionsHeaderContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}">
                                    <ItemsControl ItemsSource="{Binding Suggestions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}" ItemsPanel="{StaticResource SuggestionsItemsPanel}" ItemTemplate="{Binding SuggestionItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                </telerik1:RadExpander>
                            </Grid>
                        </ScrollViewer>
                        <Border x:Name="Footer"
                                MinHeight="{TemplateBinding FooterMinHeight}"
                                Background="{TemplateBinding FooterBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Grid.Row="1">
                            <Border BorderThickness="1" BorderBrush="{StaticResource AIPromptInnerBorderNormal}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <telerik1:RadButton x:Name="PART_PromptButton"
                                Grid.Row="1"
                                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=Left}"
                                Style="{StaticResource AIPromptAccentButtonStyle}"
                                Content="{Binding InputButtonContent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                ContentTemplate="{Binding InputButtonContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                Command="{Binding PromptRequestCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource AIPromptDisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputItemsControlStyle" TargetType="chat:AIPromptOutputItemsControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputItemsControl">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" BorderThickness="0" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputItemStyle" TargetType="chat:AIPromptOutputItem">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Padding" Value="12 8 12 4"/>
        <Setter Property="Background" Value="{StaticResource AIPromptOutputItemBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AIPromptForeground}"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="InputText" Value="{Binding InputText}"/>
        <Setter Property="ResponseText" Value="{Binding ResponseText}"/>
        <Setter Property="Rating" Value="{Binding Rating}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputItem">
                    <Grid>
                        <mat:Shadow x:Name="Shadow"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="PART_Title" Text="{Binding Title}" FontWeight="SemiBold" FontSize="14"/>
                                <TextBlock x:Name="PART_InputText"
                                        Grid.Row="1"
                                        Text="{Binding InputText}"
                                        Margin="0 8 0 0"
                                        FontSize="11"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputText, Converter={StaticResource NullToVisibilityConverter}}"/>
                            </Grid>
                            <TextBlock x:Name="PART_ResponseText" Grid.Row="1" Text="{Binding ResponseText}" Margin="0 12 0 0" TextWrapping="Wrap"/>
                            <Grid Grid.Row="2" Margin="0 12 0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <telerik1:RadButton x:Name="PART_CopyButton"
                                            Command="{Binding OutputItemCopyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            VerticalAlignment="Center"
                                            IsBackgroundVisible="False"
                                            MinWidth="80">
                                        <StackPanel Orientation="Horizontal">
                                            <telerik1:RadSvgImage
                                                    Width="16"
                                                    Height="16"
                                                    Focusable="False"
                                                    UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/copy_icon.svg"
                                                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                    IsTabStop="False"/>
                                            <TextBlock Text="{telerik1:LocalizableResource Key=AIPrompt_Copy}" Margin="4 0 0 0"/>
                                        </StackPanel>
                                    </telerik1:RadButton>
                                    <telerik1:RadButton x:Name="PART_RetryButton"
                                            Command="{Binding OutputItemRetryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            VerticalAlignment="Center"
                                            Margin="4 0"
                                            IsBackgroundVisible="False"
                                            MinWidth="80">
                                        <StackPanel Orientation="Horizontal">
                                            <telerik1:RadSvgImage
                                                    Width="16"
                                                    Height="16"
                                                    Focusable="False"
                                                    UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/retry_icon.svg"
                                                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                    IsTabStop="False"/>
                                            <TextBlock Text="{telerik1:LocalizableResource Key=AIPrompt_Retry}" Margin="6 0 0 0"/>
                                        </StackPanel>
                                    </telerik1:RadButton>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <telerik1:RadRadioButton x:Name="PART_LikeButton"
                                            IsChecked="{Binding Rating, Converter={StaticResource DoubleToBooleanConverter}, ConverterParameter='like'}"
                                            Command="{Binding OutputItemRatingChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            MinWidth="22"
                                            MinHeight="22"
                                            Margin="4 0"
                                            Style="{StaticResource AIPromptRadioButtonStyle}">
                                        <telerik1:RadSvgImage
                                                Width="16"
                                                Height="16"
                                                Focusable="False"
                                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/thumbs_up_icon.svg"
                                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                IsTabStop="False"/>
                                    </telerik1:RadRadioButton>
                                    <telerik1:RadRadioButton x:Name="PART_DislikeButton"
                                            IsChecked="{Binding Rating, Converter={StaticResource DoubleToBooleanConverter}, ConverterParameter='dislike'}"
                                            Command="{Binding OutputItemRatingChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:RadAIPrompt}}"
                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            MinWidth="22"
                                            MinHeight="22"
                                            Style="{StaticResource AIPromptRadioButtonStyle}">
                                        <telerik1:RadSvgImage
                                                Width="16"
                                                Height="16"
                                                Focusable="False"
                                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/thumbs_down_icon.svg"
                                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                                IsTabStop="False"/>
                                    </telerik1:RadRadioButton>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Title" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="PART_InputText" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="PART_ResponseText" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputPagerStyle" TargetType="chat:AIPromptOutputPager">
        <Setter Property="Background" Value="{StaticResource AIPromptFooterBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AIPromptBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
        <Setter Property="Foreground" Value="{StaticResource AIPromptForeground}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Padding" Value="12 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chat:AIPromptOutputPager">
                    <Border x:Name="Footer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border BorderThickness="1" BorderBrush="{StaticResource AIPromptInnerBorderNormal}">
                            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <telerik1:RadButton x:Name="PART_MoveToFirstPage"
                                            Command="{Binding MoveToFirstPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            Padding="0"
                                            MinWidth="22"
                                            MinHeight="22"
                                            IsBackgroundVisible="False">
                                        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowBackward}"/>
                                    </telerik1:RadButton>
                                    <telerik1:RadButton x:Name="PART_MoveToPreviousPage"
                                            Command="{Binding MoveToPreviousPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            Margin="4 0"
                                            Padding="0"
                                            MinWidth="22"
                                            MinHeight="22"
                                            IsBackgroundVisible="False">
                                        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrow60Left}"/>
                                    </telerik1:RadButton>
                                    <telerik1:RadButton x:Name="PART_MoveToNextPage"
                                            Command="{Binding MoveToNextPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            Padding="0"
                                            MinWidth="22"
                                            MinHeight="22"
                                            IsBackgroundVisible="False">
                                        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrow60Right}"/>
                                    </telerik1:RadButton>
                                    <telerik1:RadButton x:Name="PART_MoveToLastPage"
                                            Command="{Binding MoveToLastPageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                            Padding="0"
                                            MinWidth="22"
                                            MinHeight="22"
                                            IsBackgroundVisible="False"
                                            Margin="4 0">
                                        <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowForward}"/>
                                    </telerik1:RadButton>
                                </StackPanel>
                                <StackPanel x:Name="PagerStackPanel" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="8 0">
                                    <TextBlock x:Name="PART_CurrentPageIndex" Text="{Binding CurrentPageIndex, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                    <TextBlock Text="/"/>
                                    <TextBlock x:Name="PART_PageCount" Text="{Binding PageCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PagerStackPanel" Property="Opacity" Value="0.6"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AIPromptDisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AIPromptOutputViewStyle" TargetType="controls:AIPromptOutputView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptOutputView">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <chat:AIPromptOutputItemsControl x:Name="PART_AIPromptOutputItemsControl" ItemsSource="{Binding PagedOutputItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"/>
                        <chat:AIPromptOutputPager x:Name="PART_AIPromptOutputPager" Visibility="{Binding IsPagingEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <DataTemplate x:Key="AIPromptCommandBaseTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <telerik1:RadSvgImage x:Name="Icon"
                    Width="16"
                    Height="16"
                    Focusable="False"
                    UriSource="{Binding Icon}"
                    Margin="4 0 8 0"
                    IsTabStop="False"
                    OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                    SizeType="SizeToContent"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"/>
            <TextBlock Grid.Column="1" Text="{Binding Text}"/>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger SourceName="Icon" Property="UriSource" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="AIPromptCommandPanelBarItemStyle" TargetType="telerik1:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource AIPromptCommandBaseTemplate}"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
    </Style>
    <Style x:Key="AIPromptCommandGroupPanelBarItemStyle" TargetType="telerik1:RadPanelBarItem" BasedOn="{StaticResource RadPanelbarItemBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource AIPromptCommandBaseTemplate}"/>
        <Setter Property="ItemsSource" Value="{Binding Commands}"/>
    </Style>
    <chat:CommandsPanelBarItemContainerStyleSelector x:Key="CommandsPanelBarItemContainerStyleSelector" AIPromptCommandStyle="{StaticResource AIPromptCommandPanelBarItemStyle}" AIPromptCommandGroupStyle="{StaticResource AIPromptCommandGroupPanelBarItemStyle}"/>
    <Style x:Key="AIPromptCommandViewStyle" TargetType="controls:AIPromptCommandView">
        <Setter Property="Padding" Value="16"/>
        <Setter Property="CommandsPanelBarItemContainerStyleSelector" Value="{StaticResource CommandsPanelBarItemContainerStyleSelector}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AIPromptCommandView">
                    <Grid>
                        <telerik1:RadPanelBar x:Name="PART_CommandsPanelBar"
                                ItemsSource="{Binding Commands, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                                ItemContainerStyleSelector="{TemplateBinding CommandsPanelBarItemContainerStyleSelector}"
                                Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptItemStyle" TargetType="controls:RadAIPromptItem">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource AIPromptItemForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10 2"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MinWidth" Value="22"/>
        <Setter Property="Margin" Value="0 0 4 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadSvgImage
                            Background="#01FFFFFF"
                            Width="16"
                            Height="16"
                            UriSource="{Binding}"
                            SizeType="SizeToContent"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                            IsTabStop="False"
                            Focusable="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RadAIPromptItem">
                    <Grid x:Name="Root" Background="#01FFFFFF">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="InnerBorder"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="0"
                                    BorderBrush="{StaticResource AIPromptInnerBorderNormal}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" ContentSource="Icon" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="Header" Grid.Column="1" ContentSource="Header" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4 0 0 0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptItemBackgroundActive}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AIPromptItemBorderBrushActive}"/>
                            <Setter Property="Opacity" Value="1" TargetName="InnerBorder"/>
                        </Trigger>
                        <Trigger SourceName="Root" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptItemBackgroundMouseOver}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AIPromptItemBorderBrushMouseOver}"/>
                            <Setter Property="Opacity" Value="1" TargetName="InnerBorder"/>
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptInputItemStyle" TargetType="controls:RadAIPromptInputItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Header" Value="{telerik1:LocalizableResource Key=AIPrompt_InputViewHeaderText}"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"/>
    </Style>
    <Style x:Key="RadAIPromptOutputItemStyle" TargetType="controls:RadAIPromptOutputItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Header" Value="{telerik1:LocalizableResource Key=AIPrompt_OutputViewHeaderText}"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/output_view_icon.svg"/>
    </Style>
    <Style x:Key="RadAIPromptCommandsItemStyle" TargetType="controls:RadAIPromptCommandsItem" BasedOn="{StaticResource RadAIPromptItemStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Icon" Value="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/commands_view_icon.svg"/>
    </Style>
    <Style x:Key="AIPromptWatermarkTextBoxStyle" TargetType="telerik1:RadWatermarkTextBox" BasedOn="{StaticResource RadWatermarkTextBoxStyle}">
        <Setter Property="WatermarkContent" Value="{telerik1:LocalizableResource Key=AIPrompt_WatermarkContent}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 12"/>
    </Style>
    <DataTemplate x:Key="AIPromptSuggestionItemContentTemplate">
        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
    </DataTemplate>
    <ControlTemplate x:Key="RadAIPromptTemplate" TargetType="controls:RadAIPrompt">
        <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid x:Name="Grid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="Header">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 1">
                        <Border BorderThickness="1" BorderBrush="{StaticResource AIPromptInnerBorderNormal}"/>
                    </Border>
                    <ItemsPresenter Margin="{TemplateBinding Padding}" MinHeight="{TemplateBinding HeaderMinHeight}"/>
                    <telerik1:RadButton x:Name="PART_ClosePopupButton"
                            Grid.Column="1"
                            IsBackgroundVisible="False"
                            HorizontalAlignment="Right"
                            MinHeight="0"
                            Padding="0"
                            Margin="0 0 8 0"
                            Width="22"
                            Height="22"
                            Visibility="Collapsed">
                        <telerik1:RadGlyph Glyph="{StaticResource GlyphClose}"/>
                    </telerik1:RadButton>
                </Grid>
                <ContentPresenter x:Name="PART_Content" Grid.Row="1" Content="{Binding ActiveItem.Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AIPromptDisabledBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AIPromptDisabledBorderBrush}"/>
            </Trigger>
            <Trigger Property="controls:RadAIPromptButton.IsInPopup" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter TargetName="PART_ClosePopupButton" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadAIPromptStyle" TargetType="controls:RadAIPrompt">
        <Setter Property="Foreground" Value="{StaticResource AIPromptForeground}"/>
        <Setter Property="Background" Value="{StaticResource AIPromptBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AIPromptBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeaderBackground" Value="{StaticResource AIPromptHeaderBackground}"/>
        <Setter Property="HeaderMinHeight" Value="30"/>
        <Setter Property="Padding" Value="16 0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="InputTextBoxStyle" Value="{StaticResource AIPromptWatermarkTextBoxStyle}"/>
        <Setter Property="InputButtonContent" Value="{telerik1:LocalizableResource Key=AIPrompt_GenerateButtonText}"/>
        <Setter Property="InputButtonContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <telerik1:RadSvgImage
                                Width="16"
                                Height="16"
                                OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"/>
                        <TextBlock Text="{Binding}" Margin="4 0 0 0"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SuggestionsHeaderContent" Value="{telerik1:LocalizableResource Key=AIPrompt_SuggestionsHeaderText}"/>
        <Setter Property="SuggestionItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadButton x:Name="SuggestionButton"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            ContentTemplate="{StaticResource AIPromptSuggestionItemContentTemplate}"
                            Content="{Binding .}"
                            Command="{Binding SuggestionClickedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadAIPrompt}}}"
                            CommandParameter="{Binding}"
                            Margin="0 0 0 8"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SuggestionsExpanderStyle" Value="{StaticResource SuggestionsExpanderStyle}"/>
        <Setter Property="Template" Value="{StaticResource RadAIPromptTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadAIPromptButtonStyle" TargetType="controls:RadAIPromptButton">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="24"/>
        <Setter Property="BorderThickness" Value="{StaticResource AIPromptButtonBorderThickness}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AIPromptButtonBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource AIPromptButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource AIPromptButtonForeground}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="PopupWidth" Value="408"/>
        <Setter Property="PopupHeight" Value="438"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RadAIPromptButton">
                    <Grid>
                        <Border x:Name="Border"
                                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                                    BorderBrush="{StaticResource AIPromptInnerBorderNormal}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <telerik1:RadSvgImage
                                        UriSource="pack://application:,,,/Telerik.Windows.Controls.ConversationalUI;component/AIPrompt/Icons/input_view_icon.svg"
                                        OverrideColor="{Binding Foreground, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}"
                                        Width="16"
                                        Height="16"
                                        Focusable="False"/>
                            </Border>
                        </Border>
                        <Popup x:Name="PART_AIPromptPopup"
                                AllowsTransparency="True"
                                StaysOpen="True"
                                Focusable="False"
                                Placement="Top"
                                HorizontalOffset="{TemplateBinding PopupHorizontalOffset}"
                                VerticalOffset="{TemplateBinding PopupVerticalOffset}"
                                IsOpen="{Binding IsPopupOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Width="{TemplateBinding PopupWidth}"
                                Height="{TemplateBinding PopupHeight}">
                            <Grid Margin="4">
                                <mat:Shadow Background="{StaticResource AIPromptButtonPopupBackground}" ShadowDepth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.ShadowDepth)}" CornerRadius="3"/>
                                <Border x:Name="AIPromptPopupBorder"
                                        CornerRadius="3"
                                        Background="{StaticResource AIPromptButtonPopupBackground}"
                                        BorderBrush="{StaticResource AIPromptButtonPopupBorderBrush}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        BorderThickness="1">
                                    <ContentPresenter Content="{TemplateBinding AIPrompt}" telerik1:CornerRadiusHelper.ClipRadius="3"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptButtonBackgroundMouseOver}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AIPromptButtonBorderBrushMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AIPromptButtonBackgroundPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type chat:AIPromptOutputItemsControl}" BasedOn="{StaticResource AIPromptOutputItemsControlStyle}"/>
    <Style TargetType="{x:Type chat:AIPromptOutputItem}" BasedOn="{StaticResource AIPromptOutputItemStyle}"/>
    <Style TargetType="{x:Type chat:AIPromptOutputPager}" BasedOn="{StaticResource AIPromptOutputPagerStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptInputView}" BasedOn="{StaticResource AIPromptInputViewStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptOutputView}" BasedOn="{StaticResource AIPromptOutputViewStyle}"/>
    <Style TargetType="{x:Type controls:AIPromptCommandView}" BasedOn="{StaticResource AIPromptCommandViewStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptItem}" BasedOn="{StaticResource RadAIPromptItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptInputItem}" BasedOn="{StaticResource RadAIPromptInputItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptOutputItem}" BasedOn="{StaticResource RadAIPromptOutputItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptCommandsItem}" BasedOn="{StaticResource RadAIPromptCommandsItemStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPrompt}" BasedOn="{StaticResource RadAIPromptStyle}"/>
    <Style TargetType="{x:Type controls:RadAIPromptButton}" BasedOn="{StaticResource RadAIPromptButtonStyle}"/>
</ResourceDictionary>
